@model TechCertain.WebUI.Models.DocumentViewModel


<div id="content" class="container">
    <!-- widget grid -->

    <div class="row">
        <h1 class="page-title txt-color-blueDark">
            <!-- PAGE HEADER -->
            <i class="fa-fw fa fa-home"></i>  <span>
                <a href="~/File/ManageDocuments"> My Documents</a>
                > Manage Documents
            </span>
        </h1>
    </div>
    <div class="row">
        <span>
            <a onclick="location.href='@Url.Action("Index", "Home")'" style="color:dodgerblue;font-size:30px; cursor:pointer"> <span _ngcontent-c7="" class="icon-append fa fa-arrow-circle-left"></span>  </a>
        </span>
    </div>

    <header style="background-color:#EF4E45; color:white">
        <h2>Document</h2>
    </header>

    <div class="row">
        <!-- widget content -->
        <form action="#" id="wizard-1" role="form" class="client-form container-fluid" data-toggle="validator" method="post" accept-charset="utf-8" novalidate="true">

            <!-- SmartWizard html -->
            <div id="CreateDocsmartwizard" class="sw-main sw-theme-circles">
                <ul class="nav nav-tabs step-anchor">
                    <li class="nav-item active"><a href="#tab1" class="nav-link">1<br><small>Start</small></a></li>
                    <li class="nav-item"><a href="#tab2" class="nav-link">2<br><small>Review</small></a></li>
                    <li class="nav-item"><a href="#tab3" class="nav-link">3<br><small>Agree</small></a></li>

                </ul>

                <div class="sw-container tab-content">
                    <div id="tab1" class="tab-pane step-content" style="display: block;">
                        <h3><strong>Details </strong> - Complete Information</h3>
                        @Html.HiddenFor(m => m.DocumentId)
                        <br />
                        <h3><strong>Setup </strong></h3>


                        <div class="form-group">
                            <div class="input-group">
                                @*<span class="input-group-addon"><i class="fa fa-file-text fa-lg fa-fw"></i></span>*@
                                @Html.TextBoxFor(m => m.Name, new { style = "Width:100%", @placeholder = Model.Name + "Name" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="input-group">
                                @*<span class="input-group-addon"><i class="fa fa-file-text fa-lg fa-fw"></i></span>*@
                                @Html.TextAreaFor(m => m.Description, new { style = "Width:100%", @placeholder = Model.Description + "Description" })
                            </div>
                        </div>

                        @if (Model == null)
                        {
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-file-text fa-lg fa-fw"></i></span>
                                    <select id="documentType" name="DocumentType" class="form-control input-lg">
                                        <option value="" selected="">-- Select --</option>
                                        <option value="0">Wording</option>
                                        <option value="1">Certificate</option>
                                        <option value="2">Schedule</option>
                                        <option value="3">Payment Confirmation</option>
                                        <option value="4">Invoice</option>
                                    </select>
                                </div>
                            </div>
                        }
                    </div>
                    <div id="tab2" class="tab-pane step-content">
                        <h3><strong>Review </strong></h3>
                        @Html.TextAreaFor(m => m.Content)
                    </div>
                    <div id="tab3" class="tab-pane step-content">
                        <div>
                            <div class="page-body">
                                <div class="head">
                                    <h3 style="align-content:center">Document Has Been Saved</h3>
                                    <a class="btn btn-success btn-sm" href="@Url.Action("ManageDocuments", "File")"><i class="fa fa-arrow-circle-left"></i>Back </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="modal" id="ckmodal">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Select an Image</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div id="images" class="modal-body col-sm-12" style="overflow-y:auto; height:355px;">
                    </div>
                    <div class="modal-footer" style="display:flex;">
                        <label for="selImg" style="float:left;">Selected Image: </label>
                        <input type="text" id="selImg" name="selImg" style="float:left;width:52%;margin-left:.5rem;margin-right:1rem;">
                        <button id="importImg" type="button" class="btn btn-primary" data-dismiss="modal" onclick="importImg()">Import</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@section pagespecific {


    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.5.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/3.0.0/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/smartwizard/js/jquery.smartWizard.min.js" defer></script>
    <link href="~/smartwizard/cc/smart_wizard_theme_circles.css" rel="stylesheet" />
    <script src="~/ckeditor/ckeditor5-build-classic-tc/build/ckeditor.js"></script>
    <link href="~/css/ckeditor.css" rel="stylesheet" />


    <script type="text/javascript">

//// DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

           $('#CreateDocsmartwizard').smartWizard({
            selected: 0,  // Initial selected step, 0 = first step
            keyNavigation:true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
            autoAdjustHeight:false, // Automatically adjust content height
            cycleSteps: false, // Allows to cycle the navigation of steps
            backButtonSupport: true, // Enable the back button support
            useURLhash: true, // Enable selection of the step based on url hash
            lang: {  // Language variables
                next: 'Next',
                previous: 'Previous'
            },
            toolbarSettings: {
                toolbarPosition: 'bottom', // none, top, bottom, both
                toolbarButtonPosition: 'right', // left, right
                showNextButton: true, // show/hide a Next button
                showPreviousButton: true, // show/hide a Previous button

            },
            anchorSettings: {
                anchorClickable: true, // Enable/Disable anchor navigation
                enableAllAnchors: false, // Activates all anchors clickable all times
                markDoneStep: true, // add done css
                enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
            },
            contentURL: null, // content url, Enables Ajax content loading. can set as data data-content-url on anchor
            disabledSteps: [],    // Array Steps disabled
            errorSteps: [],    // Highlight step with errors
            theme: 'dots',
            transitionEffect: 'fade', // Effect on navigation, none/slide/fade
            transitionSpeed: '400'
           });

     $("#CreateDocsmartwizard").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
           debugger;
           var informationsheetstatus = $('#Status').val();
           var clientInformationSheet = $('#AnswerSheetId').val();

        if (stepNumber === 1) {
                          debugger;

             if (confirm("Are you sure you want to submit this document?")) {
                 console.log("submitted!");
                      const body = editor.getData();
                 var bodyElement = $("#@Html.IdFor(m => m.Content)");
			// hack because jquery will only escape text inside an element, so we'll store the text, & get the escaped text, and then resave that
			// using hack because escape(...) was deprecated

                 bodyElement.text(bodyElement.text(body).html());

                 var content = document.getElementById("editor");

                 $.ajax({
                     type: "POST",
                     url: '@Url.Action("CreateDocument", "File")',
                     data: $("#wizard-1").serialize() ,
                 })
                     .done(function (json) {
                         //var model = JSON.parse(json);
                         debugger;
                         $("#productAutoReview")
                         console.log(json);
                     })
                     .fail(function (err, ajaxOptions, thrownError) {
                         debugger;
                         alert("Unable to save." + err.responseText);
                         console.log(err);
                         console.log(ajaxOptions);
                         console.log(thrownError);
                     });
             } else {
                 return false;
             }
         }
     });

    </script>
    <script>
        function selectImg(img) {
            var filename = img.name;
            $('#selImg').val(filename);
        }
        function importImg() {
            var filename = $('#selImg').val();
            $('#importImg').val(filename);
        }
    </script>
}