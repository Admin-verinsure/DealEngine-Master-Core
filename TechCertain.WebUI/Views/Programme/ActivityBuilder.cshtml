@model TechCertain.WebUI.Models.Programme.ActivityViewModel

<div class="accordion" id="accordionExample">
    <div class="card">
        <div class="card-header" id="headingOne">
            <h2 class="mb-0">
                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Business Activity for Programme
                </button>
            </h2>
        </div>

        <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordionExample">
            <div class="card-body">
                @await Html.PartialAsync("BusinessActivityList", Model.ActivityListViewModel)
            </div>
            <div class="card-footer">
                <input class="btn btn-primary" type="button" value="Add Custom Business Activity" href="#myActivityModal">
                @*<div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <div class="smart-form">
                                    <div class="input-group">
                                        <label>
                                            <a href="#myActivityModal" id="ShowActivity" aria-hidden="true" style="color:red" data-toggle="modal"></a>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@

            </div>
        </div>
        <div class="card">
            <div class="card-header" id="headingTwo">
                <h2 class="mb-0">
                    <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Add Business Activity to Programme
                    </button>
                </h2>
            </div>
            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                <div class="card-body">
                    <form action="#" id="wizard-1" role="form" data-toggle="validator" method="post" accept-charset="utf-8" novalidate="true">
                        <div id="smartwizard" class="sw-main sw-theme-circles">
                            <ul class="nav nav-tabs step-anchor">
                                <li class="nav-item active"><a href="#tab1" class="nav-link">1<br><small>Edit</small></a></li>
                                <li class="nav-item"><a href="#tab2" class="nav-link">2<br><small>Submit</small></a></li>
                                <li class="nav-item"><a href="#tab3" class="nav-link">2<br><small>Confirm</small></a></li>

                            </ul>
                            <div class="tab-content">
                                @* Tab 1 *@
                                @Html.DisplayFor(m => m.Builder)
                                @* Tab 2 *@
                                @Html.DisplayFor(m => m.ActivityAttach)
                                @*Tab 3*@
                                @* Tab 4 *@

                                <div class="tab-pane" id="tab2">
                                    <br />
                                    <h3><strong>Setup </strong> - Programme Activities</h3>

                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label><strong>InclorExcl</strong></label>
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-file-text fa-lg fa-fw"></i></span>
                                                    @Html.DropDownListFor(m => m.ActivityAttach.SelectedProgramme, Model.ActivityAttach.BaseProgList)

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="tab-pane" id="tab2">
                                    <br />
                                    <h3><strong>Setup </strong> - Programme Activities</h3>

                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label><strong>InclorExcl</strong></label>
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-file-text fa-lg fa-fw"></i></span>
                                                    @Html.DropDownListFor(m => m.ActivityAttach.SelectedProgramme, Model.ActivityAttach.BaseProgList)

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div id="tab3" class="tab-pane step-content">
                                    <div>
                                        <div class="page-body">
                                            <div class="head">
                                                <h3 style="align-content:center">Activity Has Been Saved</h3>
                                                <a class="btn btn-success btn-xs" href="@Url.Action("ActivityBuilder", "Programme")"><i class="fa fa-arrow-circle-left"></i>Back </a>

                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="myActivityModal" class="modal" role="dialog">

    <!-- Modal content-->

    <div class="modal-content">

        <div class="modal-header">
            <h4 class="modal-title" style="color:blue; font-size:22px">Add Custom Activity</h4>
        </div>
        <div class="modal-body col-10">
            <form id="ProdForm">
                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label for="Level1List">Level 1 Classification Anzsci Code</label>w
                        <input list="Level1Anzi" class="form-control " id="class1Anzi" name="class1Anzi">
                        <datalist id="Level1Anzi">
                            @foreach (var classification in Model.Builder.Level1Classifications)
                            {
                                <option>@classification.AnzsciCode</option>
                            }
                        </datalist>
                    </div>
                    <div class="col-sm-3 form-group">
                        <label for="Level1">Level 1 Classification Description</label>
                        <input list="Level1Desc" class="form-control " id="class1Desc" name="class1Desc">
                        <datalist id="Level1Desc">
                            @foreach (var classification in Model.Builder.Level1Classifications)
                            {
                                <option>@classification.Description</option>
                            }
                        </datalist>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label for="Level2">Level 2 Classification</label>
                        <input list="Level2Anzi" class="form-control " id="class2Anzi" name="class2Anzi" />
                        <datalist id="Level2Anzi">

                            @foreach (var classification in Model.Builder.Level2Classifications)
                            {
                                <option>@classification.AnzsciCode</option>
                            }
                        </datalist>
                    </div>

                    <div class="col-sm-3 form-group">
                        <label for="Level2">Level 2 Classification Description</label>
                        <input list="Level2Desc" class="form-control " id="class2Desc" name="class2Desc">
                        <datalist id="Level2Desc">
                            @foreach (var classification in Model.Builder.Level2Classifications)
                            {
                                <option>@classification.Description</option>
                            }
                        </datalist>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label for="Level3">Level 3 Classification</label>
                        <input list="Level3Anzi" class="form-control " id="class3Anzi" name="class3Anzi" />
                        <datalist id="Level3Anzi">

                            @foreach (var classification in Model.Builder.Level3Classifications)
                            {
                                <option>@classification.AnzsciCode</option>
                            }
                        </datalist>
                    </div>

                    <div class="col-sm-3 form-group">
                        <label for="Level3">Level 3 Classification Description</label>
                        <input list="Level3Desc" class="form-control " id="class3Desc" name="class3Desc" />
                        <datalist id="Level3Desc">
                            @foreach (var classification in Model.Builder.Level3Classifications)
                            {
                                <option>@classification.Description</option>
                            }
                        </datalist>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label for="Level4">Level 4 Classification</label>
                        <input list="Level4Anzi" class="form-control " id="class4Anzi" name="class4Anzi" />
                        <datalist id="Level4Anzi">

                            @foreach (var classification in Model.Builder.Level4Classifications)
                            {
                                <option>@classification.AnzsciCode</option>
                            }
                        </datalist>
                    </div>

                    <div class="col-sm-3 form-group">
                        <label for="Level4">Level 4 Classification Description</label>
                        <input list="Level4Desc" class="form-control " id="class4Desc" name="class4Desc" />
                        <datalist id="Level4Desc">
                            @foreach (var classification in Model.Builder.Level1Classifications)
                            {
                                <option>@classification.Description</option>
                            }
                        </datalist>
                    </div>
                </div>

            </form>
        </div>
        <div class="modal-footer">
            <input type="Reset" value="Submit" class="btn btn-success" id="btnActivitySubmit" onclick="SubmitActivity()">
            <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel<i class="fa fa-close"></i></a>
        </div>
    </div>
</div>


@section pagespecific {
    <script src="~/bootstrap-multiselect/js/bootstrap-multiselect.min.js"></script>
    <link href="~/css/bootstrap-chosen.css" rel="stylesheet" />
    <script src="~/smartwizard/js/jquery.smartWizard.min.js" defer></script>
    <link href="~/smartwizard/cc/smart_wizard_theme_circles.css" rel="stylesheet" />
    <script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!

    function ShowActivityModel() {
         $("#myActivityModal").modal("show");
    }

        function GetBusinessActivityClassOneContentJson()
    {
        return {
            AnzsciCode: $('#class1Anzi').val(),
            Description: $('#class1Desc').val(),
            Classification: parseInt(1),
    	};
    }

    function GetBusinessActivityClassTwoContentJson()
    {
        return {
            AnzsciCode: $('#class2Anzi').val(),
            Description: $('#class2Desc').val(),
            Classification: parseInt(2),
    	};
    }

    function GetBusinessActivityClassThreeContentJson()
    {
        return {
            AnzsciCode: $('#class3Anzi').val(),
            Description: $('#class3Desc').val(),
            Classification: parseInt(3),
    	};
    }

    function GetBusinessActivityClassFourContentJson()
    {
        return {
            AnzsciCode: $('#class4Anzi').val(),
            Description: $('#class4Desc').val(),
            Classification: parseInt(4),

    	};
        }

        function GetActivityCreateContent() {
            return {
                ClassOne: GetBusinessActivityClassOneContentJson(),
                ClassTwo: GetBusinessActivityClassTwoContentJson(),
                ClassThree: GetBusinessActivityClassThreeContentJson(),
                ClassFour: GetBusinessActivityClassFourContentJson(),
            };
        }

    function SubmitActivity() {
        debugger;
        var postData = { model: GetActivityCreateContent() };

        $.ajax({
            type: "POST",
            url: '@Url.Action("CreateBusinessActivity", "Programme")',
            data:  postData,
	    })
		.done(function (json) {
            //var model = JSON.parse(json);
            $('#submitActivityModal').modal().show();
            $('#myActivityModal').modal().hide();
					})
					.fail(function (err, ajaxOptions, thrownError) {
	                    $('#failureModal').modal().show();
                    });
        }

    $(document).ready(function () {

	    // find all multiselect items and apply Chosen
		$('.cselect').each(function() {
			$('#'+this.id).chosen( { width: '100%' } );
        });

         $('#smartwizard').smartWizard({
            selected: 0,  // Initial selected step, 0 = first step
            keyNavigation:true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
            autoAdjustHeight:false, // Automatically adjust content height
            cycleSteps: false, // Allows to cycle the navigation of steps
            backButtonSupport: true, // Enable the back button support
            useURLhash: true, // Enable selection of the step based on url hash
            lang: {  // Language variables
                next: 'Next',
                previous: 'Previous'
            },
            toolbarSettings: {
                toolbarPosition: 'both', // none, top, bottom, both
                toolbarButtonPosition: 'right', // left, right
                showNextButton: true, // show/hide a Next button
                showPreviousButton: true, // show/hide a Previous button

            },
            anchorSettings: {
                anchorClickable: true, // Enable/Disable anchor navigation
                enableAllAnchors: false, // Activates all anchors clickable all times
                markDoneStep: true, // add done css
                enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
            },
            contentURL: null, // content url, Enables Ajax content loading. can set as data data-content-url on anchor
            disabledSteps: [],    // Array Steps disabled
            errorSteps: [],    // Highlight step with errors
            theme: 'dots',
            transitionEffect: 'fade', // Effect on navigation, none/slide/fade
            transitionSpeed: '400'
           });


           $("#smartwizard").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
               debugger;
                        event.preventDefault();

               if (stepNumber === 1) {
                   if (confirm("Are you sure you want to submit this document?")) {
                       console.log("submitted!");
                       var date = $("#wizard-1").serialize();

                       $.ajax({
                           type: "POST",
                           url: '@Url.Action("CreateProgrammeActivities", "Programme")',
                           data: $("#wizard-1").serialize() // serializes the form's elements.
                       })
                           .done(function (json) {
                               //var model = JSON.parse(json);
                               //$('#successModal').modal();
                               //$('#productAutoReview').text("");

                           })
                           .fail(function (err, ajaxOptions, thrownError) {
                               $('#failureModal').modal();
                               $('#productAutoReview').text(err.responseText);
                           });
                   }
           }
           });


    });
    </script>
}
