@model TechCertain.WebUI.Models.InformationViewModel

<div class="padding-10">
    <div id="proposalcreate-form" class="smart-form" novalidate="novalidate">
        @*@using (var tabs = Html.Bootstrap().Begin(new Tabs("ouTabs")))*@
        {
            @*@tabs.Tab("List All")
            @tabs.Tab("Edit")
            @tabs.Tab("Add")
            //@tabs.Tab("Search")*@
            using (tabs.BeginPanel())
            {
                <fieldset>
                    <div class="row">
                        <section class="col col-xs-12">
                            <!-- Since OU's are just a single feild, could probably replace this tabbed control with the jqGrid and its default add/edit/search functions -->
                            <script src="~/jquery/jquery.min.js"></script>
                            <script type="text/javascript">
                                $(window).on('load',function () {
							    $("#tblOU").jqGrid({
							        url: "/Services/GetOrganisationalUnits?informationId=@Model.AnswerSheetId",
							        datatype: "xml",
							        mtype: "GET",
									colNames: ["","Name"],
                                    colModel: [
                                        {
                                            name: "update", align: 'center', search: false, formatter: function (cellvalue, options, rowobject) { return '<button onclick="EditOU(\'' + cellvalue + '\'); SetCurrentTab(\'ouTabs-2\');" type="button" class="btn btn-success btn-sm"><i class="fa fa-edit"></i></button>'; }
                                        },
							            { name: "Name", align: 'center', key: 'true' },

									],
							        autowidth: true,
							        pager: "#pagerOU",
							        rowNum: 10,
							        rowList: [10, 20, 30],
							        sortname: "name",
							        sortorder: "desc",
							        viewrecords: true,
							        gridview: true,
							        autoencode: true
							    });
							    $("#tblOU").jqGrid('navGrid',
							    	'#pagerOU',
							    	{edit: false, add: false, del: false},
							    	//options
							    	{height:280,reloadAfterSubmit:false},
							    	// edit options
							    	{height:280,reloadAfterSubmit:false},
							    	// add options
							    	{reloadAfterSubmit:false},
							    	// del options
						    		{sopt:['eq','bw','cn']}
							    	// search options
							    );
							});
                            </script>
                            <table id="tblOU"><tr><td></td></tr></table>
                            <div id="pagerOU"></div>
                        </section>
                    </div>
                </fieldset>
            }
            //Edit Tab
            using (tabs.BeginPanel())
            {
                <fieldset id="fieldset">
                    <input id="OrganisationalUnitId" name="OrganisationalUnitId" type="hidden">
                    <div class="row">
                        <section class="col col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            <label class="label">Organisational Unit Name</label>
                            <label class="input">
                                <i></i>
                                <input data-type="TEXTBOX" data-name="ouOrganisationalUnitName" id="ouOrganisationalUnitName" name="ouOrganisationalUnitName" placeholder="Organisational Unit Name" value="" required>
                            </label>
                            <p class="validationContainer" id="validateouOrgUnitName"></p>

                        </section>
                    </div>

                    <div class="row" id="update">
                        <section class="col col-xs-12">
                            @*@Html.Bootstrap().Button().Text("Update").HtmlAttributes(new { onclick = "ValidateOU('#ouTabs-2', '#tblOU','ouTabs-1');" }).Class("btn-sm").Id("updateBoat")

                            @Html.Bootstrap().Button().Text("Cancel Update").HtmlAttributes(new { onclick = "ClearBoats('#ouTabs-2','ouTabs-1');" }).Class("btn-sm").Id("ClearBoat")*@

                        </section>
                    </div>
                </fieldset>
            }

            //Add Tab

            using (tabs.BeginPanel())
            {
                <fieldset id="fieldset">
                    <input id="OrganisationalUnitId" name="OrganisationalUnitId" type="hidden">
                    <div class="row">
                        <section class="col col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            <label class="label">Organisational Unit Name</label>
                            <label class="input">
                                <i></i>
                                <input data-type="TEXTBOX" data-name="ouOrganisationalUnitName" id="AddouOrganisationalUnitName" name="ouOrganisationalUnitName" placeholder="Organisational Unit Name" value="" required>
                            </label>
                            <p class="validationContainer" id="validateAddouOrgUnitName"></p>

                        </section>
                    </div>

                    <div class="row" id="update">
                        <section class="col col-xs-12">
                            @*@Html.Bootstrap().Button().Text("Add").HtmlAttributes(new { onclick = "ValidateAddOU('#ouTabs-3', '#tblOU','ouTabs-1');" }).Class("btn-sm").Id("AddupdateBoat")

                            @Html.Bootstrap().Button().Text("Clear and Cancel").HtmlAttributes(new { onclick = "ClearBoats('#ouTabs-3','ouTabs-1');" }).Class("btn-sm").Id("AddClearBoat")*@

                        </section>
                    </div>
                </fieldset>
            }
            /*using (tabs.BeginPanel())
            {
                <fieldset>
                    <div class="row">
                        <section class="col col-6">
                            <label class="label">Enter organisational unit name:</label>
                            <label class="input">
                                <input autocomplete="off" class="form-control" data-provide="typeahead" data-url="/Services/GetOrganisationalUnitName" id="ou" name="ou" type="text" placeholder="Organisational Unit Name" value="">
                            </label>
                            @*Html.Bootstrap().Button().Text("Update").HtmlAttributes(new { onclick = "GetOUDetails('#ou'); SetCurrentTab('ouTabs-2');" }).Class("btn-sm")*@
                        </section>
                    </div>
                </fieldset>
            }*/
        }
    </div>
</div>

<script type="text/javascript">



    function ValidateOU(tabId, tableId, currenttab) {

        var validity = true;
        var orgname = $('#ouOrganisationalUnitName').val();
        if (orgname == "") {
            $('#validateouOrgUnitName').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateouOrgUnitName').html("<i></i>");
        }
        if (validity) {
            AddOU(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return validity;
        }

    }

function AddOU(tabId, tableId) {
	var _sheetId = $('#AnswerSheetId').val();
	var _unitName = $('#ouOrganisationalUnitName').val();
	var _ouId = $('#OrganisationalUnitId').val();
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddOrganisationalUnit", "Services")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ name: _unitName, answerSheetId : _sheetId, organisationalUnitId : _ouId })
    })
        .done(function (data) {
            console.log(data);
		$.smallBox({
		    title: "Organisational unit ("+data.Name+") has been saved",
		    color: "#5F895F",
		    iconSmall: "fa fa-check bounce animated",
		    timeout: 4000
		});
		$('#SelectedOrganisationalUnits').append($('<option>', { value: data.OrganisationalUnitId, text: data.Name }));
		UpdateChosen();
		// update shared panels
		if ($('#sharedRevenueOverseasSalesOU').length > 0) { $('#sharedRevenueOverseasSalesOU').append($('<option>', { value: data.OrganisationalUnitId, text: data.Name })) };

		$(tableId).trigger( 'reloadGrid' );
		$(tabId + " :input").val("");
        $('#ouOrganisationalUnitName').val("");
    })
	.fail(function (jqXHR, textStatus ) {
		alert("There was an error while trying to save the Organisational Unit.");
	});
};

    function ValidateAddOU(tabId, tableId,currenttab) {
        var validity = true;
        var orgname = $('#AddouOrganisationalUnitName').val();
        if (orgname == "") {
            $('#validateAddouOrgUnitName').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddouOrgUnitName').html("<i></i>");
        }
        if (validity) {
            AddAddOU(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return validity;
        }

    }

function AddAddOU(tabId, tableId) {
	var _sheetId = $('#AnswerSheetId').val();
	var _unitName = $('#AddouOrganisationalUnitName').val();
	var _ouId = $('#AddOrganisationalUnitId').val();

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddOrganisationalUnit", "Services")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ name: _unitName, answerSheetId : _sheetId, organisationalUnitId : _ouId })
    })
        .done(function (data) {
            console.log(data);
		$.smallBox({
		    title: "Organisational unit ("+data.Name+") has been saved",
		    color: "#5F895F",
		    iconSmall: "fa fa-check bounce animated",
		    timeout: 4000
		});
		$('#AddSelectedOrganisationalUnits').append($('<option>', { value: data.OrganisationalUnitId, text: data.Name }));
		UpdateChosen();
		if ($('#sharedRevenueOverseasSalesOU').length > 0) { $('#sharedRevenueOverseasSalesOU').append($('<option>', { value: data.OrganisationalUnitId, text: data.Name })) };
		// reload grid
		$(tableId).trigger( 'reloadGrid' );
		$(tabId + " :input").val("");
        $('#ouOrganisationalUnitName').val("");
    })
	.fail(function (jqXHR, textStatus ) {
		alert("There was an error while trying to save the Organisational Unit.");
	});
};

    function EditOU(unitId) {
	var _sheetId = $('#AnswerSheetId').val();
	$.ajax({
		// change back once mono decides to fix
	    url: '@Url.Action("GetOrganisationalUnit", "Services")',
	    type: "Post",
		contentType: "application/json; charset=utf-8",
	    data: JSON.stringify({ unitId : unitId, answerSheetId : _sheetId })
	})
	.done(function (data) {
		$('#OrganisationalUnitId').val(data.OrganisationalUnitId);
		$('#ouOrganisationalUnitName').val(data.Name);
	});
};

</script>