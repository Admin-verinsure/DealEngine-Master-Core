@model TechCertain.WebUI.Models.InformationBuilderViewModel

    <div id="content">


        <section id="widget-grid" class="">
            <div class="row">
                <article class="col-sm-12 col-md-12 col-lg-6">
                    <!-- new widget -->
                    <div class="jarviswidget jarviswidget-color-blue" id="wid-id-2" data-widget-editbutton="true" data-widget-colorbutton="false">
                        <header>
                            <span class="widget-icon"> <i class="fa fa-comments txt-color-white"></i> </span>
                            <h2> Programme Templates </h2>
                        </header>
                        <!-- widget div-->
                        <div>

                            <table class="table table-striped table-hover table-condensed">
                                <thead>
                                    <tr>
                                        <th>Programm Name</th>
                                    </tr>
                                </thead>


                                <tbody>
                                    @foreach (var item in Model.InformationTemplates)
                                    {

                                        <tr onclick="location.href='@Url.Action("GetProgrammeSections", "Information",new { informationTemplateID =item.Id })'" style="cursor:pointer">

                                            <td>@item.Name</td>

                                        </tr>

                                    }
                                </tbody>

                            </table>

                        </div>
                    </div>
                </article>
            </div>
        </section>


    </div>
<!-- END MAIN CONTENT -->

@section pagespecific {
    <script src="/Scripts/datatables"></script>

    <script type="text/javascript">

        
    function CreateSection(information) {
        debugger;

         $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("GetProgrammeSections", "Information")',
        type: "Post",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ informationTemplateID: information})
    })
             .done(function (data) {
 
                 for (var i = 0; i < data.length; i++) {
                     debugger;
                var element1 = document.getElementById(data[i].Id);
                var section = document.createElement("Section");
                section.setAttribute("class", "col col-xs-12 col-sm-6 col-md-6 col-lg-6");
                if (data[i].Type == "DROPDOWNLIST") {
                    var label = document.createElement("label");
                    var br = document.createElement("br");
                    var labelname = data[i].Label;
                    label.setAttribute("value", labelname);
                    label.innerHTML = labelname;
                    var id = labelname.slice(-6);
                    var op = data[i].option;
                    var input = document.createElement("select");
                    input.setAttribute('type', 'DROPDOWN');
                    input.setAttribute('name', 'DROPDOWN');
                    input.setAttribute('id',id)
                    section.appendChild(label);
                    section.appendChild(br);
                    section.appendChild(input);
                    fncCreateSelectOption(input,op);
                    element1.appendChild(section);

                }else if (data[i].Type == "TEXTBOX") {
                    debugger;

                    var label1 = document.createElement("label");
                    var br = document.createElement("br");
                    var labelname = data[i].Label;
                    label1.setAttribute("value", labelname);
                    label1.innerHTML = labelname;
                    var input = document.createElement("input");
                    input.setAttribute('type', 'text');
                    input.setAttribute('name', 'TEXT');
                    section.appendChild(label1);
                    section.appendChild(br);
                    section.appendChild(input);
                    element1.appendChild(section);
                }

                   function fncCreateSelectOption(ele, list) {
                        debugger;
                       var objSelect = ele;
                       
                      for (var i = 0; i < list.length; i++) {
                        var split = list[i].Text.split("\n");
                        for (var j = 0; j < split.length; j++) {
                            var Item = new Option(split[j], split[j]);
                            objSelect.options[objSelect.length] = Item;
                        }

                      }
                   }
            }
             })
             .fail(function (jqXHR, textStatus, errorThrown) {
	                  alert("There was an error while trying to save the Claim.");
	          });

    };

        $(document).ready(function () {
            $('#tableProgrammeItems').DataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true
            })
        });
    </script>
}

