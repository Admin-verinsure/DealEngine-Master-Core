@model TechCertain.WebUI.Models.ExperimentalInfoBuilderViewModel

<div id="content">
    <div class="modal fade" id="addConditionalModal" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Set Conditions</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <input type="hidden" id="editingConditionalId">
                        <fieldset>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Set as Conditional for...</label>
                                <div class="col col-md-9" id="modalQuestionList">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Set trigger value</label>
                                <div class="col col-md-9">
                                    <select id="ddSelectConditional" class="form-control"></select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">On Trigger</label>
                                <div class="col col-md-9">
                                    <select id="ddConditionalVisibility" class="form-control">
                                        <option value=1>Show</option>
                                        <option value=0>Hide</option>
                                    </select>
                                </div>
                            </div>
                        </fieldset>

                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn-default btn" type="button" onclick="SetConditionals();">Save</button>
                    <button class="btn-default btn" type="button" onclick="$('#addConditionalModal').modal('hide');">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="objectTemplates" class="hidden">
        <div id="questionOptionsTemplate">
            <div class="col-md-12">
                <button type="button" class="btn btn-default dropdown-toggle pull-right" data-toggle="dropdown" tabindex="-1" aria-expanded="false">
                    Change Question Type <span class="caret"></span>
                </button>
                <ul class="dropdown-menu pull-right" role="menu">
                    <li class="divider"></li>
                    <li><a data-link="#textTemplate">Text</a></li>
                    @*<li><a data-link="#checkboxTemplate">Checkbox</a></li>
                        <li><a data-link="#radiobuttonTemplate">Radiobutton</a></li>*@
                    <li><a data-link="#dropdownTemplate">Drop Down</a></li>
                    <li><a data-link="#yesNoTemplate">Yes/No</a></li>

                </ul>
                <button type="button" class="btn btn-default pull-right" data-action="conditional">Set Conditional</button>

                <label class="checkbox-inline pull-right">
                    <input class="checkbox style-0" type="checkbox" name="QuestionNeedsReview">
                    <span>Needs Review</span>
                </label>
                <label class="checkbox-inline pull-right">
                    <input class="checkbox style-0" type="checkbox" name="QuestionNeedsMilestone">
                    <span>Needs Milestone</span>
                </label>
                <label class="checkbox-inline pull-right">
                    <input class="checkbox style-0" type="checkbox" name="QuestionReferUnderwriting">
                    <span>Refer Underwriting</span>
                </label>
                <label class="checkbox-inline pull-right">
                    <input class="checkbox style-0" type="checkbox" name="QuestionRequired">
                    <span>Required</span>
                </label>
            </div>
        </div>
        <div id="pageTemplate" data-template="pageTemplate">
            <fieldset data-type='page'>
                <legend>
                    <div class="form-group">
                        <div class="col-md-12">
                            <label><strong>New Panel - Enter Panel Title here</strong></label>
                            @Html.TextBox("PageTitle")
                        </div>
                    </div>
                </legend>
            </fieldset>
        </div>
        <div id="textTemplate" data-template="textTemplate">
            <fieldset data-type="text">
                <div class="form-group">
                    <div data-options="true" class="col-xs-12">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <label><strong>Enter Question Title here</strong></label>
                        @Html.TextBox("Question")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.TextBox("Answer")
                    </div>
                </div>

                <hr />
            </fieldset>
        </div>
        <div id="checkboxTemplate" data-template="checkboxTemplate">
            <fieldset data-type="checkbox">
                <div class="form-group">
                    <div data-options="true" class="col-xs-12">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <span class="checkbox">
                                    <label>
                                        <input class="checkbox style-0" checked="checked" type="checkbox">
                                        <span> Required</span>
                                    </label>
                                </span>
                            </span>
                            <input class="form-control" placeholder="" type="text">
                        </div>
                    </div>
                </div>
                <hr />
            </fieldset>
        </div>
        <div id="radiobuttonTemplate" data-template="radiobuttonTemplate">
            <fieldset data-type="radiobutton">
                @*@Html.Bootstrap().Alert("This option is currently under development, and its design may also be subject to change.").Style(AlertColor.Warning)*@
                <div class="form-group">
                    <div data-options="true" class="col-xs-12">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <label><strong>Enter Question Title here</strong></label>
                        @Html.TextBox("Question")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <label>Specify the values to be added to the radiobutton list, one per line</label>
                        @Html.TextArea("OptionNames")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="checkbox">
                            <label>
                                <input class="checkbox style-0" type="checkbox" name="HorizontalLayout">
                                <span>Use horizontal Radiobuttons? (If not selected radiobuttons will be displayed vertically)</span>
                            </label>
                        </div>
                    </div>
                </div>
                <hr />
            </fieldset>
        </div>
        <div id="dropdownTemplate" data-template="dropdownTemplate">
            <fieldset data-type="dropdown">
                @*@Html.Bootstrap().Alert("This option is currently under development, and its design may also be subject to change.").Style(AlertColor.Warning)*@
                <div class="form-group">
                    <div data-options="true" class="col-xs-12">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <label><strong>Enter Question Title here</strong></label>
                        @Html.TextBox("Question")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <label>Specify the values to be added to the dropdown, one per line</label>
                        @Html.TextArea("OptionNames")
                    </div>
                </div>
                <hr />
            </fieldset>
        </div>
        <div id="yesNoTemplate" data-template="yesNoTemplate">
            <fieldset data-type="dropdown">
                @*@Html.Bootstrap().Alert("This option is currently under development, and its design may also be subject to change.").Style(AlertColor.Warning)*@
                <div class="form-group">
                    <div data-options="true" class="col-xs-12">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <label><strong>Enter Question Title here</strong></label>
                        @Html.TextBox("Question")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <label>Specify the values to be added to the dropdown, one per line</label>
                        @Html.TextArea("OptionNames")
                    </div>
                </div>
                <hr />
            </fieldset>
        </div>
        <div id="mvRegPanelTemplate" data-template="mvRegPanelTemplate">
            <fieldset data-type="mvRegPanel">
                <div class="form-group">
                    <div data-options="true" class="col-xs-12">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <span>This Panel represents a series of questions and tables for collecting registered motor vehicle details.</span>
                    </div>
                </div>
                <hr />
            </fieldset>
        </div>

    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->

            <article class="col-sm-12 col-md-12 col-lg-8">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-1"
                     data-widget-colorbutton="false"
                     data-widget-editbutton="false"
                     data-widget-togglebutton="false"
                     data-widget-deletebutton="false"
                     data-widget-custombutton="false"
                     data-widget-sortable="false">
                    <header>
                        <h2>Panel Builder</h2>
                    </header>

                    <div role="content">
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            @*@Html.Bootstrap().Alert("This tool is currently under development, and may not be fully functional. Its design is also subject to change.").Style(AlertColor.Warning)*@
                            <form id="builderBody" class="form-horizontal" onsubmit="return SubmitForm();">
                                <fieldset data-type="header">
                                    <div class="form-group">
                                        <div class="col-xs-12">
                                            <label><strong>Programe Name</strong></label>
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-file-text fa-lg fa-fw"></i></span>
                                                @Html.TextBoxFor(m => m.Title)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-xs-12">
                                            <label><strong>Enter Programe Description</strong></label>
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-file-text fa-fw"></i></span>
                                                @Html.TextBoxFor(m => m.Description)
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                </fieldset>
                            </form>
                            <br />
                            <div>
                                <button id="btnAddQuestion" class="btn">Add Question</button>

                                <button id="btnAddPage" class="btn hidden">Add Page</button>
                                <button type="button" class="btn btn-default pull-right" tabindex="-1" data-action="delete">Delete this question.</button>

                                <button type="submit" class="btn btn-primary" form="builderBody">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>


@section pagespecific {
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/bootstrap-slider/bootstrap-slider.min.js"></script>
    <script type="text/javascript">

// DO NOT REMOVE : GLOBAL FUNCTIONS!

//pageSetUp();

var conditionals = {};

$(document).ready (function () {
	$("#builderBody").append (CreateTemplate ("#pageTemplate"));
	// Add Question
	$("#btnAddQuestion").click( function() {
		$("#builderBody").append (CreateTemplate ("#textTemplate"));
	});
	// Add Page
	$("#btnAddPage").click( function() {
		$("#builderBody").append (CreateTemplate ("#pageTemplate"));
	});
});

function CreateTemplate (templateId) {
	var templateCopy = $(templateId).children().clone();
	templateCopy.uniqueId();
	var uid = templateCopy.attr('id');
	var options = $("#questionOptionsTemplate").children().clone();
	$(options).find("a").each(function () {
		var attr = $(this).attr("data-link");
		if (attr != null)
			$(this).attr("href", "javascript:ChangeTemplate('#" + uid + "', '" + attr + "');");
	});
	$(options).find("button[data-action='delete']").each(function () {
		$(this).click(function () {
			ConfirmRemove("#" + uid);
		});
	});
	$(options).find("button[data-action='conditional']").each(function () {
		$(this).click(function () {
			ShowConditionalDialog("#" + uid);
		});
	});

	$(templateCopy).find('[data-options="true"]').append(options);
	return templateCopy;
}

function ChangeTemplate (sectionId, newTemplate) {
	var element = $(sectionId);
	if (element.length > 0) {
		CreateTemplate (newTemplate).insertAfter (element);
		element.remove();
	}
};

function ConfirmRemove(sectionId) {
	if (confirm ("Do you wish to remove this question? (This action cannot be undone)")) {
		var element = $(sectionId);
		if (element.length > 0) {
			element.remove();
		}
	}
};

function ShowConditionalDialog(sectionId) {
	$("#modalQuestionList").empty();
	$("#ddSelectConditional").empty();

	$("#editingConditionalId").val(sectionId);

	$(sectionId).nextAll().each(function () {
		var elem = $("#" + this.id).find("[name='Question']");
		var text = $("#" + this.id).find("[name='Question']").val();
		$("#modalQuestionList").append("<div class='checkbox'><label><input class='checkbox style-0' name='" + this.id + "' type='checkbox'><span>" + text + "</span></label></div>");
	});

	var ks = [];

	var options = $(sectionId).find("[name='OptionNames']");
	if (options.length > 0) {
		ks = options.val().split("\n");
	}

	$.each(ks, function(k,v) {
		$("#ddSelectConditional").append("<option value='" + k + "'>" + v + "</option>");
	});

	$('#addConditionalModal').modal('show');
};

function SetConditionals() {
	var sectionId = $("#editingConditionalId").val();

	var value = $("#ddSelectConditional").val();
	var visible = $("#ddConditionalVisibility").val();

	conditionals[sectionId] = { QuestionId : sectionId, TriggerValue : value, Visibility : visible, Controls : [] };

	$("#addConditionalModal").find("input[type='checkbox']").each(function () {
		if ($(this).is(":checked")) {
			conditionals[sectionId].Controls.push(this.name);
			//console.log($(this).is(":checked"));
		};
	});

	//console.log("Setting conditionals for " + sectionId);
	//console.log("Value : " + value + " Visibile: " + visible);

	$('#addConditionalModal').modal('hide');
};

function SubmitForm() {
    if (confirm("Do you wish to submit this template? (This action cannot be undone)")) {
        debugger;
		var data = GetTemplateData();
		data["Conditionals"] = [];
		$.each(conditionals, function(k,v) {
			data["Conditionals"].push(v);
		});
		console.log(data);

		$.ajax({
			// change back once mono decides to fix
		    url: '@Url.Action("StagingBuilder", "InformationBuilder")',
		    type: "Post",
		    data: data
		})
		.done(function (result) {
			//$.smallBox({
			//    title: "The Information Sheet ("+data["Title"]+") has been saved",
			//    color: "#5F895F",
			//    iconSmall: "fa fa-check bounce animated",
			//    timeout: 4000
			//});
			console.log(data);
		});
	}
	return false;
};

        function GetTemplateData() {
            debugger;
	var template = {
		Title : $("#Title").val(),
		Description : $("#Description").val(),
		Pages : GetSectionsData()
	};
	return template;
}

function GetSectionsData() {
	var sectionList = [];
	var questions = [];
	var pageTitle = "";

	var fieldsets = $("#builderBody").children();
	fieldsets.each( function (index, element) {
		var obj = $(element);
		var type = obj.attr("data-type");
		//console.log(type);
		if (type == "page") {
			questions = [];
			pageTitle = obj.find('input[name="PageTitle"]').val()
			sectionList.push({ Title : pageTitle, Questions : questions});
		}
		else {
			questions.push(GetQuestionData(obj, type));
		}
	});

	return sectionList;
}

function GetQuestionData(element, questionType) {
	var obj = $(element);
	return {
		EditorId : obj.attr("id"),
		QuestionType : questionType,
        NeedsReview: obj.find("input[name='QuestionNeedsReview']").is(":checked"),
        NeedsMilestone : obj.find("input[name='QuestionNeedsMilestone']").is(":checked"),
		ReferUnderWriting : obj.find('input[name="QuestionReferUnderwriting"]').is(":checked"),
		Required : obj.find('input[name="QuestionRequired"]').is(":checked"),
		QuestionTitle : obj.find('input[name="Question"]').val(),
		Options : obj.find('textarea[name="OptionNames"]').val() || "",
		HorizontalLayout : obj.find('input[name="HorizontalLayout"]').is(":checked")
	};
}
    </script>
}