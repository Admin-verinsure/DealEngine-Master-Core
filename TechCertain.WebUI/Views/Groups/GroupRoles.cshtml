@model TechCertain.WebUI.Models.Permission.SelectGroupRolesViewModel

<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">
    	<!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-6 col-lg-6">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Permissions for Group @Html.DisplayFor(model => model.GroupName) </h2>

                </header>

                <!-- widget div-->
                <div role="content">
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body">
					@using (Html.BeginForm())
					{
					    @Html.AntiForgeryToken()
					    <div class="form-horizontal">
					        @Html.ValidationSummary(true)
					        <div class="form-group">
					            <div class="col-md-10">
					                @Html.HiddenFor(model => model.GroupName)
					            </div>
					        </div>
					        <div class="form-group">
					            <div class="col-md-10">
					                @Html.HiddenFor(model => model.GroupId)
					            </div>
					        </div>
					        <h4>Select Role Permissions for @Html.DisplayFor(model => model.GroupName)</h4>
					        <hr />
					        <fieldset>
							@* Ugly, but needed since the Html.CheckboxFor breaks styling due to its following hidden input *@
					        @for (int i = 0; i < Model.Roles.Count; i++)
					        {
								@Html.HiddenFor(item => Model.Roles[i].RoleId)

								<div class="form-group">
									<div class="col-md-5">
										<div class="checkbox">
											<label>
												@* Somehow this if statement hack works, not sure how exactly *@
												<input @if(Model.Roles[i].Selected == true) { <text>checked="checked"</text> }
													class="checkbox style-0" data-val="true" data-val-required="The Selected field is required." id="Roles_@(i)__Selected" name="Roles[@(i)].Selected" value="true" type="checkbox">
												<span>@Html.DisplayFor(item => Model.Roles[i].RoleName)</span>
											</label>
										</div>
									</div>
									<div class="col-md-7">
										<div class="checkbox">
											<label>
									        	@Html.DisplayFor(item => Model.Roles[i].Description)
											</label>
										</div>
									</div>
								</div>
					        }
						        @*Html.EditorFor(model => model.Roles)*@
					        </fieldset>
					        <hr />
					            <div class="col-md-12">
					                <input type="submit" value="Save" class="btn btn-default" />
					            </div>
					    </div>
					}
					<div>
					    @Html.ActionLink("Back to List", "Index")
					</div>
					</div>
				</div>
			</div>
		</article>
	</div>
</div>