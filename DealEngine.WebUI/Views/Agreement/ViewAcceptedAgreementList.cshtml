@model BaseListViewModel<DealEngine.WebUI.Models.Agreement.ViewAgreementViewModel>

@{
    bool multiCoverOptionsStatus = false;

    @foreach (var item in Model)
    {
        if (item.IsMultipleOption && !multiCoverOptionsStatus)
        {
            multiCoverOptionsStatus = true;
        }
    }

}

<!-- MAIN CONTENT -->
<div id="content" class="container">

    <div class="form-group">
        <h1 class="page-title txt-color-blueDark"><i class="fa-fw fa fa-home"></i> Agreement <span>> @ViewBag.Title</span></h1>
    </div>

    <div class="form-group">
        <span>
            <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
                <div class="btn-group mr-2" role="group" aria-label="First group">
                    <a class="btn btn-primary btn-xs" href="~/Home/Index" id="backbutton"><i class="fa fa-home"></i> Back to Dashboard </a>
                    <a class="btn btn-primary btn-xs" href="~/Home/ViewProgramme/@Model.FirstOrDefault().ProgrammeId" id="backbutton"><i class="fa fa-random"></i> Back to Programme </a>
                    <a class="btn btn-primary btn-xs" href="~/Home/ViewSubClientProgrammes?clientProgrammeId=@Model.FirstOrDefault().ClientProgrammeId" id="backbutton"><i class="fa fa-random"></i> Back to Client </a>
                </div>
            </div>

        </span>
    </div>

    <!-- NEW WIDGET START -->
    <div class="form-group">
        <!-- Widget ID (each widget will need unique ID)-->
        <div class="card container-fluid" id="wid-id-10">

            <form class="client-form">

                @foreach (var item in Model)
                {
                    <div class="form-group">
                        <ul class="nav nav-pills" id="pills-tab" role="tablist">
                            @if (item.CurrentUser.PrimaryOrganisation.IsBroker || item.CurrentUser.PrimaryOrganisation.IsTC)
                            {
                                <li class="nav-item">
                                    <a href='@Url.Action("PartialViewProgramme", "Information",new { id = @item.ClientProgrammeId, viewlist="ListView"})' class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Information for all Products </a>
                                </li>
                                @if (User.IsInRole("TCUser"))
                                {
                                    <li class="nav-item">
                                        <a href="~/Agreement/ReRunUWM/@item.ClientAgreementId" class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Re-run All Underwriting Rules </a>
                                    </li>
                                }
                                @if (item.CurrentUser.PrimaryOrganisation.IsTC || item.ProgrammeNamedPartyName == "First Mate Cover")
                                {
                                    <li class="nav-item">
                                        <a href="@Url.Action("AuthoriseReferrals", "Agreement", new { sheetId = @item.ClientProgrammeId, informationsheet = @item.InformationSheetId, agreementId = @item.ClientAgreementId })" class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Authorise Referrals </a>
                                    </li>
                                }
                                @*@if (item.ProgrammeNamedPartyName == "NZFSG Programme")
            {
                <li class="nav-item">
                    <a href="~/Agreement/EditAdvisor/@item.ClientAgreementId" class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Edit Advisors </a>
                </li>
            }*@

                                <li class="nav-item">
                                    <a href="~/Agreement/EditAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Dates </a>
                                </li>
                                <li class="nav-item">
                                    <a href="~/Agreement/ViewAgreementRule/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Premiums </a>
                                </li>
                                <li class="nav-item">
                                    <a href="~/Agreement/ViewAgreementEndorsement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Policy Endorsements </a>
                                </li>
                                @if (User.IsInRole("TCUser"))
                                {
                                    @if ((item.Status != "Declined by Insurer" || item.Status != "Declined by Insured" || item.Status != "Cancelled") &&
(item.Status == "Bound" || item.Status == "Bound and invoice pending" || item.Status == "Bound and invoiced"))
                                    {
                                        @if (item.ClientInformationSheet.NextInformationSheet == null) //hide this if there is an open update uis
                                        {
                                            <li class="nav-item">
                                                <a href="~/Agreement/UnbindAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Unbind This Policy </a>
                                            </li>
                                        }
                                    }

                                }
                                <li class="nav-item">
                                    <a href="@Url.Action("EditTerms", "Agreement", new { id = @item.ClientAgreementId, productname = @item.ProductCode  })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Limits </a>

                                    @*<a href="~/Agreement/EditTerms/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Limits </a>*@
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("EditExtensionTerms", "Agreement", new { id = @item.ClientAgreementId, productname = @item.ProductCode })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Extension Limits2 </a>

                                </li>
                                @if (item.Status == "Authorised" && item.ClientInformationSheet.Status == "Submitted")
                                {
                                    <li class="nav-item">
                                        <a href="@Url.Action("IssuetoBroker", "Agreement", new { programmeId = @item.ClientProgrammeId, agreementId = @item.ClientAgreementId })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Issue to Broker </a>
                                    </li>

                                }

                                @if (item.Status == "Quoted" && item.ClientInformationSheet.Status == "Submitted")
                                {
                                    @if (item.SentOnlineAcceptance != true)
                                    {
                                        <li class="nav-item">
                                            <a href="~/Information/SendOnlineAcceptance/?ClientAgreement=@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Send Online Acceptance </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="nav-item">
                                            <a href="~/Information/SendOnlineAcceptance/?ClientAgreement=@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Re-send Online Acceptance </a>
                                        </li>
                                    }

                                    <li class="nav-item">
                                        <a href="~/Agreement/BindAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Bind Policy </a>
                                    </li>
                                }
                                @if (item.ClientInformationSheet.NextInformationSheet == null) //hide this if there is an open update uis
                                {
                                    @if (item.Status != "Declined by Insurer" || item.Status != "Declined by Insured" || item.Status != "Cancelled" ||
item.Status != "Bound" || item.Status != "Bound and invoice pending" || item.Status != "Bound and invoiced")
                                    {
                                        <li class="nav-item">
                                            <a href="~/Agreement/DeclineAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Decline Policy</a>
                                        </li>
                                    }
                                    @if (item.Status == "Declined by Insurer" || item.Status == "Declined by Insured")
                                    {
                                        <li class="nav-item">
                                            <a href="~/Agreement/UndeclineAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Undecline Policy </a>
                                        </li>
                                    }
                                    @if ((item.Status != "Declined by Insurer" || item.Status != "Declined by Insured" || item.Status != "Cancelled") &&
(item.Status == "Bound" || item.Status == "Bound and invoice pending" || item.Status == "Bound and invoiced" || item.Status == "Cancel Pending"))
                                    {
                                        <li class="nav-item">
                                            <a href="~/Agreement/CancellAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Cancel Policy </a>
                                        </li>
                                    }
                                }




                                @if (ViewBag.IsPDFgenerated == "True" && ViewBag.Ispdfenable == "True")
                                {
                                    @if (ViewBag.IsReportSend == "True")
                                    {
                                        <li class="nav-item" id="SendReport">
                                            <a class="btn btn-success btn-sm fullreport" href="~/Agreement/SendFullProposalReport?id=@item.InformationSheetId&sendUser=@true">
                                                <i class="fa fa-edit"></i> Re-send FullProposal Report
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="nav-item" id="ReSendReport">
                                            <a class="btn btn-success btn-sm fullreport" href="~/Agreement/SendFullProposalReport?id=@item.InformationSheetId&sendUser=@true">
                                                <i class="fa fa-edit"></i> Send FullProposal Report
                                            </a>
                                        </li>
                                    }
                                }
                                @if (item.ProgrammeNamedPartyName == "First Mate Cover")
                                {
                                    <li class="nav-item">
                                        <a href="@Url.Action("EditBillingConfiguration", "Programme", new { programmeId = @item.ClientProgrammeId })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Billing Information Configuration </a>
                                    </li>
                                }
                                @if (@item.Status == "Bound and pending payment")
                                {
                                    <li class="nav-item">
                                        <a href="~/Agreement/ResumeGeneratePxPayment/@item.ClientInformationSheet.Id" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Payment Option </a>
                                    </li>
                                }
                            }
                            else if (item.CurrentUser.PrimaryOrganisation.IsInsurer)
                            {
                                <li class="nav-item">
                                    <a href="~/Information/ViewProgrammeDetails/@item.ClientProgrammeId" class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Information for all Products </a>
                                </li>
                                <li class="nav-item">
                                    <a href="~/Agreement/ReRunUWM/@item.ClientAgreementId" class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Re-run All Underwriting Rules </a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("AuthoriseReferrals", "Agreement", new { sheetId = @item.ClientProgrammeId, informationsheet = @item.InformationSheetId, agreementId = @item.ClientAgreementId })" class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Authorise Referrals </a>

                                </li>

                                <li class="nav-item">
                                    <a href="~/Agreement/EditAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Dates </a>
                                </li>
                                <li class="nav-item">
                                    <a href="~/Agreement/ViewAgreementRule/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Premiums </a>
                                </li>
                                <li class="nav-item">
                                    <a href="~/Agreement/ViewAgreementEndorsement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Policy Endorsements </a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("EditTerms", "Agreement", new { id = @item.ClientAgreementId, productname = @item.ProductCode })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Policy Limits </a>

                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("EditExtensionTerms", "Agreement", new { id = @item.ClientAgreementId, productname = @item.ProductCode })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Edit Extension Limits </a>

                                </li>
                                @if (item.Status == "Authorised" && item.ClientInformationSheet.Status == "Submitted")
                                {
                                    <li class="nav-item">
                                        <a href="@Url.Action("IssuetoBroker", "Agreement", new { programmeId = @item.ClientProgrammeId, agreementId = @item.ClientAgreementId })" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Issue to Broker </a>
                                    </li>
                                }
                                @if (item.Status == "Quoted" && item.ClientInformationSheet.Status == "Submitted")
                                {
                                    @if (item.SentOnlineAcceptance != true)
                                    {
                                        <li class="nav-item">
                                            <a href="~/Information/SendOnlineAcceptance/?ClientAgreement=@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Send Online Acceptance </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="nav-item">
                                            <a href="~/Information/SendOnlineAcceptance/?ClientAgreement=@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Re-send Online Acceptance </a>
                                        </li>
                                    }
                                }

                                @if (item.ClientInformationSheet.NextInformationSheet == null) //hide this if there is an open update uis
                                {
                                    @if (item.Status != "Declined by Insurer" || item.Status != "Declined by Insured" || item.Status != "Cancelled" ||
item.Status != "Bound" || item.Status != "Bound and invoice pending" || item.Status != "Bound and invoiced")
                                    {
                                        <li class="nav-item">
                                            <a href="~/Agreement/DeclineAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Decline Policy </a>
                                        </li>

                                    }
                                    @if (item.Status == "Declined by Insurer" || item.Status == "Declined by Insured")
                                    {
                                        <li class="nav-item">
                                            <a href="~/Agreement/UndeclineAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Undecline Policy </a>
                                        </li>
                                    }
                                    @if ((item.Status != "Declined by Insurer" || item.Status != "Declined by Insured" || item.Status != "Cancelled") &&
(item.Status == "Bound" || item.Status == "Bound and invoice pending" || item.Status == "Bound and invoiced"))
                                    {
                                        <li class="nav-item">
                                            <a href="~/Agreement/CancellAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Cancel Policy </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="~/Agreement/UnbindAgreement/@item.ClientAgreementId" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Unbind This Policy </a>
                                        </li>

                                    }
                                }
                                @if (@item.Status == "Bound and pending payment")
                                {
                                    <li class="nav-item">
                                        <a href="~/Agreement/ResumeGeneratePxPayment/@item.ClientInformationSheet.Id" class="btn btn-success btn-sm"><i class="fa fa-edit"></i> Payment Option</a>
                                    </li>
                                }

                            }
                            else if (item.CurrentUser.PrimaryOrganisation.IsProgrammeManager)
                            {
                                <li class="nav-item">
                                    <a href='@Url.Action("PartialViewProgramme", "Information",new { id = @item.ClientProgrammeId, viewlist="ListView"})' class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Information for all Products </a>
                                </li>
                            }





                        </ul>
                    </div>

                    <div class="form-group">
                        @await Html.PartialAsync("Partials/ViewAgreement", item)
                    </div>

                }


                <div class="form-group">
                    @foreach (var item in Model)
                    {

                        @if ((item.Status != "Declined by Insurer" || item.Status != "Declined by Insured" || item.Status != "Cancelled") &&
(item.Status == "Bound" || item.Status == "Bound and invoice pending" || item.Status == "Bound and invoiced"))
                        {
                            <h3><strong>Documents </strong></h3>

                            @await Html.PartialAsync("Partials/ViewAgreementDocs", item.Documents)

                            @if (@ViewBag.IsBroker || @ViewBag.IsTC || @ViewBag.IsInsurer)
                            {
                                <h3><strong>Options </strong></h3>
                                <a class="btn btn-primary btn-sm" href="/Agreement/RenderDocuments/@item.InformationSheetId"> Render Documents </a>
                                <a class="btn btn-success btn-sm" href="~/Agreement/SendPolicyDocuments?id=@item.InformationSheetId&sendUser=@false"><i class="fa fa-edit"></i> Send Documents To Insured </a>
                                <a class="btn btn-success btn-sm" href="~/Agreement/SendPolicyDocuments?id=@item.InformationSheetId&sendUser=@true"><i class="fa fa-edit"></i> Send Documents To Me </a>
                            }

                        }
                        <!-- loop through process once only!! -->
                        break;
                    }
                </div>

                @if (@multiCoverOptionsStatus && (@ViewBag.IsBroker || @ViewBag.IsTC || @ViewBag.IsInsurer))
                {
                    <div class="form-group">
                        <div> <button class="btn btn-success btn-sm" onclick="SaveCoveroptions();"> Save All Cover Options </button></div>
                    </div>
                }

            </form>
        </div>

    </div>
    <!-- WIDGET END -->
</div>


@section pagespecific {
    <script type="text/javascript">
          function SaveCoveroptions() {
              var ID = "@ViewBag.Id";
         //var ID = $('#Id').val();
               var postdata = {
                     id : ID
                }
                $.ajax({
                   url: '@Url.Action("GetProductName", "Information")',
                   type: "POST",
                   data: postdata
                })
                    .done(function (data) {
                        var prodname = data;
                        var CoverOptions = new Array(prodname.length);

                        for (var i = 0; i < prodname.length; i++) {
                            var ProdName = prodname[i];
                            var queryselector = ""+"input[name=\'" + ProdName + "\']:checked";
                            var optionsselected = $(queryselector).val();
                                    CoverOptions[i] = optionsselected;
                        }

                        var progId = $('#ClientProgrammeId').val();
                        var postData = { Answers: CoverOptions, ProgrammeId: progId };

                        $.ajax({
                            url: '@Url.Action("SaveCoverOptions", "Information")',
                            type: "POST",
                            data: postData
                        })
                            .done(function (data) {
                            })
                            .fail(function (a, s, d) {
                                alert("Unable to save.");
                            });

                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        alert("There was an error getting ProductName.");
                    });

        };

         $(window).on("load", function () {
            if ("@ViewBag.Sheetstatus" != "Started") {
                             debugger;

                var progId = "@ViewBag.Id";
                //var progId 4= $('#ClientProgrammeId').val();
                var postData = { ProgrammeId: progId };
                $.ajax({
                    url: '@Url.Action("GetCoverOptions", "Information")',
                    type: "POST",
                    data: postData
                }).done(function (data) {
                    if (data != "") {
                        for (var item = 0; item < data.length; item++) {
                            var arr = data[item];
                            var count = 0;
                            //var element = 'input[name=\\"' + arr[count] + '"][value=\\"' + arr[count + 1] + '"]';
                            var queryselector = "" + "input[name=\'" + arr[count] + "\'][value=\'" + arr[count + 1] + "\']";

                            $(queryselector).attr('checked', true);
                            //$("#"+Arr[count]).
                            //$('#' + arr[count+1]).val(arr[count + 1]);
                        }
                    }
                }) .fail(function (jqXHR, textStatus, errorThrown) {
                alert("There was an error while trying to get the Cover Options3.");
                });

             }
                var postData = { ProgrammeId: progId };
                              var postData = { ProgrammeId: "@ViewBag.Id" };
             debugger;
                $.ajax({
                    url: '@Url.Action("GetExtensionCoverOptions", "Information")',
                    type: "POST",
                    data: postData
                }).done(function (data) {
                    ///bound viewacceptednormal
                    debugger;
                    if (data != "") {
                        for (var item = 0; item < data.length; item++) {
                            var arr = data[item];
                            var count = 0;
                            var queryselector = "" + "input[name=\'" + arr[count] + " Extensiontable\'][value=\'" + arr[count + 1] + "\']";
                            $(queryselector).attr('checked', true);
                            //extensionselected(arr[count]);
                        }
                    }
                }) .fail(function (jqXHR, textStatus, errorThrown) {
                alert("There was an error while trying to get the Extension Cover Options.");
                });


              if (!("@ViewBag.IsBroker" == "True" || "@ViewBag.IsTC" == "True" || "@ViewBag.IsInsurer" == "True") && "@ViewBag.showDocs" == "False")
              {
                  $("#7").hide();
              }


        });

       
    </script>

}