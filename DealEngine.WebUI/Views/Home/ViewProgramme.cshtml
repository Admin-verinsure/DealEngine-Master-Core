@model DealEngine.WebUI.Models.ProgrammeItem
<!-- MAIN CONTENT -->
<div id="widget-grid" class="container">
    @Html.HiddenFor(m => m.Programme.Id)

    <ul class="nav">
        <li class="nav-item">
            <a class="btn btn-primary btn-sm" href="~/Home/Index"><i class="fa fa-home"></i>Back to Dashboard</a>
        </li>
        @if (Model.CurrentUserIsBroker == "True" || Model.CurrentUserIsInsurer == "True" || Model.CurrentUserIsTC == "True")
        {
            <li class="nav-item">
                <a class="btn btn-primary btn-sm" href="#CreateUISModal" aria-hidden="true" style="color:white" data-progname-id="@Model.Programme.Id" data-toggle="modal"><i class="fa fa-pencil"></i> Create UIS</a>
            </li>
            <li class="nav-item">
                <a onclick="location.href='@Url.Action("IssueUIS", "Home",new { ProgrammeId=@Model.Programme.Id ,actionname="IssueUIS"})'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> Issue UIS </a>
            </li>

            if (Model.IsSubclientEnabled)
            {
                <li class="nav-item">
                    <a onclick="location.href='@Url.Action("IssueSubUIS", "Home", new { ProgrammeId = @Model.Programme.Id, actionname = "IssueUIS" })'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> Issue Sub UIS </a>
                </li>
            }

            if (Model.IsRenewFromProgramme)
            {
                <li class="nav-item">
                    <a onclick="location.href='@Url.Action("IssueRenewal", "Home", new { ProgrammeId = @Model.Programme.Id})'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> Issue Renewal Notification </a>
                </li>
            }


            <li class="nav-item">
                <a class="btn btn-primary btn-sm" href="~/Home/IssueReminder?ProgrammeId=@Model.Programme.Id"><i class="fa fa-pencil"></i>Issue Reminder</a>
            </li>

            <li class="nav-item">
                <a onclick="location.href='@Url.Action("EditClients", "Home", new { ProgrammeId=@Model.Programme.Id })'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> Edit Client </a>
            </li>
            <li class="nav-item">
                @*<a class="btn btn-primary btn-sm" href="~/Home/GetBreakdown?ProgrammeId=@Model.ProgrammeId"><i class="fa fa-pencil"></i>Breakdown</a>*@
            </li>
            <li class="nav-item">
                <a asp-controller="Home" asp-action="ReportView" asp-route-ProgrammeId="@Model.Programme.Id" class="btn btn-primary btn-sm" style="color:white">View Report </a>
            </li>
        }
         @*for NTU*@
        @if (Model.CurrentUserIsBroker == "True" || Model.CurrentUserIsTC == "True" || Model.CurrentUserIsInsurer == "True")
        {

            <li class="nav-item">
                <a onclick="location.href='@Url.Action("NTUcreate", "Home",new { ProgrammeId=@Model.Programme.Id ,actionname="NTUcreate"})'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> NTU UIS </a>
            </li>
        }
        else if (Model.CurrentUserIsProgrammeManager == "True")
        {
            <li class="nav-item">
                <a class="btn btn-primary btn-sm" href="#CreateUISModal" aria-hidden="true" style="color:white" data-progname-id="@Model.Programme.Id" data-toggle="modal"><i class="fa fa-pencil"></i> Create UIS</a>
            </li>
            <li class="nav-item">
                <a onclick="location.href='@Url.Action("IssueUIS", "Home",new { ProgrammeId=@Model.Programme.Id ,actionname="IssueUIS"})'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> Issue UIS </a>
            </li>
        }
        @*<li class="nav-item">
            <a onclick="location.href='@Url.Action("getuserdetails", "Home", new { ProgrammeId = @Model.ProgrammeId})'" class="btn btn-primary btn-sm" style="color:white"> <i class="fa fa-pencil"></i> View Report </a>
        </li>*@


    </ul>

    <div class="card">
        <div class="card-header text-white" style="background-color:#3276b1">
            <span class="widget-icon">
                <h6><i class="fa fa-table text-light"></i> Insurance Information </h6>
            </span>
        </div>
        <div class="card-body">
            @await Html.PartialAsync("_ClientProgrammeTablePartial", @Model)
        </div>
    </div>

</div>
<div id="myChangeModal" class="modal container" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title" style="color:blue; font-size:22px">Update Details</h3>
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
            <form id="ProdForm" method="post" action="~/Information/UpdateInformation">
                <input class="form-control" hidden type="text" data-type="TEXTBOX" data-name="DealId" id="DealId" name="DealId" placeholder="Vessel Name" value="" required>

                <table class="table table-striped">
                    <tr>
                       
                        <td>
                            <label for="changeType" class="required">Update Type</label>
                        </td>
                        <td>
                            <select class="form-control b" id="ChangeType" name="ChangeType" title="" required>
                                <option selected="selected" value="">-- Select here --</option>
                                <option Value="TC_addAmendRiskInfo">Add Amend Risk Information</option>
                                <option Value="TC_newCoverable">Add New Coverable</option>
                                <option Value="TC_amendExcess">Amend Excess</option>
                                <option Value="TC_amendLocation">Amend Location</option>
                                <option Value="TC_amendSumInsured">Amend Sum Insured</option>
                                <option Value="TC_amendTermsCoverage">Amend Terms/Coverage</option>
                                <option Value="TC_amendAddReinsurance">Amend or Add Reinsurance</option>
                                <option Value="TC_amendAddInsured">Amend or Add Insured</option>
                                <option Value="TC_amendAddCI">Amend or Add Co-insurance</option>
                                <option Value="TC_changeOfExpiryDate">Change of Expiry Date</option>
                                <option Value="TC_changeOfBroker">Change of Broker</option>
                                <option Value="TC_changeOfBizOrOcc">Change of Business or Occupation</option>
                                <option Value="TC_deleteCoverable">Delete Existing Coverable</option>
                                <option Value="TC_other">Other Amendment</option>
                                <option Value="TC_amendOneTimeEvents">One Time Event</option>
                            </select>
                        </td>
                        <td>
                            <p class="validationContainer" id="validateChangeType"></p>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="Reason" class="required">Reason</label>
                        </td>
                        <td>
                            <select class="form-control" id="ChangeReason" name="Reason" title="" required>
                                <option selected="selected" value="">-- Select here --</option>
                                <option Value="TC_businessSoldOrClosed_lgi">Business Sold or Closed</option>
                                <option Value="TC_changeInCoverReq_lgi">Change in cover requirements</option>
                                <option Value="TC_changeOfBroker_lgi">Change of Broker</option>
                                <option Value="TC_dissatisfiedWithClaims_lgi">Dissatisfied with claims</option>
                                <option Value="TC_dissatisfiedWithSvc_lgi">Dissatisfied with service</option>
                                <option Value="TC_goneIntoGlobalAcct_lgi">Gone into Global Account</option>
                                <option Value="TC_nonpayment">Non payment</option>
                                <option Value="TC_policyReplaced_lgi">Policy replaced</option>
                                <option Value="TC_tooDear_lgi">Too dear</option>
                            </select>
                        </td>
                        <td>
                            <p class="validationContainer" id="validateChangeReason"></p>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="ReasonDesc" class="required">Reason Description</label>
                        </td>
                        <td>
                            <textarea class="form-control" data-type="TEXTAREA" id="Description" name="ReasonDesc" placeholder="Notes" value=""></textarea>
                        </td>
                        <td>
                            <p class="validationContainer" id="validateDescription"></p>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="EffectiveDate" class="required">Effective Date</label>
                        </td>
                        <td>
                            <input name="BoatEffectiveDate" placeholder="Effective Date" class=" form-control" data-dateformat="dd/mm/yy" id="ChangeEffectiveDate" type="text">
                        </td>
                        <td>
                            <p class="validationContainer" id="validateEffectivedate"></p>
                        </td>
                    </tr>
                </table>
                <div class="modal-footer">
                    @*<button id="next" type="button" class="btn btn-success btn-sm" onclick="validationCheck();" data-dismiss="modal" data-toggle="tab">Submit</button>*@
                    <button class="btn btn-primary btn-xs" id="ReportView"> Update</button>

                    @*<a href="#" class="btn btn-primary btn-xs" type="" id="btnChangeSubmit">Update</a>*@
                </div>
            </form>
        </div>
        
    </div>
</div>
<div id="CreateUISModal" class="modal" aria-hidden="true">
    <form id="ProdForm" class="" action="../../Services/IssueUIS" method="post" onsubmit="CloseModal()">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title" style="color:blue; font-size:22px">Client Details</h3>
                    <button type="button" class="close" id="CreateUISModalClose" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(m => m.Programme.Id)
                    <div class="form-group">
                        @Html.LabelFor(m => m.OrganisationViewModel.OrganisationTypes, new { @class = "label required" })
                        <select id="Organisation.OrganisationType" name="OrganisationViewModel.OrganisationType" class="custom-select" onclick="OrganisationTypeChange(this.value)" required>
                            @foreach (var option in Model.OrganisationViewModel.OrganisationTypes)
                            {
                                <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OrganisationViewModel.Organisation.Name, new { @class = "label required" })
                        @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.Name, new { @class = "form-control", @id = "Organisation.Name", @onchange = "OnChange(this.id, this.name)", @required = "" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OrganisationViewModel.User.FirstName, new { @class = "label required" })
                        @Html.TextBoxFor(m => m.OrganisationViewModel.User.FirstName, new { @class = "form-control", @id = "User.FirstName", @onchange = "OnChange(this.id, this.name)", @required = "" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OrganisationViewModel.User.LastName, new { @class = "label required" })
                        @Html.TextBoxFor(m => m.OrganisationViewModel.User.LastName, new { @class = "form-control", @id = "User.LastName", @onchange = "OnChange(this.id, this.name)", @required = "" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OrganisationViewModel.Organisation.Email, new { @class = "label required" })
                        @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.Email, new { @class = "form-control", @id = "Organisation.Email", @type = "email", @onchange = "OnChange(this.id, this.name)", @required = "" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Membership Number")
                        @Html.TextBox("MemberShipNo", "", new { @class = "form-control", @name = "MemberShipNo" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Mobile Phone")
                        @Html.TextBox("OrganisationViewModel.Organisation.Phone", "", new { @class = "form-control", @name = "OrganisationViewModel.Organisation.Phone" })
                    </div>
                    @*<div class="form-group">
                        @Html.Label("Does not require Principal Advisor")
                        @Html.DropDownList("Principal.Advisor", Model.BooleanOptions, new { @class = "form-control", @name = "Principal Advisor" })
                    </div>*@
                </div>
                <div class="modal-footer">
                    <button id="next" type="submit" class="btn btn-success btn-sm">Submit</button>
                </div>
            </div>
        </div>
    </form>
</div>


<div id="myUnlockModal" class="modal container" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title" style="color:blue; font-size:22px">Unlock Details</h3>
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
            <form id="ProdForm">
                <input class="form-control" hidden type="text" data-type="TEXTBOX" data-name="DealId" id="UnlockId" name="DealId" required>
                <table class="table table-striped">
                    <tr>
                        <td>
                            <label for="ReasonDesc" class="required">Unlock Reason Description</label>
                        </td>
                        <td>
                            <textarea class="form-control" data-type="TEXTAREA" id="UnlockDescription" name="ReasonDesc" placeholder="Notes" value=""></textarea>
                        </td>
                        <td>
                            <p class="validationContainer" id="validateDescription"></p>
                        </td>
                    </tr>

                </table>
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-success btn-sm" onclick="postUnlockData();" data-toggle="tab">Submit</button>
        </div>
    </div>
</div>


<div class="modal overlay" id="CreateUISProcess" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p><img src="/img/loading.gif" /> Loading Information. Please wait...</p>
            </div>
        </div>
    </div>
</div>

<div class="modal overlay" id="ChangeProcess" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p>
                    <img src="/img/loading.gif" /> Generating Change Information Sheet.  Please wait... </P>

                <p>  If the Change Information Sheet does not appear after 30 seconds, please refresh the page. </p>

                <p>  If the Change Information sheet is not present on the dashboard please contact technical support. </p>
                
            </div>
        </div>
    </div>
</div>

@section pagespecific {

    <script type="text/javascript">
         $(window).on("load", function () {
           $("#ChangeProcess").hide();

         });
        $(document).ready(function () {
            //$.noConflict();
            $('#tableProgrammeItems').bootstrapTable();
            $('#subsystemAccodion').accordion;
            $('#ChangeEffectiveDate').datepicker({
               dateFormat: "dd/mm/yy"
            });


            $("#ReportView").click(function () {
                debugger;
            $("#ChangeProcess").show();
            });

        });

        $('#myChangeModal').on('show.bs.modal', function (e) {   
            debugger;
            $('.modal').css({ "width": "50%", "margin-left": "25%" });
            var dealId = $(e.relatedTarget).data('dealitem-id');
            $(e.currentTarget).find('input[name="DealId"]').val(dealId);
             $(e.currentTarget).find('input[name="ProgrammeId"]').val("@Model.Programme.Id");
        });

          $('#myUnlockModal').on('show.bs.modal', function (e) {
            $('.modal').css({ "width": "40%", "margin-left": "30%" });
            var dealId = $(e.relatedTarget).data('dealitem-id');
            $(e.currentTarget).find('input[id="UnlockId"]').val(dealId);
        });

        function OrganisationTypeChange(Value) {
            var input = document.getElementById('OrganisationViewModel_Organisation_Type');
            if (Value == "Person - Individual") {
                Value = "Private";
            }
            input.value = Value;
        }

        function ValidateEmail() {
            var Email = $('#UISEmail').val();
            if (/^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(Email)) {
                return (true)
            } else
                return (false)
        }
        function IssueUIS() {
            event.preventDefault();
            var programmeId = $('#ProgrammeId').val();
            var postData = { ProgrammeId: programmeId };
            $.ajax({
                type: 'GET',
                url: '@Url.Action("IssueUIS", "Home")',
                data: postData
            })
                .done(function (data) {
                    debugger;
                })
                .fail(function (jqXhr, textStatus, errorThrown) {
                    debugger;
                    console.log(errorThrown);
                });
        }

        function CloseModal() {
            $('#CreateUISModal').modal('hide')
        }


        function postUnlockData() {
            debugger;
              $('#CreateUISProcess').show();
            var unlockReason = $('#UnlockDescription').val();
            var dealId = $('#UnlockId').val();
            var postData = {
                Reason: unlockReason,
                DealId: dealId
            };

             $.ajax({
            type: "Post",
            data: postData,
            url: "/Information/Unlock",
            success: function (data) {
                 $('#CreateUISProcess').hide();
                 $('#myUnlockModal').modal('hide')
                alert("Saved Successfully!");
                window.location.href = data.url;
            }
              })
            .done(function (data) {
             })
            .fail(function (a, s, d) {
                debugger;
                alert("Unable to save.");
            });
        }

    </script>
}

