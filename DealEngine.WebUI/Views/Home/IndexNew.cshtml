@model DashboardViewModel
<!-- MAIN CONTENT -->
<div id="content">
    <div class="modal fade" id="agreementsListModal" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">My Deal History</h4>
                </div>
                <div class="modal-body">
                    <table id="agreementList" class="table">
                        <tr>
                            <td>Item</td>
                            <td>1</td>
                        </tr>
                        <tr>
                            <td>Item</td>
                            <td>2</td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn-default btn" type="button" onclick="$('#agreementsListModal').modal('hide');">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="container">
            <h1 class="page-title txt-color-blueDark"><i class="fa-fw fa fa-home"></i> Dashboard <span>> My Dashboard</span></h1>
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">

        <div class="row">
            <article class="container">
                <!-- new widget -->
                @if (User.HasClaim("ViewComingUpTask", "ViewComingUpTask"))
                {
                    <div class="form-group">
                        <div class="card">
                            <div class="card-header text-white" style="background-color:#3276b1">
                                <span class="widget-icon">
                                    <h6><i class="fa fa-comments"></i> Coming Up </h6>
                                </span>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info alert-dismissible" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    There are currently no upcoming tasks.
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (User.HasClaim("ViewMilestoneTasks", "ViewMilestoneTasks"))
                {
                    <div class="form-group">
                        <div class="card">
                            <div class="card-header text-white" style="background-color:#3276b1">
                                <span class="widget-icon">
                                    <h6> <i class="fa fa-comments"></i> Tasks </h6>
                                </span>
                            </div>
                            <div class="card-body">
                                @if (Model.CriticalTaskItems.Count == 0 || Model.ImportantTaskItems.Count == 0)
                                {
                                    <div class="hidden">
                                        <div class="alert alert-info alert-dismissible" role="alert">
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            There are currently no pending tasks.
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="hidden">
                                        <div class="alert alert-info alert-dismissible" role="alert">
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            There are currently no pending tasks.
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                @if (User.HasClaim("ViewClientAgreements", "ViewClientAgreements"))
                {
                    <div class="form-group">
                        <div class="card">
                            <div class="card-header text-white" style="background-color:#3276b1">
                                <span class="widget-icon">
                                    <h6><i class="fa fa-comments"></i> Client Agreements</h6>
                                </span>
                            </div>
                            <div class="card-body">
                                <table class="table table-striped table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th>Product Name</th>
                                            <th>Languages</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ProgrammeItems)
                                        {
                                            <tr>
                                                <td>
                                                    @item.Name
                                                </td>
                                                <td>
                                                    @foreach (var lang in item.Languages)
                                                    {
                                                        @lang.ToUpper()
                                                    }
                                                </td>
                                                <td>
                                                    <a class="btn btn-success btn-sm" href="/Home/ViewProgramme/@item.ProgrammeId"><i class="fa fa-search"></i> View</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
                @if (User.HasClaim("ViewTermSheets", "ViewTermSheets"))
                {
                    <div class="form-group">
                        <div class="card">
                            <div class="card-header text-white" style="background-color:#3276b1">
                                <span class="widget-icon">
                                    <h6><i class="fa fa-comments text-white"></i> Broker/Underwriter Term Sheets </h6>
                                </span>
                            </div>
                            <div class="card-body">
                                <table class="table table-striped table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th>Product Name</th>
                                            <th>Languages</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ProgrammeItems)
                                        {

                                            <tr>
                                                <td>
                                                    @item.Name
                                                </td>
                                                <td>
                                                    @foreach (var lang in item.Languages)
                                                    {
                                                        @lang.ToUpper()
                                                    }
                                                </td>
                                                <td>
                                                    <a class="btn btn-success btn-sm" href="/Programme/TermSheetConfirguration/@item.ProgrammeId"><i class="fa fa-search"></i> View</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
                @if (User.HasClaim("ViewLibraries", "ViewLibraries"))
                {
                    <div class="form-group">
                        <div class="card">
                            <div class="card-header text-white" style="background-color:#3276b1">
                                <span class="widget-icon">
                                    <h6> <i class="fa fa-comments text-white"></i> Libraries </h6>
                                </span>
                            </div>
                            <div class="card-body">
                                <table class="table table-striped table-hover table-condensed">
                                    <tbody>

                                        @if (User.HasClaim("ViewTerritories", "ViewTerritories"))
                                        {
                                            <tr>
                                                <td>Territories</td>
                                                <td>Territories</td>
                                                <td><a class="btn btn-success btn-sm" href="/Product/CreateTerritory"><i class="fa fa-search"></i> View</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewActivities", "ViewActivities"))
                                        {
                                            <tr>
                                                <td>Activities</td>
                                                <td>ANZSIC Codes</td>
                                                <td><a class="btn btn-success btn-sm" href="/Programme/ActivityBuilder"><i class="fa fa-search"></i> View</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewEmploymentPrincipals", "ViewEmploymentPrincipals"))
                                        {
                                            <tr>
                                                <td>Employment Principal & Staff Roles</td>
                                                <td>Roles for Employment Liability Product Disclosure</td>
                                                <td><a class="btn btn-success btn-sm" href="/Programme/SharedDataRoleBuilder"><i class="fa fa-search"></i> View</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewAddresses", "ViewAddresses"))
                                        {
                                            <tr>
                                                <td>Addresses</td>
                                                <td>Address API used </td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewEmails", "ViewEmails"))
                                        {
                                            <tr>
                                                <td>Emails</td>
                                                <td>System and Programme specific</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewMarinas/FinancialInstitutions", "ViewMarinas/FinancialInstitutions"))
                                        {
                                            <tr>
                                                <td>Financial Institutions</td>
                                                <td>For selecting as Named Parties</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        <tr>
                                            <td>Images</td>
                                            <td>Manage Images</td>
                                            <td><a class="btn btn-success btn-sm" href="/Image/ManageImage"><i class="fa fa-search"></i> View</a></td>
                                        </tr>
                                        @if (User.HasClaim("ViewMilestones", "ViewMilestones"))
                                        {
                                            <tr>
                                                <td>Milestones</td>
                                                <td>Milestones</td>
                                                <td><a class="btn btn-success btn-sm" href="/Milestone/MilestoneList"><i class="fa fa-search"></i> View</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewMotor", "ViewMotor"))
                                        {
                                            <tr>
                                                <td>Motor</td>
                                                <td>Motor API used   </td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewProducts", "ViewProducts"))
                                        {
                                            <tr>
                                                <td>Products</td>
                                                <td>Insurance Policies for adding to a programme   </td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewSections", "ViewSections"))
                                        {
                                            <tr>
                                                <td>Sections</td>
                                                <td>Sections for the Client Information Sheet   </td>
                                                <td><a class="btn btn-success btn-sm" href="/Information/GetProgrammes"><i class="fa fa-search"></i> View</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewSpecialTerms", "ViewSpecialTerms"))
                                        {
                                            <tr>
                                                <td>Special Terms</td>
                                                <td>Endorsements</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewRules", "ViewRules"))
                                        {
                                            <tr>
                                                <td>Rules</td>
                                                <td>Configure the Rules</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>

                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewUnderwritingRules", "ViewUnderwritingRules"))
                                        {
                                            <tr>
                                                <td>Underwriting Rules</td>
                                                <td>Underwriting Rules</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewUsers", "ViewUsers"))
                                        {
                                            <tr>
                                                <td>Users</td>
                                                <td>User Management</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                        @if (User.HasClaim("ViewWater", "ViewWater"))
                                        {
                                            <tr>
                                                <td>Water</td>
                                                <td>Water Location API used</td>
                                                <td><a class="btn btn-success btn-sm disabled" href="#"><i class="fa fa-search"></i> In Dev</a></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
                @if (User.IsInRole("TCUser"))
                {
                    <div class="form-group">
                        <div class="card">
                            <div class="card-header text-white" style="background-color:#3276b1">
                                <span class="widget-icon">
                                    <h6> <i class="fa fa-comments text-white"></i> Admin </h6>
                                </span>
                            </div>
                            <div class="card-body">
                                <table class="table table-striped table-hover table-condensed">
                                    <tbody>
                                        <tr>
                                            <td>Manage Admin funtion</td>
                                            <td><a class="btn btn-success btn-sm" href="~/Admin/Index"><i class="fa fa-search"></i> View</a></td>
                                        </tr>
                                        <tr>
                                            <td>Manage Organisations</td>
                                            <td><a class="btn btn-success btn-sm" href="~/Organisation/ManageOrganisations"><i class="fa fa-search"></i> View</a></td>
                                        </tr>
                                        <tr>
                                            <td>Manage Permissions</td>
                                            <td><a class="btn btn-success btn-sm" href="~/Authorize/Index"><i class="fa fa-search"></i> View</a></td>
                                        </tr>
                                        <tr>
                                            <td>Manage Rsa Users</td>
                                            <td><a class="btn btn-success btn-sm" href="~/Admin/ManageRsaUsers"><i class="fa fa-search"></i> View</a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
                <!-- end widget -->
            </article>
        </div>

        <div class="modal" id="addTaskModal" tabindex="-1" role="dialog" data-backdrop="static">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Add a Task</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <label class="label cgmodalLabel">Task Priority</label>
                            <label class="input cgmodalInput" style="padding:10px 25px 0px 25px">
                                <label class="radio-inline"><input type="radio" name="TaskPriorityModal" value="Important">Important</label>
                                <label class="radio-inline"><input type="radio" name="TaskPriorityModal" value="Critical">Critical</label>
                            </label>
                        </div>
                        <hr />

                        <div id="TaskDetailSection">
                            <div class="row">
                                <label class="input ">
                                    <i class="icon-append fa fa-calendar"></i>
                                    <input name="TaskDueDate" placeholder="Due Date" class="datepicker form-control b" data-dateformat="dd/mm/yy" id="TaskDueDateModal" type="text">
                                </label>
                                <hr />
                                <div class="form-group">
                                    <label class="label cgmodalLabel">Reference/Details</label>
                                    <label class="textarea w100">
                                        <textarea class="form-control b" data-type="TEXTAREA" data-name="TaskDetail" id="TaskDetailModal" rows="2" name="TaskDetailSection" value=""></textarea>
                                    </label>
                                </div>
                                <hr />
                                <div class="form-group">
                                    <label class="label cgmodalLabel">Description</label>
                                    <label class="textarea w100">
                                        <textarea class="form-control b" data-type="TEXTAREA" data-name="TaskDescription" id="TaskDescriptionModal" name="TaskDescriptionSection" value=""></textarea>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <section class="col col-xs-12">
                            <button type="button" class="btn-sm" data-dismiss="modal" onclick="createTask()">Add Task</button>
                        </section>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>


<!-- end widget grid -->
<!-- END MAIN CONTENT -->

@section pagespecific {
    <script src="~/Scripts/insuranceicons.js"></script>
    <script type="text/javascript">


    function showUserTaskModal() {
        $('#addTaskModal').modal('show');
    }

    function ViewTask(id) {
        $.ajax({
            url: '@Url.Action("ViewTask", "Home")',
            type: "GET",
            data: { id }
        })
            .done(function (url) {
              //  $("#ViewTask").on('load',url, function () {
             })
            .fail(function (jqXHR, textStatus, errorThrown) {
                debugger;
                alert("There was an error while trying to save Task." + jqXHR);
            });
    }

    function createTask() {
        var TaskCategory = $('input[name=TaskPriorityModal]:checked').val();
        var CategoryValue;
        if (TaskCategory == 'Critical') {
            CategoryValue = '1';
        } else {
            CategoryValue = '0';
        }
        var TaskDueDate = $('#TaskDueDateModal').val();
        var TaskDetail = $('#TaskDetailModal').val();
        var TaskDescription = $('#TaskDescriptionModal').val();

        $.ajax({
            url: '@Url.Action("AddTask", "Home")',
            type: "POST",
            data: { CategoryValue, TaskDueDate, TaskDetail, TaskDescription }
        })
            .done(function (data) {
                $('#addTaskModal').modal('hide');
                $.smallBox({
                    title: "Task has been saved",
                    color: "#5F895F",
                    iconSmall: "fa fa-check bounce animated",
                    timeout: 4000
                });
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                alert("There was an error while trying to save Task.");
            });
    }

        $(document).ready(function () {
            /*
            * TODO: add a way to add more todo's to list
            */
            // initialize sortable
            $(function () {
                $("#sortable1, #sortable2").sortable({
                    handle: '.handle',
                    connectWith: ".todo",
                    update: countTasks
                }).disableSelection();
            });

            // check and uncheck
            $('.todo .checkbox > input[type="checkbox"]').click(function () {
                var $this = $(this).parent().parent().parent();

                if ($(this).prop('checked')) {
                    $this.addClass("complete");

                    // remove this if you want to undo a check list once checked
                    //$(this).attr("disabled", true);
                    $(this).parent().hide();

                    // once clicked - add class, copy to memory then remove and add to sortable3
                    $this.slideUp(500, function () {
                        $this.clone().prependTo("#sortable3").effect("highlight", {}, 800);
                        $this.remove();
                        countTasks();
                    });
                } else {
                    // insert undo code here...
                }

            })
            // count tasks
            function countTasks() {
                debugger;
                $('.todo-group-title').each(function () {
                    var $this = $(this);
                    $this.find(".num-of-tasks").text($this.next().find("li").size());
                });
                //if
            }

            // Start Finance

            $(function () {

                var trgt = [[1354586000000, 153], [1364587000000, 658], [1374588000000, 198],
                [1384589000000, 663], [1394590000000, 801], [1404591000000, 1080],
                [1414592000000, 353], [1424593000000, 749], [1434594000000, 523],
                [1444595000000, 258], [1454596000000, 688], [1464597000000, 364]],

                    prft = [[1354586000000, 53], [1364587000000, 65], [1374588000000, 98], [1384589000000, 83],
                    [1394590000000, 980], [1404591000000, 808], [1414592000000, 720], [1424593000000, 674],
                    [1434594000000, 23], [1444595000000, 79], [1454596000000, 88], [1464597000000, 36]],

                    sgnups = [[1354586000000, 647], [1364587000000, 435], [1374588000000, 784], [1384589000000, 346],
                    [1394590000000, 487], [1404591000000, 463], [1414592000000, 479], [1424593000000, 236], [1434594000000, 843],
                    [1444595000000, 657], [1454596000000, 241], [1464597000000, 341]], toggles = $("#rev-toggles"), target = $("#flotcontainer");

                var data = [{
                    label: "Target Profit",
                    data: trgt,
                    bars: {
                        show: true,
                        align: "center",
                        barWidth: 30 * 30 * 60 * 1000 * 80
                    }
                }, {
                    label: "Actual Profit",
                    data: prft,
                    color: '#3276B1',
                    lines: {
                        show: true,
                        lineWidth: 3
                    },
                    points: {
                        show: true
                    }
                }, {
                    label: "Actual Losses",
                    data: sgnups,
                    color: '#71843F',
                    lines: {
                        show: true,
                        lineWidth: 1
                    },
                    points: {
                        show: true
                    }
                }]

                var options = {
                    grid: {
                        hoverable: true
                    },
                    tooltip: true,
                    tooltipOpts: {
                        //content: '%x - %y',
                        //dateFormat: '%b %y',
                        defaultTheme: false
                    },
                    xaxis: {
                        mode: "time"
                    },
                    yaxes: {
                        tickFormatter: function (val, axis) {
                            return "$" + val;
                        },
                        max: 1200
                    }

                };

                plot2 = null;

                function plotNow() {
                    var d = [];
                    toggles.find(':checkbox').each(function () {
                        if ($(this).is(':checked')) {
                            d.push(data[$(this).attr("name").substr(4, 1)]);
                        }
                    });
                    if (d.length > 0) {
                        if (plot2) {
                            plot2.setData(d);
                            plot2.draw();
                        } else {
                            plot2 = $.plot(target, d, options);
                        }
                    }

                };

                toggles.find(':checkbox').on('change', function () {
                    plotNow();
                });
                plotNow()

            });

            // End Finance


            // Vectormap

            data_array = {
                "NZ-AUK": 4977,
                "NZ-WGN": 4873,
                "NZ-CAN": 3671,
                "NZ-WKO": 2476,
                "NZ-OTA": 1476,
                "NZ-NTL": 146,
                "NZ-HKB": 134,
                "NZ-NSN": 100
            };

            $('#vector-map').vectorMap({
                map: 'nz_mill',
                backgroundColor: '#fff',
                regionStyle: {
                    initial: {
                        fill: '#c4c4c4'
                    },
                    hover: {
                        "fill-opacity": 1
                    }
                },
                series: {
                    regions: [{
                        values: data_array,
                        scale: ['#85a8b6', '#4d7686'],
                        normalizeFunction: 'polynomial'
                    }]
                },
                onRegionLabelShow: function (e, el, code) {
                    if (typeof data_array[code] == 'undefined') {
                        e.preventDefault();
                    } else {
                        var countrylbl = data_array[code];
                        el.html(el.html() + ': ' + countrylbl + ' visits');
                    }
                }
            });

            jQuery.expr[':'].Contains = function (a, i, m) {
                return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase()) >= 0;
            };

        })

        function ListAgreements(idList) {
            var table = $('#agreementList');
            table.empty();
            $(idList).children().each(function (index, element) {
                var tableContents = $(idList).children().clone();

                table.append(tableContents);
            });
            $('#agreementsListModal').modal('show');
        }
    </script>
}
