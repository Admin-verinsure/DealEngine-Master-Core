@model EditClientsViewModel

<div class="container">
    <form method="POST" action="~/Services/PostClient" novalidate>
        <div class="card">
            <div class="card-header">
                <div class=" form-group">
                    <label>
                        Select Client

                        <select class="form-control b" Id="OrganisationId">
                            <option selected="selected" value="">-- Select --</option>
                            @foreach (var client in Model.Owners)
                            {
                                <option value="@client.Value">@client.Text</option>
                            }
                        </select>
                    </label>
                </div>
                <div class="form-group">                    
                    <button class="btn-success btn btn-xs" type="button" onclick="GetOwner()">Go</button>
                </div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    @Html.HiddenFor(Model => Model.Organisation.Id, new { @id = "organisation.id" })
                    @Html.HiddenFor(Model => Model.ClientProgramme.Id, new { @id = "clientProgramme.id" })
                    @Html.HiddenFor(Model => Model.Programme.Id, new { @id = "Programme.Id" })

                    <div class="form-group col-md-6">

                        <div class="form-group">
                            <label class="label">Name</label>
                            @Html.TextBoxFor(m => m.Organisation.Name, new { @class = "form-control", @id = "organisation.name", @required = "" })
                        </div>

                        <div class="form-group">
                            <label class="label">Email</label>
                            @Html.TextBoxFor(m => m.Organisation.Email, new { @class = "form-control", @id = "organisation.email", @required = "" })
                        </div>
                        @if (Model.Programme.NamedPartyUnitName == "Apollo Programme")
                        {
                            <div class="form-group">
                                <label class="label">EGlobal Number</label>
                                @Html.TextBoxFor(m => m.ClientProgramme.EGlobalClientNumber, new { @class = "form-control", @id = "clientProgramme.eGlobalClientNumber", @required = "" })
                            </div>

                            <div class="form-group">
                                <label class="label">Tier</label>
                                @Html.DropDownListFor(m => m.ClientProgramme.Tier, Model.Tiers, new { @class = "form-control b", @id = "clientProgramme.tier", @required = "", @size = 1 })
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button class="btn btn-primary btn-xs" type="submit">Update</button>
            </div>
        </div>
    </form>
</div>
<div class="modal overlay" id="loadModal" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p><img src="/img/loading.gif" /> Loading. Please wait...</p>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <script type="text/javascript">
        function GetOwner() {
            debugger;
            var organisationId = document.getElementById('OrganisationId');
            var id = organisationId.options[organisationId.selectedIndex].value;
            var progid = document.getElementById('ProgrammeId');
            $("#loadModal").show();
            $.ajax({
                type: 'Post',
                url: '@Url.Action("GetClient", "Services")',
                data: { Id: id ,ProgId: progid}
            })
                .done(function (data) {
                    debugger;
                //var OutPut = JSON.parse(data);
                PopulateView(data);
                $("#loadModal").hide();         
            })
            .fail(function (jqXhr, textStatus, errorThrown) {
                debugger;
                console.log(errorThrown);
                $("#loadModal").hide();         
            });

        }

    </script>

}
