@model DealEngine.WebUI.Models.Programme.ProgrammeInfoViewModel

<form id="programmeform" method="post" class="needs-validation" novalidate>
    <div class="card">
        <div class="card-header text-white" style="background-color:#3276b1">
            <h2>Edit Programme</h2>
        </div>
        <div class="card-body">
            <table class="table table-striped">
                <tbody>
                    <tr>
                        <td>
                            <label class="label required"><strong>Programme Name: </strong></label>
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.programmeName, new { @class = "form-control", @required = "required" })
                        </td>
                    </tr>
                    <tr class="table-light">
                        <td>
                            <label class="label required"><strong>Tax Rate: </strong></label>
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.TaxRate, new { @class = "form-control", @required = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label class="label required"><strong>Policy Number Prefix String: </strong></label>
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.PolicyNumberPrefixString, new { @class = "form-control", @required = "required" })
                        </td>
                    </tr>
                    @if (User.IsInRole("TCUser"))
                    {
                        <tr class="table-light">
                            <td>
                                <label class="label required"><strong>Declaration: </strong></label>
                            </td>
                            <td>
                                @Html.TextAreaFor(m => m.Declaration, new { @class = "form-control", @required = "required" })
                            </td>
                        </tr>
                        <tr class="table-light">
                            <td>
                                <label class="label required"><strong>Stop Agreement Message: </strong></label>
                            </td>
                            <td>
                                @Html.TextAreaFor(m => m.StopAgreementMessage, new { @class = "form-control", @required = "required" })
                            </td>
                        </tr>
                        <tr class="table-light">
                            <td>
                                <label class="label required"><strong>No Payment Required Message: </strong></label>
                            </td>
                            <td>
                                @Html.TextAreaFor(m => m.NoPaymentRequiredMessage, new { @class = "form-control", @required = "required" })
                            </td>
                        </tr>
                        <tr class="table-light">
                            <td>
                                <label class="label required"><strong>Broker user email: </strong></label>
                            </td>
                            <td>
                                @Html.DropDownListFor(m => m.Brokers, Model.Brokers, new { @class = "form-control", @required = "required" })
                            </td>
                        </tr>
                        <tr class="table-light">
                            <td>
                                <label class="label required"><strong>Permission Claim: </strong></label>
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.ProgrammeClaim, new { @class = "form-control", @required = "required" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                                <label class="checkbox">
                                    @Html.CheckBoxFor(m => m.UsesEGlobal)
                                    <i></i>I want this programme to use EGlobal API.
                                </label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                                <label class="checkbox">
                                    @Html.CheckBoxFor(m => m.IsPublic)
                                    <i></i>I want this programme to be publicly available.
                                </label>
                            </td>
                        </tr>
                        <tr class="table-light">
                            <td>
                            </td>
                            <td>
                                <label class="checkbox">
                                    @Html.CheckBoxFor(m => m.StopAgreement)
                                    <i></i>I want this programme to suspend all agreements.
                                </label>
                            </td>
                        </tr>
                        <tr class="table-light">
                            <td>
                            </td>
                            <td>
                                <label class="checkbox">
                                    @Html.CheckBoxFor(m => m.HasSubsystemEnabled)
                                    <i></i>I want to enable the sub system
                                </label>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>


            @if (User.HasClaim("EditProgramme", "EditProgramme"))
            {
                <div class="card-footer">
                    @if (Model.ProductViewModel == null)
                    {
                        <button type="submit" class="btn btn-success"> Save</button>
                    }
                </div>
            }
        </div>
    </div>
</form>
@section pagespecific {
    @Html.PartialAsync("_ProgrammeScripts")
}