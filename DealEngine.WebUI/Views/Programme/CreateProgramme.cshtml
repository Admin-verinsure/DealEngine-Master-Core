@model DealEngine.WebUI.Models.Programme.ProgrammeInfoViewModel

<article class="container">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h2>Create Programme</h2>
            </div>
            <div class="card-body">
                <div id="smartwizardprogramme" class="sw-main sw-theme-circles">
                    <ul class="nav nav-tabs step-anchor">
                        <li class="nav-item active"><a href="#programme1" class="nav-link">1<br><small>Programme</small></a></li>
                        <li class="nav-item"><a href="#programme2" class="nav-link">2<br><small>Product</small></a></li>
                        <li class="nav-item"><a href="#programme3" class="nav-link">3<br><small>Templates</small></a></li>
                        <li class="nav-item"><a href="#programme4" class="nav-link">3<br><small>Information Sheet</small></a></li>
                        <li class="nav-item"><a href="#programme5" class="nav-link">3<br><small>Submit</small></a></li>
                    </ul>

                    <div class="sw-container tab-content">
                        <div id="programme1" class="tab-pane step-content">
                            @await Html.PartialAsync("ProgrammeFormPartial", Model)
                        </div>
                        <div id="programme2" class="tab-pane step-content">
                            @await Html.PartialAsync("../Product/CreateProduct", Model.ProductViewModel)
                        </div>
                        <div id="programme3" class="tab-pane step-content">
                            @await Html.PartialAsync("../InformationTemplate/CreateInformationTemplate", Model.InformationBuilderViewModel)
                        </div>
                        <div id="programme4" class="tab-pane step-content">
                            @await Html.PartialAsync("../Information/CreateInformationSheet")
                        </div>
                        <div id="programme5" class="tab-pane step-content">
                            <p>submit</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</article>

@section pagespecific {
    <script type="text/javascript">

        $(document).ready(function () {

            var questionmodal = document.getElementById('questionmodal').innerHTML;

            $('#smartwizardprogramme').smartWizard({
                selected: 0,  // Initial selected step, 0 = first step
                keyNavigation: true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
                autoAdjustHeight: true, // Automatically adjust content height
                cycleSteps: false, // Allows to cycle the navigation of steps
                backButtonSupport: true, // Enable the back button support
                useURLhash: true, // Enable selection of the step based on url hash
                lang: {  // Language variables
                    next: 'Next',
                    previous: 'Previous'
                },
                toolbarSettings: {
                    toolbarPosition: 'bottom', // none, top, bottom, both
                    toolbarButtonPosition: 'right', // left, right
                    showNextButton: true, // show/hide a Next button
                    showPreviousButton: false, // show/hide a Previous button

                },
                anchorSettings: {
                    anchorClickable: true, // Enable/Disable anchor navigation
                    enableAllAnchors: false, // Activates all anchors clickable all times
                    markDoneStep: true, // add done css
                    enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
                },
                contentURL: null, // content url, Enables Ajax content loading. can set as data data-content-url on anchor
                disabledSteps: [],    // Array Steps disabled
                errorSteps: [],    // Highlight step with errors
                theme: 'dots',
                transitionEffect: 'fade', // Effect on navigation, none/slide/fade
                transitionSpeed: '400'
            });

            $('#questionsectionwizard').smartWizard({
                selected: 0,  // Initial selected step, 0 = first step
                keyNavigation: true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
                autoAdjustHeight: true, // Automatically adjust content height
                cycleSteps: false, // Allows to cycle the navigation of steps
                backButtonSupport: true, // Enable the back button support
                useURLhash: true, // Enable selection of the step based on url hash
                lang: {  // Language variables
                    next: 'Next',
                    previous: 'Previous'
                },
                toolbarSettings: {
                    toolbarPosition: 'bottom', // none, top, bottom, both
                    toolbarButtonPosition: 'right', // left, right
                    showNextButton: true, // show/hide a Next button
                    showPreviousButton: false, // show/hide a Previous button

                },
                anchorSettings: {
                    anchorClickable: true, // Enable/Disable anchor navigation
                    enableAllAnchors: false, // Activates all anchors clickable all times
                    markDoneStep: true, // add done css
                    enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
                },
                contentURL: null, // content url, Enables Ajax content loading. can set as data data-content-url on anchor
                disabledSteps: [],    // Array Steps disabled
                errorSteps: [],    // Highlight step with errors
                theme: 'dots',
                transitionEffect: 'fade', // Effect on navigation, none/slide/fade
                transitionSpeed: '400'
            });

            $("#smartwizardprogramme").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
                if (stepDirection == "forward") {                                   
                    if (stepNumber == 0) {
                        var form = document.getElementById('programmeform');
                        form.classList.add('was-validated');
                        if (form.checkValidity() === false) {
                            throw "stop process";
                        }
                        else {
                            form.submit();
                        }
                    }
                    else if (stepNumber == 1) {
                        var form = document.getElementById('productform');
                        form.classList.add('was-validated');
                        if (form.checkValidity() === false) {
                            throw "stop process";
                        }
                        else {
                            form.submit();
                        }
                    }
                    else if (stepNumber == 2) {
                        var form = document.getElementById('templateform');
                        form.classList.add('was-validated');
                        //if (form.checkValidity() === false) {
                        //    debugger;
                        //    throw "stop process";
                        //}
                        //else {
                        //    debugger;
                            form.submit();
                        //}
                    }
                    else if (stepNumber == 3) {
                        var form = document.getElementById('informationform');
                        form.classList.add('was-validated');
                        if (form.checkValidity() === false) {
                            debugger;
                            throw "stop process";
                        }
                        else {
                            debugger;
                            form.submit();
                        }
                    }
                }
            });

            $("#questionsectionwizard").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
                if (stepDirection == "forward") {                                   
                    if (stepNumber == 1) {
                        AddQuestion();
                        //form.classList.add('was-validated');
                        //if (form.checkValidity() === false) {
                        //    throw "stop process";
                        //}
                        //else {
                        //    form.submit();
                        //}
                    }                    
                }
            });

        });

        function TriggerInput(trigger) {            
            if (trigger === "textTemplate") {
                var input = document.getElementById('question');
                input.id = 'triggeranswer';
                input.name = 'triggeranswer';
                input.value = "";
                return input;
            }
            else if (questionvalue === "dropdownTemplate") {
                var valueobjs = document.getElementsByName('dropdownvalue');
                var select = document.createElement("SELECT");
                for (var i = 0; i < valueobjs.length; i++) {
                    select.options.add(valueobjs[i].value);
                }
                select.id = 'triggeranswer';
                select.name = 'triggeranswer';
                return select;
            }
            else {
                var valueobjs = document.getElementsByName('dropdownvalue');
                var select = document.createElement("SELECT");                
                select.options.add('Yes');
                select.options.add('No');
                select.id = 'triggeranswer';
                select.name = 'triggeranswer';
                return select;
            }
            return 
        }

        function ToggleContent() {

            var checked = document.getElementById('conditional').checked;            
            var container = document.getElementById('conditionalcontent')
            if (checked === true) {
                container.classList.toggle("invisible", false);
                container.classList.toggle("visible", true);
            } else {
                container.classList.toggle("invisible", true);
                container.classList.toggle("visible", false);
            }
            var trigger = document.getElementById('questiontype').value;
            var child = TriggerInput(trigger);
            document.getElementById('trigger').appendChild(child);
        }

        function CreateInput(name, id) {
            var input = document.createElement("input");
            input.setAttribute("type", "hidden");            
            input.setAttribute("name", name);
            input.setAttribute("value", id);            
            document.getElementById("templateform").appendChild(input);
        }

        function AddQuestion() {
            var templateId = "";
            var sectionId = "";
            var itemId = "";
            var model = $("#templateform").serialize();
                     
            $.ajax({ // make an AJAX request
                type: "POST",
                url: '..@Url.Action("CreateItem", "InformationTemplate")', // it's the URL of your component B
                data: model, // serializes the form's elements
                async: false,
                success: function (data)                
                {                    
                    templateId = data.templateId;
                    sectionId = data.sectionId;           
                    itemId = data.itemId;
                }
            });
            document.getElementById('templateId').value = templateId;
            CreateInput("sectionId", sectionId);                        
            CreateTableRow(itemId);            
            CreateSection();

            //may reset modal
            document.getElementById('questionmodal').innerHTML = questionmodal;
            $('#questionmodal').modal('hide');
        }

        function CreateSection() {            
            var questionvalue = document.getElementById('questiontype').value;
            var questiontext = document.getElementById('question').value;
            var obj = null;
            if (questionvalue === "textTemplate") {
                obj = document.createElement("input");
                obj.setAttribute("class", "form-control");
                obj.setAttribute("type", "text");
                obj.setAttribute("placeholder", questiontext);
            }
            else {
                obj = document.createElement("select");
                obj.setAttribute("class", "custom-select");
                var opt = document.createElement('option');
                // create text node to add to option element (opt)
                opt.appendChild(document.createTextNode(questiontext));                
                obj.appendChild(opt);                               
            }
            document.getElementById("sectionpreview").appendChild(obj);
        }


        function CreateTableRow(itemId) {
            var hasConditional = document.getElementById('conditionalquestion').checked;                        
            var selectlist = document.getElementById('questiontype');
            var table = document.getElementById('questiontable');
            table.classList.toggle("invisible", false);
            table.classList.toggle("visible", true);

            var row = table.insertRow();
            var cell = row.insertCell();
            var cell2 = row.insertCell();
            var cell3 = row.insertCell();

            var questiontype = selectlist.options[selectlist.selectedIndex].text;
            cell.innerHTML = questiontype;
            cell2.innerHTML = 'delete button';

            if (hasConditional === true) {
                cell3.innerHTML = '<a class="btn btn-sm btn-primary text-light" data-toggle="modal" data-target="#conditionalquestionmodal' + itemId + '"> need to change this to edit!</a>';
            }
        }

        function DisplayTemplate() {
            var selected = document.getElementById('questiontype').value;            
            if (selected == 'dropdownTemplate') {
                document.getElementById("dropdownTemplate").classList.toggle("invisible", false);
                document.getElementById("dropdownTemplate").classList.toggle("visible", true);
            }
            else {
                document.getElementById("dropdownTemplate").classList.toggle("invisible", true);
                document.getElementById("dropdownTemplate").classList.toggle("visible", false);
            }
        }

        function DisplayConditionalTemplate() {
            var selected = document.getElementById('conditionalquestiontype').value;
            if (selected == 'dropdownTemplate') {
                document.getElementById("conditionaldropdownTemplate").classList.toggle("invisible", false);
                document.getElementById("conditionaldropdownTemplate").classList.toggle("visible", true);
            }
            else {
                document.getElementById("conditionaldropdownTemplate").classList.toggle("invisible", true);
                document.getElementById("conditionaldropdownTemplate").classList.toggle("visible", false);
            }
        }

        function AddDropdownInput() {
            document.getElementById('dropdownTemplate').innerHTML
        }

    </script>
}