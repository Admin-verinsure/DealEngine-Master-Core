@model DealEngine.WebUI.Models.Programme.ProgrammeInfoViewModel

<article class="container">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h2>Create Programme</h2>
            </div>
            <div class="card-body">
                <div id="smartwizardprogramme" class="sw-main sw-theme-circles">
                    <ul class="nav nav-tabs step-anchor">
                        <li class="nav-item active"><a href="#programme1" class="nav-link">1<br><small>Programme</small></a></li>
                        <li class="nav-item"><a href="#programme2" class="nav-link">2<br><small>Product</small></a></li>
                        <li class="nav-item"><a href="#programme3" class="nav-link">3<br><small>Templates</small></a></li>
                        <li class="nav-item"><a href="#programme4" class="nav-link">3<br><small>Submit</small></a></li>
                    </ul>

                    <div class="sw-container tab-content">
                        <div id="programme1" class="tab-pane step-content">
                            @await Html.PartialAsync("ProgrammeFormPartial", Model)
                        </div>
                        <div id="programme2" class="tab-pane step-content">
                            @await Html.PartialAsync("../Product/CreateProduct", Model.ProductViewModel)
                        </div>
                        <div id="programme3" class="tab-pane step-content">
                            @await Html.PartialAsync("../InformationTemplate/CreateInformationTemplate", Model.InformationBuilderViewModel)
                        </div>
                        <div id="programme4" class="tab-pane step-content">
                            <p>submit</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</article>

@section pagespecific {
    <script type="text/javascript">

        $(document).ready(function () {

            $('#smartwizardprogramme').smartWizard({
                selected: 0,  // Initial selected step, 0 = first step
                keyNavigation: true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
                autoAdjustHeight: true, // Automatically adjust content height
                cycleSteps: false, // Allows to cycle the navigation of steps
                backButtonSupport: true, // Enable the back button support
                useURLhash: true, // Enable selection of the step based on url hash
                lang: {  // Language variables
                    next: 'Next',
                    previous: 'Previous'
                },
                toolbarSettings: {
                    toolbarPosition: 'bottom', // none, top, bottom, both
                    toolbarButtonPosition: 'right', // left, right
                    showNextButton: true, // show/hide a Next button
                    showPreviousButton: false, // show/hide a Previous button

                },
                anchorSettings: {
                    anchorClickable: true, // Enable/Disable anchor navigation
                    enableAllAnchors: false, // Activates all anchors clickable all times
                    markDoneStep: true, // add done css
                    enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
                },
                contentURL: null, // content url, Enables Ajax content loading. can set as data data-content-url on anchor
                disabledSteps: [],    // Array Steps disabled
                errorSteps: [],    // Highlight step with errors
                theme: 'dots',
                transitionEffect: 'fade', // Effect on navigation, none/slide/fade
                transitionSpeed: '400'
            });

            $("#smartwizardprogramme").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
                if (stepDirection == "forward") {                                   
                    if (stepNumber == 0) {
                        var form = document.getElementById('programmeform');
                        form.classList.add('was-validated');
                        if (form.checkValidity() === false) {
                            throw "stop process";
                        }
                        else {
                            form.submit();
                        }
                    }
                    else if (stepNumber == 1) {
                        var form = document.getElementById('productform');
                        form.classList.add('was-validated');
                        if (form.checkValidity() === false) {
                            throw "stop process";
                        }
                        else {
                            form.submit();
                        }
                    }
                    else if (stepNumber == 2) {
                        var form = document.getElementById('templateform');
                        form.classList.add('was-validated');
                        if (form.checkValidity() === false) {
                            debugger;
                            throw "stop process";
                        }
                        else {
                            debugger;
                            form.submit();
                        }
                    }
                }
            });

        });

        function CreateInput(name, id) {
            var input = document.createElement("input");
            input.setAttribute("type", "hidden");            
            input.setAttribute("name", name);
            input.setAttribute("value", id);            
            document.getElementById("templateform").appendChild(input);
        }

        function CreateConditionalModal(id) {
            var modal = document.createElement("div");
            var clonemodal = document.getElementById("questionmodal");
            var node = clonemodal.childNodes[1].cloneNode(true);
            modal.appendChild(node);
            modal.setAttribute("class", "modal fade");
            modal.id = 'conditionalquestionmodal' + id;
            document.getElementById("templateform").appendChild(modal);
        }

        function AddQuestion() {
            var templateId = "";
            var sectionId = "";
                     
            $.ajax({ // make an AJAX request
                type: "POST",
                url: '..@Url.Action("CreateSection", "InformationTemplate")', // it's the URL of your component B
                data: $("#templateform").serialize(), // serializes the form's elements
                async: false,
                success: function (data)                
                {                    
                    templateId = data.templateId;
                    sectionId = data.sectionId;                    
                }
            });

            CreateInput("sectionId", sectionId);            
            document.getElementById('templateId').value = templateId;

            var hasConditional = document.getElementById('conditionalquestion').checked;                        
            var selectlist = document.getElementById('questiontype');
            var table = document.getElementById('questiontable');
            table.classList.toggle("invisible", false);
            table.classList.toggle("visible", true);

            var row = table.insertRow();
            var cell = row.insertCell();
            var cell2 = row.insertCell();
            var cell3 = row.insertCell();
            
            var questiontype = selectlist.options[selectlist.selectedIndex].text;
            cell.innerHTML = questiontype;
            cell2.innerHTML = 'delete button';

            //may reset name
            var templatename = document.getElementById('templatename').value;
            document.getElementById("templateform").reset();
            document.getElementById('templatename').value = templatename;

            if (hasConditional === true) {
                debugger;
                cell3.innerHTML = '<a class="btn btn-sm btn-primary" data-toggle="modal" data-target="#conditionalquestionmodal' + sectionId + '"> Add conditional question</a>';
                debugger;
                CreateConditionalModal(sectionId);
                debugger;
            }
            debugger;
        }

        function DisplayTemplate() {
            var selected = document.getElementById('questiontype').value;
            if (selected == 'dropdownTemplate') {
                document.getElementById(selected).classList.toggle("invisible", false);
                document.getElementById(selected).classList.toggle("visible", true);
            }
            //else {
            //    document.getElementById(selected).classList.toggle("invisible", true);
            //    document.getElementById(selected).classList.toggle("visible", false);
            //}
        }

        function AddDropdownInput() {
            document.getElementById('dropdownTemplate').innerHTML
            debugger;
        }

    </script>
}