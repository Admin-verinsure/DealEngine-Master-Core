<script src="~/Scripts/plugin/jqgrid/grid.locale-en.js"></script>
<script src="/Scripts/plugin/jqgrid/jquery.jqGrid.js"></script>
<script src="~/Scripts/plugin/bootstrap-progressbar/bootstrap-progressbar.js"></script>


<script type="text/javascript">

    $(document).ready(function () {

        $('#smartwizard').smartWizard({
            selected: 0,  // Initial selected step, 0 = first step
            keyNavigation: true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
            autoAdjustHeight: false, // Automatically adjust content height
            cycleSteps: false, // Allows to cycle the navigation of steps
            backButtonSupport: true, // Enable the back button support
            useURLhash: true, // Enable selection of the step based on url hash
            lang: {  // Language variables
                next: 'Next',
                previous: 'Previous'
            },
            toolbarSettings: {
                toolbarPosition: 'both', // none, top, bottom, both
                toolbarButtonPosition: 'right', // left, right
                showNextButton: true, // show/hide a Next button
                showPreviousButton: true, // show/hide a Previous button

            },
            anchorSettings: {
                anchorClickable: true, // Enable/Disable anchor navigation
                enableAllAnchors: false, // Activates all anchors clickable all times
                markDoneStep: true, // add done css
                enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
            },
            contentURL: null, // content url, Enables Ajax content loading. can set as data data-content-url on anchor
            disabledSteps: [],    // Array Steps disabled
            errorSteps: [],    // Highlight step with errors
            theme: 'dots',
            transitionEffect: 'fade', // Effect on navigation, none/slide/fade
            transitionSpeed: '400'
        });

       $("#smartwizard").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {

           var informationsheetstatus = '@Model.ClientInformationSheet.Status.ToString()';
           var clientInformationSheet = '@Model.ClientInformationSheet.Id';

           if (stepDirection == "backward") {
               var stepNumber = stepNumber - 2;
           };

           if (stepNumber == -1) {
               $('tab1').click();
           }

           if (stepNumber === 0) {
               //if (informationsheetstatus != "Submitted") {

                   event.preventDefault();
                   if (stepDirection == "forward") {
                       //<--!Boostrap validation method
                       InformationSheetSubmit();                       

                           //if ((Isboatexist == false || IsboatNamecount == 1)  && vesselExists != null) {

                           //    window.alert("Please Add Atleast One Boat with complete information to proceed for policy  ");
                           //    $("#Vessel").trigger("click");
                           //    return false;

                           //} else if (IsboatNamecount == 1  || Isboatexist == false && vesselExists != null) {

                           //    window.alert("Please complete Vessel Information");
                           //    $("#Vessel").trigger("click");
                           //    return false;

                           //} else if (Isnamedpartycount == 0 && namedPartyExists != null && (Isnamedpartyexist != false || IsDANZnamedpartyexist != false)) {

                           //    window.alert("Please Add Atleast One Project Personnel with complete information to proceed for policy  ");
                           //    $("[id='Insured Details / Named Parties']").trigger("click");
                           //    return false;
                           //}
                           //if ((IsTradingnameexist == true && IsTradingnameCount != 0)) {

                           //    window.alert("Please Add Trading Name for Owner with complete information to proceed for policy  ");
                           //    $("[id='Insured Details / Named Parties']").trigger("click");
                           //    return false;

                           //}
                       

                       if ($('#CompanyName').val() === "AON") {
                           var nextbutton = document.getElementsByClassName("next");
                           $(nextbutton).addClass("hidden");
                           $(nextbutton).hide();
                           var prevbutton = document.getElementsByClassName("previous");
                           $(prevbutton).addClass("hidden");
                           $(prevbutton).hide();
                       }

                   }

                   $.ajax({
                       url: '@Url.Action("SubmitInformation", "Information")',
                       type: "POST",
                       data: $("#tab_1 :input").serialize({ json: true })
                   })
                       .done(function (url) {
                           $("#agreementView").load(url, function () {
                           });
                       })
                       .fail(function (a, s, d) {
                           debugger;
                           $('#getAgreementModal').hide();
                       });
               //}
           } else if (stepNumber === 1) {
               debugger;
               var status = $('#Status').val();

               if (status == "Started") {
               if (confirm("This will submit the information sheet. You cannot make changes after submitting this information sheet except by arrangement with your Broker. Continue?")) {
                   }
                   else {
                   return false;
                   }
               }

               $('.sw-btn-prev').hide();
               //$('#getAgreementDecModal').show();
                var isvalid = 0;
               var ID = $('#Id').val();
               var answerid= $('#AnswerSheetId').val();
               var postdata = {
                   id: ID
               }
               var validaterowdata = 0;
                var rownum = 0;

               var proddata = "";
               $.ajax({
                   url: '@Url.Action("GetProductName", "Information")',
                   type: "POST",
                    async: false,
                   data: postdata
               })
                    .done(function (data) {
                         proddata = data;

                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        alert("There was an error getting ProductName.");
                    });

                      var CoverOptions = new Array(proddata.length);
                        for (var i = 0; i < proddata.length; i++) {
                               var ProdName = proddata[i];
                            var queryselector = "" + "input[name=\'" + ProdName + "\']:checked";
                            var optionsselected = $(queryselector).val();
                            var producttable = "[id='" + ProdName + "'] tr";
                             rownum = 0;
                            //var jhjk = '"[id='"+ProdName +"']' tr";
                            if (optionsselected != null && typeof optionsselected !== "undefined") {
                                $(producttable).each(function () {
                                    var $tds = $(this).find('td'),
                                        value = $tds.eq(5).text().trim();
                                    rownum++;
                                    if (value != "") {
                                        var dependoption = "" + "input[name='" + value + "']:checked";
                                        var dependendoptionsselected = $(dependoption).val();
                                        if (dependendoptionsselected == "None" && optionsselected != "None") {

                                            alert("You cannot have " + ProdName + "Without " + value);
                                            isvalid++;
                                            return false;
                                        }
                                        validaterowdata++;

                                    }

                                });

                            } else {
                                isvalid++;
                                         alert("Please select cover options for all products");
                                         return false;
                            }

                            if (isvalid != 0) {
                                     break;
                            }

                            CoverOptions[i] = optionsselected;
                        }


                        if (isvalid == 0) {
                            var progId = $('#ClientProgrammeId').val();
                            var postData = { Answers: CoverOptions, ProgrammeId: progId };

                            $.ajax({
                                url: '@Url.Action("SaveCoverOptions", "Information")',
                                type: "POST",
                                data: postData
                            })
                                .done(function (data) {
                                })
                                .fail(function (a, s, d) {
                                    alert("Unable to save.");
                                });


                            $.ajax({
                                url: '@Url.Action("QuoteToAgree", "Information")',
                                type: "GET",
                                data: postdata
                            })
                                .done(function (url) {
                                    $("#agreementDeclarationView").load(url, function () {
                                        $('#getAgreementDecModal').hide();
                                    });
                                })
                                .fail(function (jqXHR, textStatus, errorThrown) {
                                    debugger;
                                    $('#getAgreementDecModal').hide();
                                    alert("There was an error getting your agreement declaration.");
                                });

                        } else {
                            return false;
                        }

               if (status == "Bound") {
                   var nextbutton = document.getElementsByClassName("next");
                   $(nextbutton).addClass("hidden");
                   $(nextbutton).hide();
                   var prevbutton = document.getElementsByClassName("previous");
                   $(prevbutton).addClass("hidden");
                   $(prevbutton).hide();
               }


           } else if (stepNumber === 2) {
               if (!$('#agreementAccept').is(":checked")) {
                   document.getElementById("advisoryModal").hidden = false;
                   return false;
               }

               $('#getAgreementPaymentModal').show();
               var nextbutton = document.getElementsByClassName("next");
               $(nextbutton).addClass("hidden");
               $(nextbutton).hide();
               $.ajax({
                   url: '@Url.Action("PaymentInformation", "Information")',
                   type: "POST",
                   data: $("#tab_1 :input").serialize({ json: true })
               })
                   .done(function (url) {
                       $("#pxpaymentView").load(url, function () {
                           $('#getAgreementPaymentModal').hide();
                           $('#getErrorModal').hide();
                       });
                   });

           } else if (stepNumber === 3) {
               var status = $('#Status').val();
               if (status == "Bound") {
                   var nextbutton = document.getElementsByClassName("next");
                   $(nextbutton).addClass("hidden");
                   $(nextbutton).hide();
                   var prevbutton = document.getElementsByClassName("previous");
                   $(prevbutton).addClass("hidden");
                   $(prevbutton).hide();
               }

               var AnswerSheetId = $('#AnswerSheetId').val();
               var array = $("#tab_2 :input").serializeArray();
               var ids = [];
               $.each(array, function (i, pair) {
                   ids.push(pair.value);
               });
               $('#getDocumentsModal').show();
               $.ajax({
                   url: '@Url.Action("AcceptAgreement", "Agreement")',
                   type: "POST",
                   contentType: "application/json; charset=utf-8",
                   data: JSON.stringify({ ClientAgreementIds: ids, answerSheetId: AnswerSheetId, Status: status })
               })
                   .done(function (response) {
                       $("#documentsSection").replaceWith(response);
                       $('#getDocumentsModal').hide();
                       var prevbutton = document.getElementsByClassName("previous");
                       $(prevbutton).hide();
                   })
                   .fail(function () {
                       $('#getDocumentsModal');
                       alert("There was an error getting your documents.");
                   });
           } else if (stepNumber === 4) {
           } else if (stepNumber === 5) {
           }
       });
   });
// DO NOT REMOVE : GLOBAL FUNCTIONS!
    $(document).ready(function () {

        $('[data-toggle="popover"]').popover({
            trigger: 'manual',
            html: true,
            animation: false
        }).on('mouseenter', function () {

            var _this = this;
            $(this).popover('show');
            $('.popover').on('mouseleave', function () {
                $(_this).popover('hide');
            });
        }).on('mouseleave', function () {
            var _this = this;
            setTimeout(function () {
                if (!$('.popover:hover').length) {
                    $(_this).popover('hide');
                }
            }, 450);
        });

        $('#AddOrganisation').tabs();
        $('#Principaltabs').tabs();
        $('#ceasprojecttabs').tabs();
        $(".chosen-select").chosen({ width: "95%" });
        $('#Nonregisteredtabs').tabs();
        $('#tabs').tabs();
        $('#Boattabs').tabs();
        $('#SharedRole').tabs();
        $('#SharedRevenue').tabs();
        $('#CommonLocation').tabs();
        $('#Project').tabs();
        $('#PMINZNamedPartiestabs').tabs();
        $('#registeredtrailertabs').tabs();
        $('#Landtabs').tabs();
        $('#Claimtabs').tabs();
        $('#CEASPrincipaltabs').tabs();
        $('#BoatUsetabs').tabs();
        $('#NamedPartiestabs').tabs();
        $('#BusinessContracttabs').tabs();
        $('#updateBoat').css({ "background-color": "#339933", "color": "White" });
        $('#ClearBoat').css({ "background-color": "red", "color": "White" });
        $('#AddClearBoat').css({ "background-color": "red", "color": "White" });
        $('#UpdateNRVehicle').css({ "background-color": "#339933", "color": "White" });
        $('#AddNRVehicle').css({ "background-color": "#339933", "color": "White" });
        $('#ClearNRVehicle').css({ "background-color": "red", "color": "White" });
        $('#CancelNRVehicle').css({ "background-color": "red", "color": "White" });
        $('#AddupdateBoat').css({ "background-color": "#339933", "color": "White" });
        $('#AddupdateParty').css({ "background-color": "#339933", "color": "White" });
        $('.updateBoat').css({ "background-color": "#339933", "color": "White" });
        $('.ClearBoat').css({ "background-color": "red", "color": "White" });
        $('.AddupdateBoat').css({ "background-color": "#339933", "color": "White" });
        $('.AddClearBoat').css({ "background-color": "red", "color": "White" });
        $('.multiselect-container').css({ "width": "100%" });
        $('.multiselect').multiselect({
            includeSelectAllOption: true,
            buttonWidth: '100%'
        });

        $('.overlay').css({
            "position": "fixed",
            "width": "100%",
            "height": "100%",
            "z-index": "1000",
            "top": "0px",
            "left": "0px",
            "opacity": "1"
        });

        $('#AddClearBoat').click(function () {
            var mode = "Edit";
        });
        $('.modal').on('hidden.bs.modal', function (e) {
            $(this).removeData();
        });
        $('body').on('hidden.bs.modal', '.modal', function () {
            $(this).removeData('bs.modal');
        });

        $("input[data-type='currency']").on({
            keyup: function () {
                formatCurrency($(this));
            },
            blur: function () {
                formatCurrency($(this), "blur");
            },
        });


        $('.Calenderdate').datepicker({
            dateFormat: "dd/mm/yy",
        });

        $('.Effectivedate').datepicker({
            maxDate: "+30d",
            dateFormat: "dd/mm/yy",
            minDate: 0
        });
        $('.Birthdate').datepicker({
            dateFormat: "dd/mm/yy",
            maxDate: 0
        });

        $('.Startdate').datepicker({
            maxDate: "+0d",
            dateFormat: "dd/mm/yy"
        });

        $('.alert').alert()

        function showmore() {
            var _sheetId = $('#ClientInformationSheet_Id').val();
            $('#MarshCoastGuardMotor').on('load', 'Html.Partial("PrefabSections/CommonClaim" , _sheetId);');
        };

        function formatNumber(n) {
            return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        }

        function formatCurrency(input, blur) {
            var input_val = input.val();
            if (input_val === "") { return; }
            var original_len = input_val.length;
            var caret_pos = input.prop("selectionStart");
            if (input_val.indexOf(".") >= 0) {
                var decimal_pos = input_val.indexOf(".");
                var left_side = input_val.substring(0, decimal_pos);
                var right_side = input_val.substring(decimal_pos);
                left_side = formatNumber(left_side);
                right_side = formatNumber(right_side);
                if (blur === "blur") {
                    right_side += "00";
                }
                right_side = right_side.substring(0, 2);
                input_val = "$" + left_side + "." + right_side;
            } else {
                input_val = formatNumber(input_val);
                input_val = "$" + input_val;
                if (blur === "blur") {
                    input_val += ".00";
                }
            }
            input.val(input_val);
            var updated_len = input_val.length;
            caret_pos = updated_len - original_len + caret_pos;
            input[0].setSelectionRange(caret_pos, caret_pos);
        }

        var accordionIcons = {
            header: "fa fa-circle-o",           // custom icon class
            activeHeader: "fa fa-dot-circle-o"  // custom icon class
        };

        $('#accordionId').on('show.bs.collapse', function () {
            //get the current tab
            var section = document.getElementsByClassName("collapse show")[0];
            //get form of section if it exists
            if (section != null) {
                var splitstr = section.id.split('_');
                var icon = document.getElementById("icon_" + splitstr[1]);
                icon.classList.remove("fa-rotate-180");
                var form = section.lastElementChild.lastElementChild;
                try {
                    if (form.checkValidity() === false) {
                        document.getElementById("toastbody").innerHTML = " section has is incomplete";
                        $('.toast').toast('show');
                    }
                    else {
                        document.getElementById("toastbody").innerHTML = " section was completed";
                        $('.toast').toast('show');
                    }
                } catch (ex) {

                }
            }
        });

        $('#accordionId').on('shown.bs.collapse', function () {
            //get the current tab
            var section = document.getElementsByClassName("collapse show")[0];
            //get form of section if it exists
            if (section != null) {
                var splitstr = section.id.split('_');
                var icon = document.getElementById("icon_" + splitstr[1]);
                icon.classList.add("fa-rotate-180");
            }
        });

        $("#accordion").accordion({
            autoHeight: false,
            heightStyle: "content",
            collapsible: false,
            animate: 300,
            icons: accordionIcons,
            header: "h4",
            activate: function (event, ui) { }
        });

        $("#accordion").on("accordionactivate", function (e, ui) {
            if (ui.oldPanel != null) {
                $.ajax({
                    url: '@Url.Action("SaveInformation", "Information")',
                    type: "POST",
                    data: $("#tab_1 :input").serialize({ json: true })
                })
                    .done(function (data) {
                        if (ui.oldHeader[0].id == "Investment Product") {
                            debugger;
                            checkInvestmentVal();
                        }
                        document.getElementById("toastbody").innerHTML = ui.oldHeader[0].id + " section has saved";

                        $('.toast').toast('show');
                        $('#tblBuilding').trigger('reloadGrid');
                        $('#Principal,Partners or Directors').trigger('reloadGrid');
                        $('#tblWaterLocation').trigger('reloadGrid');
                        $('#tblLocation').trigger('reloadGrid');
                        $('#tblRegisteredMV').trigger('reloadGrid');
                        $('#tblOperator').trigger('reloadGrid');
                        $('#tblBoatUse').trigger('reloadGrid');
                        $('#tblOU').trigger('reloadGrid');
                        $('#NamedParties').trigger('reloadGrid');
                        $('#tblBoat').trigger('reloadGrid');
                        $('#boatTabs-3').trigger('chosen:updated');
                        $('#ui-accordion-accordion-header-3').trigger('chosen:updated');
                        $('#BoatLandLocation').trigger('chosen:updated');
                        $('#tblBusinessContract').trigger('reloadGrid');
                        $('#PrincipalDirectors').trigger('reloadGrid');
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        debugger;
                    });
            }
        });

    $('.AddButton').click(function () {
          $('#Addipeffectivedatesection').addClass('hidden');
           $('#boatTabs-3').trigger('chosen:updated');
               $('#ui-accordion-accordion-header-3').trigger('chosen:updated');
               $('#BoatLandLocation').trigger('chosen:updated');
        $('#fieldset' + " :input").val("");

    });

    $('.EditButton').click(function () {
        $('#fieldset' + " :input").val("");
    });

    $('#myPanelEditModal').on('show.bs.modal', function (e) {
        $('.modal').css('width', '600px');
        var PanelId = $(e.relatedTarget).data('panel-id');
        var PanelName = $(e.relatedTarget).data('panel-name');
        var PanelPositon = $(e.relatedTarget).data('Panel-position');
        $(e.currentTarget).find('input[name="PanelId"]').val(PanelId);
        $(e.currentTarget).find('input[name="PanelName2"]').val(PanelName);
        $(e.currentTarget).find('input[name="PanelPosition2"]').val(PanelPositon);
    });
    });

    $('#boatForm').submit(function (event) {
        if (!this.checkValidity()) {
            event.preventDefault();
        }
    });


    $("#btnRemoveSubmit").click(function () {
        debugger;
            var valid = Validateremove();
        if (valid) {
            debugger;
            var boatId = $('#boatID').val();
		   var status =  $('#status').val();
		   var sourcetable = $('#sourceTable').val();
            var desttable = $('#destTable').val();

            SetBoatCeasedStatus(boatId, status,sourcetable,desttable);
            debugger;
                SetBoatRemovedStatus(boatId,status,sourcetable,desttable);
        }

    });

        $("#btnVehicleRemoveSubmit").click(function () {
        debugger;
            var valid = ValidateVehicleremove();
        if (valid) {
            debugger;
            var vehicleId = $('#vehicleId').val();
		   var status =  $('#vehiclestatus').val();
		   var sourcetable = $('#vehiclesourceTable').val();
            var desttable = $('#vehicledestTable').val();
            SetVehicleCeasedStatus(vehicleId, status, sourcetable, desttable);
                SetVehicleRemovedStatus(vehicleId,status,sourcetable,desttable);
        }

    });



    $("#btnPanelSubmit").click(function () {
        var PanelId = $("#PanelId").val();
        var PanelName = $("#PanelName2").val();
        var PanelPosition = $("#PanelPosition2").val();
        $.ajax({
            type: "Post",
            data: JSON.stringify({ panelId: PanelId, panelName: PanelName, panelPosition: PanelPosition }),
            url: "/Information/EditPanel",
            contentType: "application/json; charset=utf-8",
            success: function () {
                $("#myPanelEditModal").modal("hide");
                alert("Saved Successfully!");
                location.reload(true);
            }
        })
    });

    function checkInvestmentVal() {
        debugger;
        var hjh = $("#HasClientFunds").val();
        if ($("#HasClientFunds").val() == "1") {
        var totalpercent = 0;
        $.each($(".Investment input[type=\"text\"]"), function (index, ele) {
            debugger;
            if (ele.value != "") {
            var percent = parseInt(ele.value);
            totalpercent +=  percent;

            }

        });

         if (totalpercent != 100) {
             alert("Percentage calculation does not equal to 100%");
              $("[id='AAA Investment Products']").trigger("click");
            return false;
        }
            }
    }
    function validateClaim(claim1, claim2, claim3, claim4, claim5) {
        var validity = true;
        if (claim1 == "") {
            $('#ValidateClaimcond1').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            if (claim1 == "true" && $("#Claimexp1Details").val() == "") {
                $('#ValidateClaimDetails1').html("<font color='red'>Field is required</font>")
                if (validity) {
                    validity = false;
                }
            } else {
                if (claim1 == "false") {
                    $('#Claimexp1Details').val("");
                }
                $('#ValidateClaimcond1').html("<i></i>");
                $('#ValidateClaimDetails1').html("<i></i>");
            }
        }
        if (claim2 == "") {
            $('#ValidateClaimcond2').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            if (claim2 == "true" && $("#Claimexp2Details").val() == "") {
                $('#ValidateClaimDetails2').html("<font color='red'>Field is required</font>")
                if (validity) {
                    validity = false;
                }
            } else {
                if (claim2 == "false") {
                    $('#Claimexp2Details').val("");
                }
                $('#ValidateClaimcond2').html("<i></i>");
                $('#ValidateClaimDetails2').html("<i></i>");
            }
        }
        if (claim3 == "") {
            $('#ValidateClaimcond3').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            if (claim3 == "true" && $("#Claimexp3Details").val() == "") {
                $('#ValidateClaimDetails3').html("<font color='red'>Field is required</font>")
                if (validity) {
                    validity = false;
                }
            } else {
                if (claim3 == "false") {
                    $('#Claimexp3Details').val("");
                }
                $('#ValidateClaimcond3').html("<i></i>");
                $('#ValidateClaimDetails3').html("<i></i>");
            }
        }
        if (claim4 == "") {
            $('#ValidateClaimcond4').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            if (claim4 == "true" && $("#Claimexp4Details").val() == "") {
                $('#ValidateClaimDetails4').html("<font color='red'>Field is required</font>")
                if (validity) {
                    validity = false;
                }
            } else {
                if (claim4 == "false") {
                    $('#Claimexp4Details').val("");
                }
                $('#ValidateClaimcond4').html("<i></i>");
                $('#ValidateClaimDetails4').html("<i></i>");
            }
        }
        if (claim5 == "") {
            $('#ValidateClaimcond5').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            if (claim5 == "true" && $("#Claimexp5Details").val() == "") {
                $('#ValidateClaimDetails5').html("<font color='red'>Field is required</font>")
                if (validity) {
                    validity = false;
                }
            } else {
                if (claim5 == "false") {
                    $('#Claimexp5Details').val("");
                }
                $('#ValidateClaimcond5').html("<i></i>");
                $('#ValidateClaimDetails5').html("<i></i>");
            }
        }
        return validity;
    }

    function RemoveVehicle(vehicleId, status, sourceTable, destTable, Modelstatus) {
        var _sheetId = $('#AnswerSheetId').val();
        var postData = {
            'vehicleId': vehicleId,
            'answerSheetId': _sheetId
        };

        $.ajax({
            url: '@Url.Action("GetOriginalVehicle", "Services")',
            type: "Post",
            data: postData
        })
            .done(function (data) {
                if (data.OriginalVehicleId != "00000000-0000-0000-0000-000000000000") {
                    if (Modelstatus != "Submitted") {
                        $('#VehicleRemoveModal').show();
                        $('.modal').css({ "width": "600px", "margin-left": "600px" });
                        $('#vehicleId').val(vehicleId);
                        $('#vehiclestatus').val(status);
                        $('#vehiclesourceTable').val(sourceTable);
                        $('#vehicledestTable').val(destTable);
                    } else {
                        alert("Information Sheet has already been submitted, and cannot be updated.");
                    }
                } else {
                    SetVehicleRemovedStatus(vehicleId, status, sourceTable, destTable);
                }
            });
    }

    function RemoveBoat(boatId, status, sourceTable, destTable, Modelstatus) {
        var _sheetId = $('#AnswerSheetId').val();
        var postData = {
            'boatId': boatId,
            'answerSheetId': _sheetId
        };

        $.ajax({
            url: '@Url.Action("GetOriginalBoat", "Services")',
            type: "Post",
            data: postData
        })
            .done(function (data) {
                if (data.originalBoatId != "00000000-0000-0000-0000-000000000000") {
                    if (Modelstatus != "Submitted") {
                        $('#BoatRemoveModal').show();
                        $('.modal').css({ "width": "600px", "margin-left": "600px" });
                        $('#boatID').val(boatId);
                        $('#status').val(status);
                        $('#sourceTable').val(sourceTable);
                        $('#destTable').val(destTable);
                    } else {
                        alert("Information Sheet has already been submitted, and cannot be updated.");
                    }
                } else {
                    SetBoatRemovedStatus(boatId, status, sourceTable, destTable);
                }
            });
    };

    function validateClaimDetails(Claim) {

          var claim = document.getElementById(Claim);

        if (claim.options[claim.selectedIndex].value == "true") {
            $("#" + Claim + "Sec").removeClass('hidden');
        } else {
            $("#" + Claim + "Sec").addClass('hidden');

        }

    }

    function validatePMINZPI(PMINZPI) {

          var pMINZPI = document.getElementById(PMINZPI);
          var sec = "#" + PMINZPI + "Sec";
        if (pMINZPI.options[pMINZPI.selectedIndex].value == "true" ) {

            $("#" + PMINZPI + "Sec").removeClass('hidden');
        } else {
            $("#" + PMINZPI + "Sec").addClass('hidden');
            $("#" + PMINZPI + "Details").val("");

        }



    }

     function Unlock() {
         var ProgrammeId = $('#Id').val();
         var AnswerSheetId = $('#AnswerSheetId').val();
         $.ajax({
            url: '@Url.Action("Unlock", "Information")',
             type: "POST",
             data: JSON.stringify({ answerSheetId: AnswerSheetId, programmeId: ProgrammeId }),
            contentType: "application/json; charset=utf-8"
        })
             .done(function (url) {
                 location.reload(true);
            })
    }

    function AuthoriseReferrals() {
        var clientAgreementId = $('#ClientAgreementId').val();
         $.ajax({
            url: '@Url.Action("AuthorisedReferrals", "Agreement")',
             type: "POST",
             data: JSON.stringify({ clientAgreementId: clientAgreementId }),
            contentType: "application/json; charset=utf-8"
        })
             .done(function (url) {
                 location.reload(true);
            })
    }

    function ReadOnly() {
        if (document.getElementById("fieldset") != null) {
            document.getElementById("fieldset").disabled = true;
        }
        var updatebutton = document.getElementById("update");
        $(updatebutton).addClass("hidden");
        $(updatebutton).hide();
        var trashbutton = document.getElementsByClassName("glyphicon glyphicon-trash");
        $(trashbutton).addClass("hidden");
        $(trashbutton).hide();
        var tbutton = document.getElementsByClassName(" btn-danger");
        $(tbutton).addClass("hidden");
        $(tbutton).hide();
        var trash = document.getElementById("trash");
        $(trash).addClass("hidden");
        $(trash).hide();
        var t = document.getElementById("span");
        $(t).addClass("hidden");
        $(t).hide();
        var tr = document.getElementsByName("update");
        $(tr).addClass("hidden");
        $(tr).hide();

    }



    function ValidateAddBoatForm(tabId, tableId, currentTab) {

        event.preventDefault();
        var BoatName = $('#AddBoatName').val();
        var BoatType1 = $('#AddBoatType1').val();
        var BoatType2 = $('#AddBoatType2').val();
        var BoatOperator = $('#AddBoatOperator').val();
        var VesselArea = $('#AddVesselArea').val();
        var AucklandRegistration = $('#AddAucklandRegistration').val();
        var BuiltProfessionally = $('#AddBuiltProfessionally').val();
        var BoatMake = $('#AddBoatMake').val();
        var BoatModel = $('#AddBoatModel').val();
        var YearOfManufacture = $('#AddYearOfManufacture').val();
        var HullConstruction = $('#AddHullConstruction').val();
        var OtherConstructionType = $('#AddOtherConstructionType').val();
        var HullConfiguration = $('#AddHullConfiguration').val();
        var OtherHullConfiguration = $('#AddOtherHullConfiguration').val();
        var MotorType = $('#AddMotorType').val();
        var ModifiedMotor = $('#AddModifiedMotor').val();
        var MaxRatedSpeed = $('#AddMaxRatedSpeed').val();
        var RiggingType = $('#AddRiggingType').val();
        var MastType = $('#AddMastType').val();
        var maxSumInsured = $('#AddMaxSumInsured').val();
        var excess = $('#Addexcess').val();
        var BoatIsTrailered = $('#AddBoatIsTrailered').val();
        var BoatTrailer = $('#AddBoatTrailer').val();
        var BoatLandLocation = $('#AddBoatLandLocation').val();
        var BoatWaterLocation = $('#AddBoatWaterLocation').val();
        var boatusess = $("#AddSelectedBoatUse").val();
        var interestedParty = $("#AddSelectedInterestedParty").val();
        var effectiveIpdate = $("#AddBoatIPEffectiveDate").val();
        var selectedBoatUse = $("#AddSelectedBoatUse").val();
        var othermarinaName = $("Addothermarina").val();
        var Addeffectivedate = $("#AddBoatEffectiveDate").val();

        var validity = true;

        //
        // if (Addeffectivedate == "") {
        //    $('#validateAddboateffectivedate').html("<font color='red'>Field is required</font>")
        //    if (validity) {
        //        validity = false;
        //    }
        //} else {
        //    $('#validateAddboateffectivedate').html("<i></i>");
        //}

        if (RiggingType == "" && BoatType1 == "YachtsandCatamarans") {
            $('#validateAddRiggingType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddRiggingType').html("<i></i>");
        }
        if (MastType == "" &&  BoatType1 == "YachtsandCatamarans") {
            $('#validateAddMastType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddMastType').html("<i></i>");
        }
         if (selectedBoatUse == null && (BoatType1 == "CruisersandLaunches" || BoatType1 == "YachtsandCatamarans")) {
            $('#Addvalidateboatuse').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#Addvalidateboatuse').html("<i></i>");
        }
        if (BoatName == "") {
            $('#validateAddBoatName').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatName').html("<i></i>");
        }
        if (BoatType1 == "") {
            $('#validateAddBoatType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        }
        else {
            $('#validateAddBoatType').html("<font></font>");
        }
        if (BoatType2 == "") {
            $('#validateAddBoatType2').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatType2').html("<font></font>");
        }

        if (BoatOperator == "") {
            $('#validateAddBoatOperator').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatOperator').html("<font></font>");
        }
        if (VesselArea == "" && (BoatType1 == "Jetski")) {
            $('#validateAddVesselArea').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddVesselArea').html("<font></font>");
        }
        if (AucklandRegistration == "" && BoatType1 == "Jetski") {
            $('#validateAddAucklandRegistration').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddAucklandRegistration').html("<font></font>");
        }
        if (BuiltProfessionally == "") {
            $('#validateAddBuiltProfessionally').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBuiltProfessionally').html("<font></font>");
        }
        if (BoatMake == "") {
            $('#validateAddBoatMake').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatMake').html("<font></font>");
        }
        if (BoatModel == "") {
            $('#validateAddBoatModel').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatModel').html("<font></font>");
        }
        var result = validateInt(YearOfManufacture);
        if (YearOfManufacture == "") {
            $('#validateAddYearOfManufacture').html("<font color='red'>Field is required</font>");
            if (validity) {
                validity = false;
            }
        } else if (!result) {
            $('#validateAddYearOfManufacture').html("<font color='red'>Please enter the number.</font>")
            if (validity) {
                validity = result;
            }
        } else {
            $('#validateAddYearOfManufacture').html("<font></font>");
        }
        if (HullConstruction == "") {
            $('#validateAddHullConstruction').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddHullConstruction').html("<font></font>");
        }
        if (OtherConstructionType == "" && HullConstruction == "Other") {
            $('#validateAddOtherConstructionType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddOtherConstructionType').html("");
        }
        if (HullConfiguration == "") {
            $('#validateAddHullConfiguration').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddHullConfiguration').html("");
        }
        if (OtherHullConfiguration == "" && HullConfiguration == "Other") {
            $('#validateAddOtherHullConfiguration').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddOtherHullConfiguration').html("");
        }
        if (MotorType == "") {
            $('#validateAddMotorType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddMotorType').html("");
        }
        if (ModifiedMotor == "" && MotorType != "NA") {
            $('#validateAddModifiedMotor').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddModifiedMotor').html("");
        }
        if (MaxRatedSpeed == "") {
            $('#validateAddMaxRatedSpeed').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddMaxRatedSpeed').html("");
        }
        if (maxSumInsured == "") {
            $('#validateAddMaxSumInsured').html("<font color='red'>Field is required</font>");
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddMaxSumInsured').html("");
        }
        if (excess == "") {
            $('#validatAddeexcess').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validatAddeexcess').html("");
        }
        if (BoatIsTrailered == "") {
            $('#validateAddBoatIsTrailered').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatIsTrailered').html("");
        }
        if (BoatTrailer == "" && BoatIsTrailered == "Yes") {
            $('#validateAddBoatTrailer').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatTrailer').html("");
        }
        if (BoatLandLocation == "" && !(BoatType2 == "Moored" || BoatType2 == "Berthed")) {
            $('#validateAddBoatLandLocation').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatLandLocation').html("");
        }
        if (BoatWaterLocation == "" && (BoatType2 == "Moored" || BoatType2 == "Berthed")) {
            $('#validateAddBoatWaterLocation').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAddBoatWaterLocation').html("");
        }
        if (validity) {
            $(".search-choice-close").click();
            AddBoat(event,tabId, boatusess, tableId, interestedParty, maxSumInsured, BuiltProfessionally, MotorType, HullConfiguration,othermarinaName)
            SetCurrentTab(currentTab);
        } else {
            var require = document.getElementById("updaterequired");
            $('#updaterequired').removeClass("hidden");
            $(require).show('2000');

            return validity;
        }
    }

    function ValidateBoatForm(event, tabId, tableId, currentTab) {
        event.preventDefault();

        var BoatName = $('#BoatName').val();
        var BoatType1 = $('#BoatType1').val();
        var BoatType2 = $('#BoatType2').val();
        var BoatOperator = $('#BoatOperator').val();
        var VesselArea = $('#VesselArea').val();
        var AucklandRegistration = $('#AucklandRegistration').val();
        var BuiltProfessionally = $('#BuiltProfessionally').val();
        var BoatMake = $('#BoatMake').val();
        var BoatModel = $('#BoatModel').val();
        var YearOfManufacture = $('#YearOfManufacture').val();
        var HullConstruction = $('#HullConstruction').val();
        var OtherConstructionType = $('#OtherConstructionType').val();
        var HullConfiguration = $('#HullConfiguration').val();
        var OtherHullConfiguration = $('#OtherHullConfiguration').val();
        var MotorType = $('#MotorType').val();
        var ModifiedMotor = $('#ModifiedMotor').val();
        var MaxRatedSpeed = $('#MaxRatedSpeed').val();
        var RiggingType = $('#RiggingType').val();
        var MastType = $('#MastType').val();
        var maxSumInsured = $('#MaxSumInsured').val();
        var excess = $('#excess').val();
        var BoatIsTrailered = $('#BoatIsTrailered').val();
        var BoatTrailer = $('#BoatTrailer').val();
        var BoatLandLocation = $('#BoatLandLocation').val();
        var BoatWaterLocation = $('#BoatWaterLocation').val();
        var boatusess = $("#SelectedBoatUse").val();
        var interestedParty = $("#SelectedInterestedParty").val();
        var effectiveIpdate = $("#BoatIPEffectiveDate").val();
        var selectedBoatUse = $("#SelectedBoatUse").val();
        var othermarinaName = $("othermarina").val();
        var Addeffectivedate = $("#BoatEffectiveDate").val();

        var validity = true;
        if (Addeffectivedate == "") {
            $('#validateboateffectivedate').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateboateffectivedate').html("<i></i>");
        }
          if (RiggingType == "" && BoatType1 == "YachtsandCatamarans") {
            $('#validateRiggingType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateRiggingType').html("<i></i>");
        }
        if (MastType == "" &&  BoatType1 == "YachtsandCatamarans") {
            $('#validateMastType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateMastType').html("<i></i>");
        }
         if (selectedBoatUse == null && (BoatType1 == "CruisersandLaunches" || BoatType1 == "YachtsandCatamarans")) {
            $('#validateboatuse').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateboatuse').html("<i></i>");
        }
        if (BoatName == "") {
            $('#validateBoatName').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatName').html("<i></i>");
        }
        if (BoatType1 == "") {
            $('#validateBoatType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        }
        else {
            $('#validateBoatType').html("<font></font>");
        }
        if (BoatType2 == "") {
            $('#validateBoatType2').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatType2').html("<font></font>");
        }
        if (BoatOperator == "") {
            $('#validateBoatOperator').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatOperator').html("<font></font>");
        }
        if (VesselArea == "" && (BoatType1 == "Jetski")) {
            $('#validateVesselArea').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateVesselArea').html("<font></font>");
        }
        if (AucklandRegistration == "" && BoatType1 == "Jetski") {
            $('#validateAucklandRegistration').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateAucklandRegistration').html("<font></font>");
        }
        if (BuiltProfessionally == "") {
            $('#validateBuiltProfessionally').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBuiltProfessionally').html("<font></font>");
        }
        if (BoatMake == "") {
            $('#validateBoatMake').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatMake').html("<font></font>");
        }
        if (BoatModel == "") {
            $('#validateBoatModel').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        }else {
            $('#validateBoatModel').html("<font></font>");
        }
        var result = validateInt(YearOfManufacture);
        if (YearOfManufacture == "") {
            $('#validateYearOfManufacture').html("<font color='red'>Field is required</font>");
            if (validity) {
                validity = false;
            }
        }else if (!result) {
                $('#validateYearOfManufacture').html("<font color='red'>Please enter the number.</font>")
                if (validity) {
                    validity = result;
                }

        } else {
            $('#validateYearOfManufacture').html("<font></font>");
        }
        if (HullConstruction == "") {
            $('#validateHullConstruction').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateHullConstruction').html("<font></font>");
        }
        if (OtherConstructionType == "" && HullConstruction=="Other" ) {
            $('#validateOtherConstructionType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateOtherConstructionType').html("");
        }
        if (HullConfiguration == "") {
            $('#validateHullConfiguration').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateHullConfiguration').html("");
        }
        if (OtherHullConfiguration == "" && HullConfiguration=="Other") {
            $('#validateOtherHullConfiguration').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateOtherHullConfiguration').html("");
        }
        if (MotorType == "") {
            $('#validateMotorType').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateMotorType').html("");
        }
        if (ModifiedMotor == "" && MotorType != "NA") {
            $('#validateModifiedMotor').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateModifiedMotor').html("");
        }
        if (MaxRatedSpeed == "") {
            $('#validateMaxRatedSpeed').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateMaxRatedSpeed').html("");
        }

        if (maxSumInsured == "") {
            $('#validateMaxSumInsured').html("<font color='red'>Field is required</font>");
            if (validity) {
                validity = false;
            }
        }else {
            $('#validateMaxSumInsured').html("");
        }

        if (excess == "") {
            $('#validateexcess').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateexcess').html("");
        }
        if (BoatIsTrailered == "") {
            $('#validateBoatIsTrailered').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatIsTrailered').html("");
        }
        if (BoatTrailer == "" && BoatIsTrailered=="Yes") {
            $('#validateBoatTrailer').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatTrailer').html("");
        }
        if (BoatLandLocation == "" && !(BoatType2 == "Moored" || BoatType2 == "Berthed")) {
            $('#validateBoatLandLocation').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatLandLocation').html("");
        }
        if (BoatWaterLocation == "" && (BoatType2 == "Moored" || BoatType2 == "Berthed")) {
            $('#validateBoatWaterLocation').html("<font color='red'>Field is required</font>")
            if (validity) {
                validity = false;
            }
        } else {
            $('#validateBoatWaterLocation').html("");
        }
        if (validity) {
            $(".search-choice-close").click();

            AddBoat(event,tabId, boatusess, tableId, interestedParty, maxSumInsured, BuiltProfessionally, MotorType, HullConfiguration,othermarinaName)
            SetCurrentTab(currentTab);
        } else {
            var require = document.getElementById("updaterequired");
            $('#updaterequired').removeClass("hidden");
            $(require).show('2000');


            return validity;
        }
    }


    function validateInt(value) {
        var r = /^-?[0-9]*[1-9][0-9]*$/;
        var result = r.test(value);
        return result;
    }

    function SetCurrentTab(tabPaneId) {
        $('.nav-tabs a[href="#' + tabPaneId + '"]').trigger("click");
        $('.nav-tabs a[href="#' + tabPaneId + '"]').trigger("reloadGrid");
};

function UpdateChosen() {
    // find all multiselect items and apply Chosen
    $('.cselect').each(function() {
        $('#'+this.id).trigger("chosen:updated");
    });
}

    function ValidateAddNRegisteredMotor(event, tabId, tableId, currenttab) {
        event.preventDefault();

        var make = $('#AddMotorMake').val();
        var vehicleModel = $('#AddMotorModel').val();
        var sumInsured = $('#AddMotorSumInsured').val();
        var vehicleLocation = $('#AddMotorLocation').val();
        var year = $('#AddPlantYear').val();
       var effectiveDate = $('#AddPlantEffectiveDate').val();

        var result = true;
         if (effectiveDate == "") {
            $('#validateAddPlantEffectiveDate').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddPlantEffectiveDate').html("<font></font>");
        }
        if (year == "") {
            $('#validateAddRYear').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddRYear').html("<font></font>");
        }
        if (make == "") {
            $('#validateAddRMake').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddRMake').html("<font></font>");
        }
        if (vehicleModel == "") {
            $('#validateAddRModel').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddRModel').html("<font></font>");
        }
        if (sumInsured == "") {
            $('#validateAddRMarketValue').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddRMarketValue').html("<font></font>");
        }
        if (vehicleLocation == "") {
            $('#validateAddRLocation').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddRLocation').html("<font></font>");
        }

        if (result) {
            var r = /^-?[0-9]*[1-9][0-9]*$/;
            var result1 = r.test(sumInsured);
        } else {
            return result;
        }
        if (result1) {
            AddMotorVehicle(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#validateAddRMarketValue').html("<font color='red'>Please enter the number.</font>")
            return result1;
        }
    }

    function ValidateNRegisteredMotor(event,tabId, tableId, currenttab) {
        event.preventDefault();
        var make = $('#MotorMake').val();
        var vehicleModel = $('#MotorModel').val();
        var sumInsured = $('#MotorSumInsured').val();
        var vehicleLocation = $('#MotorLocation').val();
        var year = $('#MotorYear').val();
        var effectiveDate = $('#MotorEffectiveDate').val();
        var result = true;
         if (effectiveDate == "") {
            $('#validatePlantEffectiveDate').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validatePlantEffectiveDate').html("<font></font>");
        }
        if (make == "") {
            $('#validateNRMake').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateNRMake').html("<font></font>");
        }
        if (vehicleModel == "") {
            $('#validateNRModel').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateNRModel').html("<font></font>");
        }
        if (sumInsured == "") {
            $('#validateNRMarketValue').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateNRMarketValue').html("<font></font>");
        }
        if (vehicleLocation == "") {
            $('#validateNRLocation').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateNRLocation').html("<font></font>");
        }
        if (year == "") {
            $('#validateNRYear').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateNRYear').html("<font></font>");
        }
        if (result) {
            var r = /^-?[0-9]*[1-9][0-9]*$/;
            var result1 = r.test(sumInsured);
        } else {
            return result;
        }
        if (result1) {
            AddMotorVehicle(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#validateNRMarketValue').html("<font color='red'>Please enter the number.</font>")
            return result1;
        }
    }

    function ValidateMotorVehicleModal(event) {
        debugger;
        event.preventDefault();

        if (!(document.getElementById("YearModal").validity.valueMissing) && !(document.getElementById("MakeModal").validity.valueMissing)
            && !(document.getElementById("ModelModal").validity.valueMissing) && !(document.getElementById("VehicleLocationModal").validity.valueMissing)
            && !(document.getElementById("SumInsuredModal").validity.valueMissing) && !(document.getElementById("TrailerEffectiveDateModal").validity.valueMissing)) {

            AddMotorVehicleModal(event);
            $('#addTrailerModal').hide();
        } else {
            txt = "Please provide required values";
              document.getElementById("trailerdemo").innerHTML = txt;
        }

    }


    function AddMotorVehicleModal(event) {
        debugger;
                event.preventDefault();

        var informationId = $('#AnswerSheetId').serialize();
        var registration = $('#RegistrationModal').serialize();
        var vin = $('#VINModal').serialize();
        var vehicleeffectivedate = $('#TrailerEffectiveDateModal').serialize();
        var vehicleceasedate = $('#TrailerCeaseDateModal').serialize();
        var vehicleceasereason = $('#TrailerCeaseReasonModal').serialize();
        var chassisnumber = $('#ChassisNumberModal').serialize();
        var year = $('#YearModal').serialize();
        var make = $('#MakeModal').serialize();
        var model = $('#ModelModal').serialize();
        var groupsuminsured = $('#SumInsuredModal').val();
         //groupsuminsured = "SumInsured="+ groupsuminsured.replace(/[^0-9\.-]+/g, "");

        var validated = $('#ValidatedTrailer').serialize();
        var notes = $('#TrailerNotesModal').serialize();
        var garagelocation_id = $('#VehicleLocationModal').serialize();
        var data = $.grep([registration, validated, vin, vehicleeffectivedate, vehicleceasedate, vehicleceasereason, garagelocation_id, chassisnumber, year, make, model, notes, informationId], Boolean).join("&");
         data = data + "&SumInsured=" + groupsuminsured.replace(/[^0-9\.-]+/g, "");
        debugger;

          $('#AddTrailer').show();
        $.ajax({
                url: '@Url.Action("AddVehicle", "Services")',
                type: "POST",
                data:data
            })
            .done(function (data) {
                if (data.Registration == null) {
                    $('#BoatTrailer.b').append($('<option>', { value: data.vehicleId, text: data.year + ", " + data.make + ", " + data.vehicleModel }));
                    $("#BoatTrailer.b [value='add']").remove();
                    $('#BoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#BoatTrailer.b').val(data.vehicleId);
                    $('#AddBoatTrailer.b').append($('<option>', { value: data.vehicleId, text: data.year + ", " + data.make + ", " + data.vehicleModel }));
                    $("#AddBoatTrailer.b [value='add']").remove();
                    $('#AddBoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#AddBoatTrailer.b').val(data.vehicleId);
                } else {
                    $('#BoatTrailer.b').append($('<option>', { value: data.vehicleId, text:  data.year + ", " + data.make + ", " + data.vehicleModel + ", " + data.registration}));
                    $("#BoatTrailer.b [value='add']").remove();
                    $('#BoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#BoatTrailer.b').val(data.vehicleId);
                    $('#AddBoatTrailer.b').append($('<option>', { value: data.vehicleId, text:  data.year + ", " + data.make + ", " + data.vehicleModel + ", " + data.registration}));
                    $("#AddBoatTrailer.b [value='add']").remove();
                    $('#AddBoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#AddBoatTrailer.b').val(data.vehicleId);
                }
                //$.smallBox({
                //    title: "Vehicle (" + data.Year + " " + data.Make + " " + data.VehicleModel+") has been saved",
                //    color: "#5F895F",
                //    iconSmall: "fa fa-check bounce animated",
                //    timeout: 4000
                //});


                $('#addTrailerModal' + " :input").val("");

                 $("#trailerModalHairline, #trailerModalHairline2, #trailerModalHairline3, #trailerModalHairline4").hide();
                $(vesselTrailerChassis).hide();
                $(vesselTrailerEffective).hide();
                $(vesselTrailerCease).hide();
                $(vesselTrailerCeaseReason).hide();
                $(vesselTrailerYear).hide();
                $(vesselTrailerMake).hide();
                $(vesselTrailerModel).hide();
                $(vesselTrailerMV).hide();
                $(vesselTrailerLoc).hide();
                $(vesselTrailerNotes).hide();
                $('#VesselTrailerSearch').hide();
                $("#addSection").addClass('hidden');

                 var trailer = document.getElementsByName('TrailerSelection');
                   for (var i = 0; i < trailer.length; i++) {
                       (trailer[i]).checked = false;
                }
                $('#TrailerSelectionYes').val("registered");
                $('#TrailerSelectionNo').val("notregistered");
                 $('#AddTrailer').hide();
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                 $('#AddTrailer').hide();
                alert("There was an error while trying to save the Vehicle.");
            });
    };

    function SetVehicleCeasedStatus(vehicleId, status, sourceTable, destTable) {

        var CeaseDate =  $('#RemoveVehicleCeaseEffectiveDate').val();
        var ceaseReason = $('#VehicleCeaseReason').val();

         var postData = {
		'vehicleId': vehicleId,
        'status': status,
        'ceaseDate': CeaseDate,
        'ceaseReason':ceaseReason
        };

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetVehicleCeasedStatus", "Services")',
        type: "Post",
        data: postData,
    })
        .done(function (data) {
            if (data === true) {
                $(sourceTable).trigger('reloadGrid');
                $(destTable).trigger('reloadGrid');
                //$.smallBox({
                //    title: "Vehicle status has been updated",
                //    color: "#5F895F",
                //    iconSmall: "fa fa-check bounce animated",
                //    timeout: 4000
                //});
                //alert("Status true");
            }
        });
    };

    function SetVehicleTransferedStatus(event,vehicleId, status, sourceTable, destTable) {
            event.preventDefault();

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetVehicleTransferedStatus", "Services")',
        type: "Post",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ vehicleId: vehicleId, status: status })
    })
            .done(function (data) {
                if (data === true) {
                    // reload grids
                    $(sourceTable).trigger('reloadGrid');
                    $(destTable).trigger('reloadGrid');
                    //$.smallBox({
                    //    title: "Vehicle status has been updated",
                    //    color: "#5F895F",
                    //    iconSmall: "fa fa-check bounce animated",
                    //    timeout: 4000
                    //});
                    //alert("Status true");
                }
            });
    };

function GetOUDetails(event,elementBaseName) {
    var _sheetId = $('#AnswerSheetId').val();
    var _unitName = $(elementBaseName).val();
            event.preventDefault();

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SearchOrganisationalUnit", "Services")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ name: _unitName, answerSheetId : _sheetId })
    })
    .done(function (data) {
        $(elementBaseName+'OrganisationalUnitName').val(data.Name);
    })
    .fail(function () {
        alert("Unable to get Organisational Unit details.");
    });
};
function GetLocationDetails(elementBaseName) {
    var _sheetId = $('#AnswerSheetId').val();
    var streetname = $(elementBaseName).val();
            event.preventDefault();

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SearchLocationStreet", "Services")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ street: streetname, answerSheetId : _sheetId  })
    })
    .done(function (data) {
        $('#Street').val(data.Street);
    })
    .fail(function () {
        alert("Unable to get location details.");
    });
};


function toggleVisible(id, visible, sender) {
    var section = $(id);
    if (visible) {
        section.removeClass('hidden');
    }
    else {
        section.addClass('hidden');
    }
};

function showAccordionPanel(id, panelNo) {
    $(id).accordion('option', 'active', panelNo);
};


    function wholeNumberCheck(n) {
        return (n % 1) === 0;
    }

    function AddBusinessInterruption(tabId, tableId) {
        var informationId = $('#AnswerSheetId').serialize();
        var biloc = $('#SelectedLocation').serialize();

        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("AddBusinessInterruption", "Services")',
            type: "POST",
            data: $.grep([$(tabId + " :input").serialize(), informationId], Boolean).join("&")
        })
        .done(function (data) {
            //$.smallBox({
            //    title: "BusinessInterruption has been saved",
            //    color: "#5F895F",
            //    iconSmall: "fa fa-check bounce animated",
            //    timeout: 4000
            //});

            $(tableId).trigger('reloadGrid');
            $('#BusinessInterruption').val("");
            $(tabId + " :input").val("");
        })
        .fail(function (jqXHR, textStatus) {
            alert("There was an error while trying to save the BusinessInterruption.");
        });
    };

    function EditBusinessInterruption(businessInterruptionId, tableId) {
        var _sheetId = $('#AnswerSheetId').val();
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("GetBusinessInterruption", "Services")',
            type: "Post",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ businessInterruptionId: businessInterruptionId, answerSheetId: _sheetId })
        })
        .done(function (data) {
            $('#BusinessInterruptionId').val(data.BusinessInterruptionId);
            $('#IndemnityPeriod').val(data.IndemnityPeriod);
            $('#FinancialYearEnd').val(data.FinancialYearEnd);
            $('#GrossProfit').val(data.GrossProfit);
            $('#GrossRents').val(data.GrossRents);
            $('#AdditionalIncreaseInCostsOfWorking').val(data.AdditionalIncreaseInCostsOfWorking);
            $('#ClaimsPreparationCosts').val(data.ClaimsPreparationCosts);
            $('#DualWages').val(data.DualWages);
            $('#InitialPeriod').val(data.InitialPeriod);
            $('#Remainder').val(data.Remainder);
            $('#AlternatePeriod').val(data.AlternatePeriod);
            $('#BusinessInterruptionLocation').val(data.BusinessInterruptionLocation);
            UpdateChosen();
        });
    };

    function SetBusinessInterruptionRemovedStatus(businessInterruptionId, status, sourceTable, destTable) {
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("SetBusinessInterruptionRemovedStatus", "Services")',
            type: "Post",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ businessInterruptionId: businessInterruptionId, status: status })
        })
        .done(function (data) {
            if (data === true) {
                // reload grids
                $(sourceTable).trigger('reloadGrid');
                $(destTable).trigger('reloadGrid');
                //$.smallBox({
                //    title: "BusinessInterruption status has been updated",
                //    color: "#5F895F",
                //    iconSmall: "fa fa-check bounce animated",
                //    timeout: 4000
                //});
            }
        });
    };


    function AddMaterialDamage(tabId, tableId) {
        var informationId = $('#AnswerSheetId').serialize();
        var mdloc = $('#SelectedLocation').serialize();
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("AddMaterialDamage", "Services")',
            type: "POST",
            data: $.grep([$(tabId + " :input").serialize(), informationId], Boolean).join("&")
        })
        .done(function (data) {
            //$.smallBox({
            //    title: "MaterialDamage has been saved",
            //    color: "#5F895F",
            //    iconSmall: "fa fa-check bounce animated",
            //    timeout: 4000
            //});
            // reload grid
            $(tableId).trigger('reloadGrid');
            $('#MaterialDamage').val("");
            $(tabId + " :input").val("");
        })
        .fail(function (jqXHR, textStatus) {
            alert("There was an error while trying to save the MaterialDamage.");
        });
    };

    function EditMaterialDamage(materialDamageId, tableId) {
        var _sheetId = $('#AnswerSheetId').val();
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("GetMaterialDamage", "Services")',
            type: "Post",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ materialDamageId: materialDamageId, answerSheetId: _sheetId })
        })
        .done(function (data) {
            $('#MaterialDamageId').val(data.MaterialDamageId);
            $('#NonHirePlant').val(data.NonHirePlant);
            $('#Stock').val(data.Stock);
            $('#Miscellaneous').val(data.Miscellaneous);
            $('#HirePlant').val(data.HirePlant);
            $('#Marquees').val(data.Marquees);
            $('#Transit').val(data.Transit);
            $('#MoneyA').val(data.MoneyA);
            $('#MoneyB').val(data.MoneyB);
            $('#AINZ').val(data.AINZ);
            $('#CustomersGoods').val(data.CustomersGoods);
            $('#ToolsAndStock').val(data.ToolsAndStock);
            $('#MDCapitalAdditions').val(data.MDCapitalAdditions);
            $('#MDCapitalAdditionsPre').val(data.MDCapitalAdditionsPre);
            $('#MDConstructionLimit').val(data.MDConstructionLimit);
            $('#MDConstructionLimitPre').val(data.MDConstructionLimitPre);
            $('#MaterialDamageLocation').val(data.MaterialDamageLocation);
            UpdateChosen();
        });
    };

    function SetMaterialDamageRemovedStatus(materialDamageId, status, sourceTable, destTable) {
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("SetMaterialDamageRemovedStatus", "Services")',
            type: "Post",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ materialDamageId: materialDamageId, status: status })
        })
        .done(function (data) {
            if (data === true) {
                // reload grids
                $(sourceTable).trigger('reloadGrid');
                $(destTable).trigger('reloadGrid');
                //$.smallBox({
                //    title: "MaterialDamage status has been updated",
                //    color: "#5F895F",
                //    iconSmall: "fa fa-check bounce animated",
                //    timeout: 4000
                //});
            }
        });
    };


    function ValidateClaim(event,tabId, tableId, currenttab) {
        debugger;
        event.preventDefault();
        var claimTitle = $('#ClaimTitle').val();
        var claimDescription = $('#ClaimDescription').val();
        var claimStatus = $('#ClaimStatus').val();
        var claimant = $('#Claimant').val();
        var claimDateOfLoss = $('#ClaimDateOfLoss').val();
        var claimNotifiedDate = $('#ClaimNotifiedDate').val();

        var result = true;
        debugger;

        if (claimant == "") {
            $('#validateclaimant').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateclaimant').html("<font></font>");
        }
        if (claimDateOfLoss == "") {
            $('#validateclaimDateOfLoss').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateclaimDateOfLoss').html("<font></font>");
        }
        if (claimNotifiedDate == "") {
            $('#validateclaimNotifiedDate').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateclaimNotifiedDate').html("<font></font>");
        }

        if (claimTitle == "") {
            $('#validateclaimTitle').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateclaimTitle').html("<font></font>");
        }
        if (claimDescription == "") {
            $('#validateclaimDescription').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateclaimDescription').html("<font></font>");
        }
        if (claimStatus == "") {
            $('#validateclaimStatus').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateclaimStatus').html("<font></font>");
        }

        if (result) {
            AddClaim(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#validateClaimEstimateInsuredLiability').html("<font color='red'>Please enter the number.</font>")
            return result1;
        }
    }


    function ValidateAddClaim(event, tabId, tableId, currenttab) {

         event.preventDefault();
        var claimTitle = $('#AddClaimTitle').val();
        var claimDescription = $('#AddClaimDescription').val();
        var claimStatus = $('#AddClaimStatus').val();
        //var claimReference = $('#AddClaimReference').val();

        var claimant = $('#AddClaimant').val();
        var claimDateOfLoss = $('#AddClaimDateOfLoss').val();
        var claimNotifiedDate = $('#AddClaimNotifiedDate').val();
        var result = true;
        debugger;


        if (claimant == "") {
            $('#Addvalidateclaimant').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#Addvalidateclaimant').html("<font></font>");
        }
        if (claimDateOfLoss == "") {
            $('#AddvalidateclaimDateOfLoss').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AddvalidateclaimDateOfLoss').html("<font></font>");
        }
        if (claimNotifiedDate == "") {
            $('#AddvalidateclaimNotifiedDate').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AddvalidateclaimNotifiedDate').html("<font></font>");
        }

        if (claimTitle == "") {
            $('#AddvalidateClaimTitle').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AddvalidateclaimTitle').html("<font></font>");
        }
        if (claimDescription == "") {
            $('#AddvalidateclaimDescription').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AddvalidateclaimDescription').html("<font></font>");
        }
        if (claimStatus == "") {
            $('#AddvalidateclaimStatus').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AddvalidateclaimStatus').html("<font></font>");
        }




        if (result) {
            AddClaim(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#AddvalidateClaimEstimateInsuredLiability').html("<font color='red'>Please enter the number.</font>")
            return result1;
        }
    }

    function AddClaim( tabId, tableId) {
        debugger;
    var informationId = $('#AnswerSheetId').serialize();

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddClaim", "Services")',
        type: "POST",
        data: $.grep([ $(tabId + " :input").serialize(), informationId ], Boolean).join("&")
    })
    .done(function (data) {
        //$.smallBox({
        //    title: "Claim has been saved",
        //    color: "#5F895F",
        //    iconSmall: "fa fa-check bounce animated",
        //    timeout: 4000
        //});

        $(tableId).trigger( 'reloadGrid' );
        $(tabId + " :input").val("");
        $(tabId + ', #ClaimProducts').val('').trigger('chosen:updated');

    })
    .fail(function (jqXHR, textStatus, errorThrown) {
        alert("There was an error while trying to save the Claim.");
    });
};

    function EditClaim(claimId, tableId) {
        debugger;
    var _sheetId = $('#AnswerSheetId').val();
            event.preventDefault();

    var postData = {
		'claimId': claimId,
		'answerSheetId': _sheetId
	};

        $.ajax({
            url: '@Url.Action("GetClaim", "Services")',
            type: "Post",
            //contentType: "application/json; charset=utf-8",
            //data: JSON.stringify({ claimId: claimId, answerSheetId: _sheetId })
            data: postData,
            async: true
        })
            .done(function (data) {
                debugger;
        $('#ClaimId').val(data.claimId);
        $('#ClaimTitle').val(data.claimTitle);
        $('#ClaimDescription').val(data.claimDescription);
        $('#ClaimReference').val(data.claimReference);
        $('#ClaimPolicyReference').val(data.claimPolicyReference);
        $('#ClaimInsurerName').val(data.claimInsurerName);
        $('#ClaimInsuredName').val(data.claimInsuredName);
        $('#Claimant').val(data.claimant);
        $('#ClaimDateOfLoss').val(data.claimDateOfLoss);
        $('#ClaimNotifiedDate').val(data.claimNotifiedDate);
        $('#ClaimEstimateInsuredLiability').val(data.claimEstimateInsuredLiability);

                if (data.claimStatus != "Precautionary notification only") {
                    $('#ClaimUpdate').addClass('hidden');
                    $('#EditClaimStatus').addClass('hidden');
                } else {
                    $('#ClaimUpdate').removeClass('hidden');
                    $('#EditClaimStatus').removeClass('hidden');
                }

        $('#ClaimBrokerReference').val(data.claimBrokerReference);
        $('#ClaimInsurerReference').val(data.claimInsurerReference);
        $('#ClaimPaid').val(data.claimPaid);
        $('#ClaimReserve').val(data.claimReserve);
        $('#PrimaryPolicyprod').val(data.selectedClaimProducts);
        $('#ResponsiblePrincipal').val(data.selectedResponsiblePrincipal);
        $('#ClaimNotes').val(data.claimNotes);
        UpdateChosen();
    });
};

    function SetClaimRemovedStatus(claimId, status, sourceTable, destTable) {

        var postData = {
		'claimId': claimId,
		'status': status
	};

        $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetClaimRemovedStatus", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ claimId : claimId, status : status })
        data: postData,
        async: true
    })
    .done(function (data) {
        if (data === true) {
            $(sourceTable).trigger( 'reloadGrid' );
            $(destTable).trigger( 'reloadGrid' );
            //$.smallBox({
            //    title: "Claim status has been updated",
            //    color: "#5F895F",
            //    iconSmall: "fa fa-check bounce animated",
            //    timeout: 4000
            //});
        }
    });
    };

    function validateOperator(tabId, tableId, currenttab) {
        var operatorFirstName = $('#OperatorFirstName').val();
        var operatorLastName = $('#OperatorLastName').val();
        var operatorYearsOfExp = $('#OperatorYearsOfExp').val();
        var result = true;
        if (operatorFirstName == "") {
            $('#validateOpFirstName').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateOpFirstName').html("<font></font>");
        }
        if (operatorYearsOfExp == "") {
            $('#validateYearsOFExp').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateYearsOFExp').html("<font></font>");
        }
        if (operatorLastName == "") {
            $('#validateOpLastName').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateOpLastName').html("<font></font>");
        }
        if (result) {
            AddOperator(event,tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return result;
        }
    }


    function validateAddOperator(tabId, tableId, currenttab) {
        var operatorAddFirstName = $('#AddOperatorFirstName').val();
        var operatorAddLastName = $('#AddOperatorLastName').val();
        var result = true;
        if (operatorAddFirstName == "") {
            $('#validateAddOpFirstName').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddOpFirstName').html("<font></font>");
        }
        if (operatorAddLastName == "") {
            $('#validateAddYearsOFExp').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddYearsOFExp').html("<font></font>");
        }

        if (result) {
            AddOperator(event,tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return result;
        }
    }


    function AddOperator(event,tabId, tableId) {
                event.preventDefault();

    var informationId = $('#AnswerSheetId').serialize();
    var test = $.grep([$(tabId + " :input").serialize(), informationId], Boolean).join("&")
    console.log(test);
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddOperator", "Services")',
        type: "POST",
        data: test
    })
        .done(function (data) {

        //$.smallBox({
        //    title: "Operator has been saved",
        //    color: "#5F895F",
        //    iconSmall: "fa fa-check bounce animated",
        //    timeout: 4000
        //});
        console.log(data);
        // reload grid
        $(tableId).trigger( 'reloadGrid' );
        $(tabId + " :input").val("");
    })
    .fail(function (jqXHR, textStatus, errorThrown) {
        alert("There was an error while trying to save the Operator.");
    });
    };

    function validateOperatorModal(firstName, lastName, yearsXP, Email) {


        if (!(document.getElementById("OperatorFirstNameModal").validity.valueMissing) && !(document.getElementById("OperatorLastNameModal").validity.valueMissing)
             && !(document.getElementById("organisationEmail").validity.valueMissing)) {

            AddOperatorModal(event,firstName, lastName, yearsXP, Email);
            $('#addOperatorModal').hide();
        }
    }

    function AddOperatorModal(event,firstName, lastName, yearsXP, Email) {

        event.preventDefault();
        var operatorFirstName = $(firstName).serialize();
        var operatorLastName = $(lastName).serialize();
        var yearsExperience = $(yearsXP).serialize();
        var Email = $(Email).serialize();


        var informationId = $('#AnswerSheetId').serialize();
        $('#setOperatorModal').show();
        var postdata = $.grep([operatorFirstName, operatorLastName, yearsExperience, Email, informationId], Boolean).join("&");
        //console.log(operatorFirstName, operatorLastName, yearsExperience);
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("AddOperator", "Services")',
            type: "POST",
            data: postdata
        }).done(function (data) {

                        setTimeout("alert('Operator has been saved');", 4000);

                //$.smallBox({
                //    title: "Operator has been saved",
                //    color: "#5F895F",
                //    iconSmall: "fa fa-check bounce animated",
                //    timeout: 4000
                //});

                $('#BoatOperator').append("<option selected value=\"" + data.ID + "\">" + data.firstName + " " + data.lastName + "</option>")
                $("#BoatOperator.b [value='add']").remove();
                $('#BoatOperator.b').append($('<option>', { value: "add", text: "Add Skipper" }));
                $('#BoatOperator.b').trigger('chosen:updated');

                $('#AddBoatOperator.b').append("<option selected value=\"" + data.ID + "\">" + data.firstName + " " + data.lastName + "</option>")
                $("#AddBoatOperator.b [value='add']").remove();
                $('#AddBoatOperator.b').append($('<option>', { value: "add", text: "Add Skipper" }));
                $('#AddBoatOperator.b').trigger('chosen:updated');
                $('#addOperatorModal' + " :input").val("");
                UpdateChosen();
                $('#setOperatorModal').hide();
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
              $('#setOperatorModal').hide();

            alert("There was an error while trying to save the Operator.");
            });
    };

    function ValidateAddLandLocModal(storageType, storageDescription, location) {

         if (!(document.getElementById("BuildingLocationModal").validity.valueMissing) && !(document.getElementById("BuildingCategoryModal").validity.valueMissing)
             && !(document.getElementById("BuildingNameModal").validity.valueMissing)) {
             AddLandLocModal(event,storageType, storageDescription, location);
             $('#addLandLocModal').hide();
        }
    }

    function AddLandLocModal(event,storageType, storageDescription, location) {
                event.preventDefault();

        var buildingCategory = $(storageType).serialize();
        var buildingName = $(storageDescription).serialize();
        var informationId = $('#AnswerSheetId').serialize();
        var location_id = $(location).serialize();
        $('#getLandLocModal').show();
        var postdata = $.grep([buildingCategory, buildingName, location_id, informationId], Boolean).join("&");
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("AddBuilding", "Services")',
            type: "POST",
            data: postdata

        })
            .done(function (data) {
                console.log(data);
            //$.smallBox({
            //     title: "Storage has been saved",
            //     color: "#5F895F",
            //     iconSmall: "fa fa-check bounce animated",
            //     timeout: 4000
            //    });
                $('#BoatLandLocation.b').append($('<option>', { value: data.buildingId, text: data.buildingCategory + ", " + data.locationStreet }));
                $("#BoatLandLocation.b [value='add']").remove();
                $('#BoatLandLocation.b').append($('<option>', { value: "add", text: "Add Land Storage" }));
                $('#BoatLandLocation.b').val(data.buildingId);
                $('#AddBoatLandLocation.b').append($('<option>', { value: data.buildingId, text: data.buildingCategory + ", " + data.locationStreet }));
                $("#AddBoatLandLocation.b [value='add']").remove();
                $('#AddBoatLandLocation.b').append($('<option>', { value: "add", text: "Add Land Storage" }));
                $('#AddBoatLandLocation.b').val(data.buildingId);
                $('#addLandLocModal' + " :input").val("");
                $('#tblBuilding').trigger('reload');
                $('#getLandLocModal').hide();
            })

            .fail(function (jqXHR, textStatus, errorThrown) {
               $('#getLandLocModal').hide();

            alert("There was an error while trying to save the Storage.");
        });
    };

    function AddMarinaLocModal(event,marinaName) {
                event.preventDefault();

        var MarinaName = $(marinaName).serialize();
        var AnswerSheetId = $('#AnswerSheetId').serialize();
        var postdata = $.grep([MarinaName, AnswerSheetId], Boolean).join("&");
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("AddMarina", "Services")',
            type: "POST",
            data: postdata
        })
            .done(function (data) {
                console.log(data);
            //$.smallBox({
            //     title: "Marina has been saved",
            //     color: "#5F895F",
            //     iconSmall: "fa fa-check bounce animated",
            //     timeout: 4000
            //    });
                  $('#WaterLocationMarinaLocation').append("<option selected value=\"" + data.ID + "\">" + data.organisationName + "</option>")
                $('#WaterLocationMarinaLocation').trigger('chosen:updated');
                $('#AddWaterLocationMarinaLocation').append("<option selected value=\"" + data.ID + "\">" + data.organisationName + "</option>")
                $('#AddWaterLocationMarinaLocation').trigger('chosen:updated');
                $('#WaterLocationMarinaLocation').append($('<option>', { value: "add", text: "Add Land Storage" }));
                $('#AddWaterLocationMarinaLocation').append($('<option>', { value: "add", text: "Add Land Storage" }));
                UpdateChosen();
            })

        .fail(function (jqXHR, textStatus, errorThrown) {
            alert("There was an error while trying to save the Storage.");
        });
    };

    function AddWaterLocModal(event,waterLocName, waterLocLat, waterLocLong, waterLocLoc, waterLocMarinaLoc, mooredType, orgunit) {
                event.preventDefault();

        var WaterLocationMooringType = $(mooredType).serialize(); //TBC
        var informationId = $('#AnswerSheetId').serialize();
        var waterLocationName = $(waterLocName).serialize();
        var waterLocationLat = $(waterLocLat).serialize();
        var waterLocationLong = $(waterLocLong).serialize();
        var waterLocationLocation = $(waterLocLoc).serialize();
        var WaterLocationMarinaLocation = $(waterLocMarinaLoc).serialize(); //Needs Setup
        var orgunit =  $(orgunit).serialize();
        var postdata = $.grep([waterLocationName, waterLocationLat, waterLocationLong, waterLocationLocation, WaterLocationMarinaLocation, WaterLocationMooringType,orgunit, informationId], Boolean).join("&");
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("AddWaterLocation", "Services")',
            type: "POST",
            data: postdata

        })
            .done(function (data) {
                console.log(data);
            //$.smallBox({
            //     title: "Water Loc has been saved",
            //     color: "#5F895F",
            //     iconSmall: "fa fa-check bounce animated",
            //     timeout: 4000
            //    });
                $('#BoatWaterLocation.b').append($('<option>', { value: data.waterLocationId, text: data.waterLocationName }));
                $("#BoatWaterLocation.b [value='add']").remove();
                $('#BoatWaterLocation.b').append($('<option>', { value: "add", text: "Add Water Location" }));
                $('#BoatWaterLocation.b').val(data.WaterLocationId);
                $('#AddBoatWaterLocation.b').append($('<option>', { value: data.waterLocationId, text: data.waterLocationName }));
                $("#AddBoatWaterLocation.b [value='add']").remove();
                $('#AddBoatWaterLocation.b').append($('<option>', { value: "add", text: "Add Water Location" }));
                $('#AddBoatWaterLocation.b').val(data.waterLocationId);
                $('#addWaterLocModal' + " :input").val("");

            })

        .fail(function (jqXHR, textStatus, errorThrown) {
            alert("There was an error while trying to save the Water Location.");
        });
    };

    function validateLocModal(streetLoc, suburbLoc, postcodeLoc, cityLoc, countryLoc, cnameLoc, loctype) {

         if (!(document.getElementById("LocationTypeModal").validity.valueMissing) && !(document.getElementById("StreetModal").validity.valueMissing)
             && !(document.getElementById("SuburbModal").validity.valueMissing) && !(document.getElementById("CityModal").validity.valueMissing)) {

             var locationTypeValue = document.getElementById(loctype).value;
             var cmonValue = document.getElementById(cnameLoc).value;
             var streetVal = document.getElementById(streetLoc).value;
             var cityVal = document.getElementById(cityLoc).value;
             var countryVal = document.getElementById(countryLoc).value;
             var suburbVal = document.getElementById(streetLoc).value;
             var postCodeVal = document.getElementById(postcodeLoc).value;

             document.getElementById("locationtypeoptions").value = locationTypeValue;
             document.getElementById("commonnamedetails").value = streetVal;
             document.getElementById("streetdetails").value = streetVal;
             document.getElementById("citydetails").value = cityVal;
             document.getElementById("countrydetails").value = countryVal;
             document.getElementById("suburbdetails").value = suburbVal;
             document.getElementById("postcodedetails").value = postCodeVal;

             $.ajax({
                url: '@Url.Action("AddLocation", "Services")',
                type: "POST",
                data: $("#tab_1 :input").serialize({ json: true })
            })
                 .done(function (data) {
                     debugger
                     AddLocModal(streetVal, suburbVal, postCodeVal, cityVal, streetVal, cmonValue, locationTypeValue, data);
                     closeLocModal();
                     document.getElementById("LocationViewModel").reset();
                })
                .fail(function (a, s, d) {
                    debugger;
                });
         }

    }

    function AddLocModal(streetLoc, suburbLoc, postcodeLoc, cityLoc, countryLoc, cnameLoc, loctype, locationId) {

        //$('#getLandLocModal').show();
        var street = streetLoc;
        var suburb = suburbLoc;
        var postcode = postcodeLoc;
        var country = countryLoc;
        var loctype = loctype;

            $('#addLocModal' + " :input").val("");

                if ($('#addLandLocModal').hasClass('in')) {

                    $('#addLocModal').hide();
                    $("#BuildingLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#BuildingLocationModal.b [value='add']").remove();
                    $('#BuildingLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));
                    $('#BuildingLocationModal.b').val(data.LocationId);
                    //Want to use Location added in Water Modal use case
                    $("#WaterLocationLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#WaterLocationLocationModal.b [value='add']").remove();
                    $('#WaterLocationLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));
                    //Want to use Location added in Trailer Modal use case
                    $("#VehicleLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#VehicleLocationModal.b [value='add']").remove();
                    $('#VehicleLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#VehicleLocation.rmv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#VehicleLocation.rmv [value='add']").remove();
                    $('#VehicleLocation.rmv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#AddVehicleLocation.rmv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddVehicleLocation.rmv [value='add']").remove();
                    $('#AddVehicleLocation.rmv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#MotorLocation.omv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#MotorLocation.omv [value='add']").remove();
                    $('#MotorLocation.omv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#AddBuildingLocation.bui").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddBuildingLocation.bui [value='add']").remove();
                    $('#AddBuildingLocation.bui').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#BuildingLocation.bui").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#BuildingLocation.bui [value='add']").remove();
                    $('#BuildingLocation.bui').append($('<option>', { value: "add", text: "Add Location" }));


                }


                else if ($('#addTrailerModal').hasClass('in')) {

                    $('#addLocModal').hide();

                    $("#VehicleLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#VehicleLocationModal.b [value='add']").remove();
                    $('#VehicleLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));
                    $('#VehicleLocationModal.b').val(data.LocationId);

                    $("#AddVehicleLocation.rmv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddVehicleLocation.rmv [value='add']").remove();
                    $('#AddVehicleLocation.rmv').append($('<option>', { value: "add", text: "Add Location" }));


                    //Want to use Location added in Water Modal use case
                    $("#WaterLocationLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#WaterLocationLocationModal.b [value='add']").remove();
                    $('#WaterLocationLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#BuildingLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#BuildingLocationModal.b [value='add']").remove();
                    $('#BuildingLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#VehicleLocation.rmv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#VehicleLocation.rmv [value='add']").remove();
                    $('#VehicleLocation.rmv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#MotorLocation.omv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#MotorLocation.omv [value='add']").remove();
                    $('#MotorLocation.omv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#AddBuildingLocation.bui").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddBuildingLocation.bui [value='add']").remove();
                    $('#AddBuildingLocation.bui').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#BuildingLocation.bui").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#BuildingLocation.bui [value='add']").remove();
                    $('#BuildingLocation.bui').append($('<option>', { value: "add", text: "Add Location" }));
                                  $('#getLandLocModal').hide();


                }
                else {
                    $('#addLocModal').hide();

                    $("#AddVehicleLocation.rmv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddVehicleLocation.rmv [value='add']").remove();
                    $('#AddVehicleLocation.rmv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#VehicleLocation.rmv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#VehicleLocation.rmv [value='add']").remove();
                    $('#VehicleLocation.rmv').append($('<option>', { value: "add", text: "Add Location" }));


                    $("#BuildingLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#BuildingLocationModal.b [value='add']").remove();
                    $('#BuildingLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));


                    $("#VehicleLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#VehicleLocationModal.b [value='add']").remove();
                    $('#VehicleLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));


                    $("#WaterLocationLocationModal.b").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#WaterLocationLocationModal.b [value='add']").remove();
                    $('#WaterLocationLocationModal.b').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#AddMotorLocation.omv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddMotorLocation.omv [value='add']").remove();
                    $('#AddMotorLocation.omv').append($('<option>', { value: "add", text: "Add Location" }));

                    $("#MotorLocation.omv").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#MotorLocation.omv [value='add']").remove();
                    $('#MotorLocation.omv').append($('<option>', { value: "add", text: "Add Location" }));


                    $("#AddBuildingLocation.bui").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#AddBuildingLocation.bui [value='add']").remove();
                    $('#AddBuildingLocation.bui').append($('<option>', { value: "add", text: "Add Location" }));


                    $("#BuildingLocation.bui").append($('<option>', { value: locationId, text: street + ", " + suburb + ", " + postcode + ", " + country }));
                    $("#BuildingLocation.bui [value='add']").remove();
                    $('#BuildingLocation.bui').append($('<option>', { value: "add", text: "Add Location" }));


                    if ($(openModal).val() == "Trailer") {
                        $('#VehicleLocation.rmv').val(locationId);
                    } else if ($(openModal).val() == "Land") {
                        $('#BuildingLocation.bui').val(locationId);
                    } else if($(openModal).val() == "Plant"){
                        $('#MotorLocation.omv').val(locationId);
                    }else  if ($(openModal).val() == "addTrailer") {
                        $('#AddVehicleLocation.rmv').val(locationId);
                    } else if ($(openModal).val() == "addLand") {
                        $('#AddBuildingLocation.bui').val(locationId);
                    } else if($(openModal).val() == "addPlant"){
                        $('#AddMotorLocation.omv').val(locationId);
                    }

                 $('#getLandLocModal').hide();

                }

    };

    function EditOperator(event,operatorId, tableId) {
                event.preventDefault();

        var _sheetId = $('#AnswerSheetId').val();
        $.ajax({
            // change back once mono decides to fix
            url: '@Url.Action("GetOperator", "Services")',
            type: "Post",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ operatorId: operatorId, answerSheetId: _sheetId })
        })
    .done(function (data) {
        $('#OperatorId').val(data.operatorId);
        $('#OperatorFirstName').val(data.operatorFirstName);
        $('#OperatorLastName').val(data.operatorLastName);
        $('#OperatorDocumentType').val(data.operatorDocumentType);
        $('#OperatorDocumentNumber').val(data.operatorDocumentNumber);
        $('#OperatorYearsOfExp').val(data.operatorYearsOfExp);
        $('#OperatorNotes').val(data.operatorNotes);
        $('#OperatorDocumentEffectiveDate').val(data.operatorDocumentEffectiveDate);
        $('#OperatorDocumentExpiryDate').val(data.operatorDocumentExpiryDate);
        UpdateChosen();
    });
};

    function SetOperatorRemovedStatus(event,operatorId, status, sourceTable, destTable) {
                event.preventDefault();

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetOperatorRemovedStatus", "Services")',
        type: "Post",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ operatorId: operatorId, status : status })
    })
    .done(function (data) {
        if (data === true) {
            // reload grids
            $(sourceTable).trigger( 'reloadGrid' );
            $(destTable).trigger( 'reloadGrid' );
            //$.smallBox({
            //    title: "Operator status has been updated",
            //    color: "#5F895F",
            //    iconSmall: "fa fa-check bounce animated",
            //    timeout: 4000
            //});
        }
    });
    };

    function ClearBoats(event, tabId, currentTab) {
        debugger;
        event.preventDefault();
        $(tabId + " :input").val(""); //Clears form

        if (confirm("I don't want to add.")) {
            //$(tabId + " :input").val(""); //Clears form
            SetCurrentTab(currentTab);
        }
        else {
            return false;
        }
    }
    function AddBoat(event,tabId, boatusess, tableId, interestedParty, maxSumInsured, builtProf, Motortype, hullconfig,othermarinaName) {


        $('#AddBoatModal').show();
        var informationId = $('#AnswerSheetId').serialize();
        var proddata = $.grep([$(tabId + " :input").serialize(), informationId], Boolean).join("&");
        var data = proddata + "&SelectedBoatUse=" + boatusess;
        data = data + "&SelectedInterestedParty=" + interestedParty;
        if (othermarinaName != null) {
            OtherMarina = false;
        } else {
            OtherMarina = true;
        }
       // data = data + "&OtherMarinaName=" + othermarinaName;

        data = data + "&BuiltProfessionally=" + builtProf;
        data = data + "&MotorType=" + Motortype;
        data = data + "&HullConfiguration=" + hullconfig;
        data = data + "&Sum=" + maxSumInsured.replace(/[^0-9\.-]+/g, "");
        debugger;
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddBoat", "Services")',
        type: "POST",
        data: data
    })
        .done(function (data) {
            console.log(data);
            $('#AddBoatModal').hide();

        //$.smallBox({
        //    title: "Boat has been saved",
        //    color: "#5F895F",
        //    iconSmall: "fa fa-check bounce animated",
        //    timeout: 4000
        //});
            $('#updaterequire').addClass('hidden');
            $(tableId).trigger('reloadGrid');
            $('#InterestedParties3').trigger('reloadGrid');
        $('#tblCeasedBoat').trigger( 'reloadGrid' );
        $('#tblTransferedBoat').trigger( 'reloadGrid' );
            $(tabId + " :input").val(""); //Clears form

    })
        .fail(function (jqXHR, textStatus, errorThrown) {
        $('#AddBoatModal').hide();
        alert("There was an error while trying to save the Boat.");
    });
    };


    function EditBoat(classId, boatId) {

                //event.preventDefault();

        var _sheetId = $('#AnswerSheetId').val();
        $('#getDetailsModal').show();

        var postData = {
		'boatId': boatId,
		'answerSheetId': _sheetId
	};

        $.ajax({

        url: '@Url.Action("GetBoat", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ boatId: boatId, answerSheetId : _sheetId })
            data: postData
    })
            .done(function (data) {

            console.log(data);
            if (data.boatType1 == "CruisersandLaunches" || data.boatType1 == "YachtsandCatamarans") {
                $('#VesselUseSection').show('2000');
                $('#SelectedBoatUse').val(data.boatselectedText).trigger('chosen:updated');
                }
            $('#SelectedInterestedParty').val(data.boatpartyText).trigger('chosen:updated');
            $('#BoatId.' + classId).val(data.boatId);
            $('#BoatName.' + classId).val(data.boatName);
            $('#BoatType1.' + classId).val(data.boatType1);
            $('#OtherConstructionType.' + classId).val(data.otherHullConstruction);
            $('#OtherHullConfiguration.' + classId).val(data.otherHullConfiguration);
            $('#MaxSumInsured.' + classId).val("$"+(data.maxSumInsured).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,'));
            $('#excess.' + classId).val(data.boatQuoteExcessOption);
            $('#YearOfManufacture.' + classId).val(data.yearOfManufacture);
            $('#BoatMake.' + classId).val(data.boatMake);
            $('#BoatModel.' + classId).val(data.boatModel);
            $('#BuiltProfessionally.' + classId).val(data.builtProfessionally);
            $('#MotorType.' + classId).val(data.motorType);
            $('#ModifiedMotor.' + classId).val(data.modifiedMotor);
            $('#MaxRatedSpeed.' + classId).val(data.maxRatedSpeed);
            $('#AucklandRegistration.' + classId).val(data.aucklandRegistration);
            $('#chooseBoat_chosen.' + classId).val(data.boatUseslist);
            $('#BoatIsTrailered.' + classId).val(data.boatIsTrailered);
            $('#BoatTrailer.' + classId).val(data.boatTrailer);
            $('#BoatLandLocation.' + classId).val(data.boatLandLocation);
            $('#BoatOperator.' + classId).val(data.boatOperator);
            $('#BoatEffectiveDate.' + classId).val(data.boatEffectiveDate);
            $('#BoatIPEffectiveDate.' + classId).val(data.boatIPEffectiveDate);
            $('#BoatCeaseDate.' + classId).val(data.boatCeaseDate);
            $('#BoatCeaseReason.' + classId).val(data.boatCeaseReason);
            $('#InterestedParties3.' + classId).val(data.interestedParties3);
            $('#BoatNotes.' + classId).val(data.boatNotes);
                $('#VesselArea.' + classId).val(data.vesselArea);

                if (data.boatType2 == "Berthed" || data.boatType2 == "Moored") {

                    if (data.boatWaterLocation == "00000000-0000-0000-0000-000000000000") {

                         if (!($('#MooredType option:selected'))) {
                        $('#MooredType').append("<option selected value=\"\"> --Select-- </option>");
                    }
                    $('#MooredType').append($('<option>', { value: "Berthed", text: "Berthed" }));
                    $('#MooredType').append($('<option>', { value: "Pile", text: "Pile" }));
                    $('#MooredType').append($('<option>', { value: "Swing", text: "Swing" }));
                    $('#MooredType').trigger('chosen:updated');

                    }
                };

                if (data.boatWaterLocation != null && data.boatWaterLocation != "00000000-0000-0000-0000-000000000000") {

                    $('#BoatWaterLocation.b').val(data.boatWaterLocation);
                    $('#othermarinSection').addClass("hidden");
                    $('#BoatMooredTypeSection').addClass("hidden");
                                        GetMooredType(data.boatWaterLocation);

                } else {

                    $('#BoatWaterLocation.' + classId).val("add");
                    $('#othermarinSection').removeClass("hidden");
                    $('#BoatMooredTypeSection').removeClass("hidden");
                    $('#othermarina.b').val(data.otherMarinaName);
                     //GetMooredType(data.BoatWaterLocation);
                }

                if (data.boatType2 == "Roadtrailer" && data.boatType2 != "Stored") {
                      $('#othermarinSection').addClass("hidden");
                    $('#BoatMooredTypeSection').addClass("hidden");
                }


            $('#MooredType.' + classId).val(data.waterLocationMooringType);
            vesselType1Selected();
                $('#BoatType2.b').val(data.boatType2);

                vesselType2Selected();
                updateExcess();
            updateEditBoat(data);
               // $('#MooredType.b').val(data.WaterLocationMooringType);
            UpdateChosen();
                $('#getDetailsModal').hide();
            });
};

    function updateEditBoat(data) {

        if (data.hullConfiguration == "Other") {
            $('#HullConfigurationOtherSection').removeClass("hidden");
        }
        if (data.hullConstruction == "Other") {
            $('#HullConstructOtherSection').removeClass("hidden");
        }
        if (data.boatpartyText.length <= 0) {
              $('#Addipeffectivedatesection').addClass('hidden');
              $('#ipeffectivedatesection').addClass('hidden');
        }

        $('#BoatType2.b').val(data.boatType2);

        $('#HullConstruction.b').val(data.hullConstruction);
        $('#HullConfiguration.b').val(data.hullConfiguration);
        $('#chooseBoat_chosen.b').val(data.boatUseslist);
        $('#RiggingType.b').val(data.riggingType);
        $('#MastType.b').val(data.mastType);
        $('#MaxSumInsured.b').val("$"+(data.maxSumInsured).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,'));
        $('#excess.b').val(data.boatQuoteExcessOption);
        $('#AddBoatOperator.b').val(data.boatOperator);
        $('#MotorType.b').val(data.motorType);

        $('#BoatTrailer.b').val(data.boatTrailer);
           $('#BoatIsTrailered.b').val(data.boatIsTrailered);
        $('#BuiltProfessionally.b').val(data.builtProfessionally);

        if ($('#BoatType1.b').val() == "Jetski") {
           //$('#BuiltProfessionally.b').val(data.BuiltProfessionally);
           //$('#MotorType.b').val(data.MotorType);
           // $('#HullConfiguration.b').val(data.HullConfiguration);

        $('#BuiltProfessionally').val("True").trigger('chosen:updated');
        $('#MotorType').val("Jet").trigger('chosen:updated');
        $('#HullConfiguration').val("Mono").trigger('chosen:updated');
        }

        if (data.boatIsTrailered) {
            hasTrailer();
        }
        // if (data.BoatType2 == "Roadtrailer") {
        //     $('#VesselTrailer').show('2000');
        //    $('#BoatIsTrailered').val("True");
        //}else
            $('#BoatIsTrailered.b').val(data.boatIsTrailered);

         if (data.MotorType == "NA") {
            $('#AddModifiedMotorSection').addClass("hidden");
        } else {
            $('#AddModifiedMotorSection').removeClass("hidden");
        }
         $('#updaterequired').addClass("hidden");

    }

    function updateTrailer() {
        $('#BoatTrailer').removeClass("hidden");

    }

     function setCeasedata(boatId, status, sourceTable, destTable) {
        debugger;
        $('#BoatRemoveModal').show();
        $('.modal').css('width', '600px');
        $('#boatID').val(boatId);
		$('#status').val(status);
		$('#sourceTable').val(sourceTable);
		$('#destTable').val(destTable);
      }

    function Validateremove() {
        var ceaseDate = $("#RemoveCeaseEffectiveDate").val();
        var ceaseReason = $("#RemoveCeaseReason").val();
        var validation = true;

        if (ceaseDate == "") {
            $('#validateBoatCeasedate').html("<font color='red'>Field is required</font>");
            if (validation) {
                validation = false;
            }
        } else {
            $('#validateBoatCeasedate').html("");
        }

        if (ceaseReason == "") {
            $('#validateBoatDescription').html("<font color='red'>Field is required</font>");
            if (validation) {
                validation = false;
            }
        } else {
            $('#validateBoatDescription').html("");
        }

        return validation;
    }

    function ValidateVehicleremove() {
        var ceaseDate = $("#RemoveVehicleCeaseEffectiveDate").val();
        var ceaseReason = $("#VehicleCeaseReason").val();
        var validation = true;

        if (ceaseDate == "") {
            $('#validateVehicleCeasedate').html("<font color='red'>Field is required</font>");
            if (validation) {
                validation = false;
            }
        } else {
            $('#validateVehicleCeasedate').html("");
        }

        if (ceaseReason == "") {
            $('#validateVehicleDescription').html("<font color='red'>Field is required</font>");
            if (validation) {
                validation = false;
            }
        } else {
            $('#validateVehicleDescription').html("");
        }
        return validation;
    }

    function UndoBoatRemovedStatus(boatId, status, sourceTable, destTable) {
        event.preventDefault();
        var postData = {
            'BoatId': boatId,
            'Removed': status
        };

        $.ajax({
            url: '@Url.Action("UndoBoatRemovedStatus", "Services")',
            type: "Post",
            data: postData
        })
            .done(function (data) {
                $('#getDetailsModal').hide();
                if (data === true) {
                    $(sourceTable).trigger('reloadGrid');
                    $(destTable).trigger('reloadGrid');
                }
            });
    }

    function SetBoatRemovedStatus(boatId, status, sourceTable, destTable) {
        var postData = {
            'boatId': boatId,
            'status': status
        };

        $.ajax({
            url: '@Url.Action("SetBoatRemovedStatus", "Services")',
            type: "Post",
            data: postData
        })
            .done(function (data) {
                console.log(data);
                $('#BoatRemoveModal').hide();
                $('#getDetailsModal').hide();
                if (data.success === true) {
                    $(sourceTable).trigger('reloadGrid');
                    $(destTable).trigger('reloadGrid');
                }
                if (data.hasTrailer === true) {
                    alert("You have removed a trailered vessel. Please go to trailer section to remove trailer associated with this boat if needed.");
                }
            });
    }

    function SetBoatCeasedStatus(boatId, status, sourceTable, destTable) {
        event.preventDefault();
        var CeaseDate =  $('#RemoveCeaseEffectiveDate').val();
        var ceaseReason = $('#RemoveCeaseReason').val();

        var postData = {
            'boatId': boatId,
            'status': status,
            'ceaseDate': CeaseDate,
            'ceaseReason': ceaseReason
        };

        $.ajax({
            url: '@Url.Action("SetBoatCeasedStatus", "Services")',
            type: "Post",
            data: postData
        })
            .done(function (data) {
                if (data === true) {
                    $(sourceTable).trigger('reloadGrid');
                    $(destTable).trigger('reloadGrid');
                }
            });
    };

    function SetBoatTransferedStatus(boatId, status, sourceTable, destTable) {
        event.preventDefault();
        var postData = {
            'boatIdboatId': locationId,
            'status': status
        };

        $.ajax({
            url: '@Url.Action("SetBoatTransferedStatus", "Services")',
            type: "Post",
            data: postData
        })
            .done(function (data) {
                if (data === true) {
                    $(sourceTable).trigger('reloadGrid');
                    $(destTable).trigger('reloadGrid');
                }
            });
    };

    function ValidateBoatUse(event, tabId, tableId, currenttab) {
        event.preventDefault();
        var boatUseCategory = $('#BoatUseCategory').val();
        var boatUseRaceCategory = $('#BoatUseRaceCategory').val();
        var boatUseRaceUseSpinnakers = $('#BoatUseRaceUseSpinnakers').val();

        var result = true;
        if (boatUseCategory == "") {
            $('#validateBoatUseCategory').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateBoatUseCategory').html("<font></font>");
        }
        if (boatUseRaceCategory == "" && boatUseCategory == "Race") {
            $('#validateBoatUseRaceCategory').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateBoatUseRaceCategory').html("<font></font>");
        }
        if (boatUseRaceUseSpinnakers == "" && boatUseCategory == "Race") {
            $('#validateBoatUseRaceUseSpinnakers').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateBoatUseRaceUseSpinnakers').html("<font></font>");
        }

        if (result) {
            AddBoatUse(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#validateNRMarketValue').html("<font color='red'>Please enter the number.</font>")
            return result;
        }
    }

    function ValidateAddNamedParty(tabId, tableId, currenttab) {
        var partyIA = $('#InsuranceAttributes').val();
        var partyOrgType = $('#AddOrganisationType').val();
        var partyName = $('#AddNPOrgName').val();
        var partyPhone = $('#AddNPOrgPhone').val();
        var PartyEmail = $('#AddNPOrgEmail').val();
        var FirstName = $('#SkiFirstName').val();
        var LastName = $('#SkiLastName').val();
        var AdminFirstName = $('#FirstNameAdd').val();
        var AdminLastName = $('#LastNameAdd').val();
        var AdminPhone = $('#PhoneAdd').val();
        var user = $('#UserDetail').val();
        var result = true;

        if (AdminFirstName == "" && user == "UserNotFound") {
            $('#Adminfname').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#Adminfname').html("<font></font>");
        }
        if (AdminLastName == "" && user == "UserNotFound") {
            $('#Adminlname').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#Adminlname').html("<font></font>");
        }
        if (AdminPhone == "" && user == "UserNotFound") {
            $('#AdminPhone').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AdminPhone').html("<font></font>");
        }
        if (FirstName == "" && partyIA == "Skipper") {
            $('#skipperFirstname').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#skipperFirstname').html("<font></font>");
        }
        if (LastName == "" && partyIA == "Skipper") {
            $('#skipperLastname').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#skipperLastname').html("<font></font>");
        }

        if (partyOrgType == "") {
            $('#orgType').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#orgType').html("<font></font>");
        }
        if (partyIA == "") {
            $('#partyIA').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#partyIA').html("<font></font>");
        }
        if (partyName == "" && partyIA != "Skipper") {
            $('#Addpartyname').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#Addpartyname').html("<font></font>");
        }
        if (partyPhone == "") {
            $('#Addpartyphone').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#Addpartyphone').html("<font></font>");
        }
        if (PartyEmail == "") {
            $('#Addpartyemail').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#Addpartyemail').html("<font></font>");
        }

        if (result) {
            AddAddNamedParty(event,tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return result;
        }

    }

    function AddAddNamedParty(event, tabId, tableId) {
        event.preventDefault();
        $('#getPartyModal').show();
        var informationId = $('#AnswerSheetId').val();
        var partyIA = $('#InsuranceAttributes').val();
        var partyName = $('#AddNPOrgName').val();
        var partyPhone = $('#AddNPOrgPhone').val();
        var PartyEmail = $('#AddNPOrgEmail').val();
        var partyid = $('#AddNamedPartyOrganisationId').val();
        var firstName = $('#SkiFirstName').val();
        var lastName = $('#SkiLastName').val();
        var partyOrgType = $('#AddOrganisationType').val();
        var adminFName =  $('#FirstNameAdd').val();
        var adminLName = $('#LastNameAdd').val();
        var adminPhone = $('#PhoneAdd').val();
        var adminEmail = $('#EmailAdd').val();



        if (partyIA != "Skipper") {

             var proddata = {
            "InsuranceAttribute": partyIA,
            "OrganisationName": partyName,
            "OrganisationPhone": partyPhone,
            "OrganisationEmail": PartyEmail,
            "AnswerSheetId": informationId,
            "OrganisationTypeName": partyOrgType,
            "FirstName": adminFName,
            "LastName": adminLName,
            "Phone": adminPhone,
            "Email": adminEmail,
            "ID": partyid
            };

            $.ajax({
                type: "Post",
                data: proddata,
                url: '@Url.Action("AddInterestedParty", "Services")'

            })
                .done(function (data) {
                 //$.smallBox({
                 //title: "Named Party has been saved",
                 //color: "#5F895F",
                 // iconSmall: "fa fa-check bounce animated",
                 // timeout: 4000
                 //});

                $('#AdminSectionAdd').addClass('hidden');
                $('#AddAdminUserSec').addClass('hidden');
                $('#UserSec').addClass('hidden');
                $('#useremailSec').addClass('hidden');



                $(tableId).trigger('reloadGrid');
                $(tabId + " :input").val("");
                $('#SelectedInterestedParty').append("<option  value=\"" + data.ID + "\">" + data.organisationName + "</option>")
                $('#SelectedInterestedParty').trigger('chosen:updated');
                $('#AddSelectedInterestedParty').append("<option  value=\"" + data.ID + "\">" + data.organisationName + "</option>")
                $('#AddSelectedInterestedParty').trigger('chosen:updated');
                $('#getPartyModal').hide();
                $('input[name=AddIsAdmin]').prop('checked', false);

                }).fail(function (jqXHR, textStatus, errorThrown) {
                $('#getPartyModal').hide();
           alert("There was an error while trying to save the Boat Use.");
                });

        } else {

             var proddata = {
            "InsuranceAttribute": partyIA,
            "OrganisationPhone": partyPhone,
            "OrganisationEmail": PartyEmail,
            "FirstName": firstName,
            "LastName" :lastName,
            "AnswerSheetId": informationId,
            "OrganisationTypeName": partyOrgType,
            "Phone": partyPhone,
            "Email": PartyEmail,
            "ID": partyid
            };


            $.ajax({
                type: "Post",
                data: proddata,
                url: '@Url.Action("AddOperator", "Services")'

            })
                .done(function (data) {
                 //$.smallBox({
                 //title: "Skipper has been saved",
                 //color: "#5F895F",
                 // iconSmall: "fa fa-check bounce animated",
                 // timeout: 4000
                 //});

                $('#BoatOperator').append("<option value=\"" + data.iD + "\">" + data.firstName + " " + data.lastName + "</option>")
                $("#BoatOperator.b [value='add']").remove();
                $('#BoatOperator.b').append($('<option>', { value: "add", text: "Add Skipper" }));
                $('#BoatOperator.b').trigger('chosen:updated');

                $('#AddBoatOperator.b').append("<option value=\"" + data.iD + "\">" + data.firstName + " " + data.lastName + "</option>")
                $("#AddBoatOperator.b [value='add']").remove();
                $('#AddBoatOperator.b').append($('<option>', { value: "add", text: "Add Skipper" }));
                $('#AddBoatOperator.b').trigger('chosen:updated');
                $(tableId).trigger('reloadGrid');
                $('#AddSkprExpSec').addClass("hidden");
                $('#SkiFirstNameSec').addClass("hidden");
                $('#AdminSectionAdd').addClass('hidden');
                $('#AddAdminUserSec').addClass('hidden');
                $('#UserSec').addClass('hidden');
                $('#useremailSec').addClass('hidden');
                $('#SkiLastNameSec').addClass("hidden");
                $('#AddOrganisationType').val("").trigger('chosen:updated');
                 $('#AddOrganisationType').prop("disabled", false);
                $(tabId + " :input").val("");
                $('#getPartyModal').hide();



                }).fail(function (jqXHR, textStatus, errorThrown) {
                $('#getPartyModal').hide();
           alert("There was an error while trying to save the Boat Use.");
         });


        }
    }

    function ValidateNamedParty(tabId, tableId, currenttab) {
        var partyName = $('#NPOrgName').val();
        var partyPhone = $('#NPOrgPhone').val();
        var PartyEmail = $('#NPOrgEmail').val();
        var result = true;
        if (partyName == "") {
            $('#partyname').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#partyname').html("<font></font>");
        }
        if (partyPhone == "") {
            $('#partyphone').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#partyphone').html("<font></font>");
        }
        if (PartyEmail == "") {
            $('#partyemail').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#partyemail').html("<font></font>");
        }

        if (result) {
            AddNamedParty(event,tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return result;
        }
    }


     function AddNamedParty(event,tabId, tableId) {

                             event.preventDefault();

                 var informationId = $('#AnswerSheetId').val();
        var name = $('#NPOrgName').val();
        var phone = $('#NPOrgPhone').val();
        var email = $('#NPOrgEmail').val();
         var partyid = $('#NamedPartyOrganisationId').val();

        var proddata = {
            "OrganisationName": name,
            "OrganisationPhone": phone,
            "OrganisationEmail": email,
            "AnswerSheetId": informationId,
            "ID":partyid
        };
            $.ajax({
                type: "Post",
                data: proddata,
                url: '@Url.Action("AddNamedParty", "Services")',
                success: function () {
                //$.smallBox({
                //        title: "Named Party has been saved",
                //        color: "#5F895F",
                //        iconSmall: "fa fa-check bounce animated",
                //        timeout: 4000
                // });
                    $(tableId).trigger('reloadGrid');
                   $(tabId + " :input").val("");

                }
            }) .done(function (data) {
                debugger;
    })
        .fail(function (jqXHR, textStatus, errorThrown) {
            debugger;
        alert("There was an error while trying to save the Boat Use.");
    });
        }

    function ValidateAddBoatUse(event, tabId, tableId, currenttab) {
        event.preventDefault();
        var boatUseCategory = $('#AddBoatUseCategory').val();
        var boatUseRaceCategory = $('#AddBoatUseRaceCategory').val();
                var boatUseRaceUseSpinnakers = $('#AddBoatUseRaceUseSpinnakers').val();

        var result = true;
        if (boatUseCategory == "" ) {
            $('#validateAddBoatUseCategory').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddBoatUseCategory').html("<font></font>");
        }
        if (boatUseRaceCategory == ""  && boatUseCategory == "Race") {
            $('#validateAddBoatUseRaceCategory').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddBoatUseRaceCategory').html("<font></font>");
        }
          if (boatUseRaceUseSpinnakers == "" && boatUseCategory == "Race") {
            $('#validateAddBoatUseRaceUseSpinnakers').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddBoatUseRaceUseSpinnakers').html("<font></font>");
        }
        if (result) {
            AddBoatUse(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            return result;
        }
    }


    function AddBoatUse(tabId, tableId) {
        var informationId = $('#AnswerSheetId').serialize();
        $('#getBoatUseModal').show();
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddBoatUse", "Services")',
        type: "POST",
        data: $.grep([ $(tabId + " :input").serialize(), informationId ], Boolean).join("&")
    })
    .done(function (data) {
        //$.smallBox({
        //    title: "Boat Use has been saved",
        //    color: "#5F895F",
        //    iconSmall: "fa fa-check bounce animated",
        //    timeout: 4000
        //});
        $(tableId).trigger( 'reloadGrid' );
        $('#tblCeasedBoatUse').trigger( 'reloadGrid' );
        $('#SelectedBoatUse').trigger('chosen:updated');
        $(tabId + " :input").val("");
                $('#getBoatUseModal').hide();

    })
        .fail(function (jqXHR, textStatus, errorThrown) {
                $('#getBoatUseModal').hide();

        alert("There was an error while trying to save the Boat Use.");
    });
    };

    function validateIP() {

        if (!(document.getElementById("OrganisationTypeName").validity.valueMissing) && !(document.getElementById("organisationName").validity.valueMissing)
            && !(document.getElementById("organisationPhone").validity.valueMissing)) {
            addInterestedParty(event);
            $('#addInterestedPartyModal').hide();
        }
    }


    function addInterestedParty(event) {
                            event.preventDefault();

        $('#getPartyModal').show();
        selectedInterestedParty = $('input[name=InsuranceAttribute]:checked').val();
        var Financial = false;
        var Private = false;

        if (selectedInterestedParty == "Financial") {
            Financial = true;
            Private = false;
        }
        else if (selectedInterestedParty == "Private") {
            Private = true;
            Financial = false;
        }
        else if (selectedInterestedParty == "CoOwner") {
            Financial = true;
            Private = true;
        }

        var AnswerSheetId = $('#AnswerSheetId').serialize();
        var InterestedPartyName = $('#organisationName').serialize();
        var InterestedPartyEmail = $('#IPorganisationEmail').serialize();
        var InterestedPartyPhone = $('#organisationPhone').serialize();
        var insuranceAtrribute = "InsuranceAttribute=" + selectedInterestedParty;
        var UserFName = $('#FirstName').serialize();
        var UserLName = $('#LastName').serialize();
        var Email = $('#Email').serialize();
        var Phone = $('#Phone').serialize();
        var IsAdmin =   $('input[name=IsAdmin]:checked').val();
            //var OrganisationType = "BoatUseCategory=LiveOnBoard";

        var OrganisationType = $("#OrganisationTypeName").serialize();
        var OrganisationTyp1111e = "OrganisationTypeName=" + OrganisationType;


        var z = $.grep([InterestedPartyName, InterestedPartyEmail, InterestedPartyPhone, OrganisationType,
            UserFName, UserLName, Email,insuranceAtrribute, Phone, IsAdmin, AnswerSheetId], Boolean).join("&");
        var z = z + "&IsAdmin=" + IsAdmin;
            console.log(z);
            $.ajax({
                url: '@Url.Action("AddInterestedParty", "Services")',
                type: "POST",
                data: z
            })
            .done(function (data) {
                //$.smallBox({
                //title: "Interested Party has been saved",
                //color: "#5F895F",
                //iconSmall: "fa fa-check bounce animated",
                //timeout: 4000
               // });

                $('#SelectedInterestedParty').append("<option selected value=\"" + data.id + "\">" + data.organisationName + "</option>")
                $('#SelectedInterestedParty').trigger('chosen:updated');
                 $('#AddSelectedInterestedParty').append("<option selected value=\"" + data.id + "\">" + data.organisationName + "</option>")
                $('#AddSelectedInterestedParty').trigger('chosen:updated');

                                //$("#AddSelectedInterestedParty").multiSelect("select", data.iD);
                $('#AddSelectedInterestedParty').trigger('refresh');

                $('#FinancialSection').addClass('hidden');
                $('#FinancialSection').addClass('hidden');
                $('#PrivateSection').addClass('hidden');

                var radList = document.getElementsByName('InsuranceAttribute');
                   for (var i = 0; i < radList.length; i++) {
                       (radList[i]).checked = false;
                }

                 var radList = document.getElementsByName('IsAdmin');
                   for (var i = 0; i < radList.length; i++) {
                       (radList[i]).checked = false;
                }
               $('#AdminSection' + " :input").val("");
               $('#FinancialSection' + " :input").val("");
                UpdateChosen();
                $('#getPartyModal').hide();
                $('#Addipeffectivedatesection').removeClass('hidden');
                $('#ipeffectivedatesection').removeClass('hidden');


            })
                .fail(function (jqXHR, textStatus, errorThrown) {
                $('#getPartyModal').hide();

                alert("There was an error while trying to save the Boat Use.");
            });

    }


    function ValidateBoatUseModal() {


        selectedBoatUseCategory = $('input[name=BoatUseCategory]:checked').val();

        if (selectedBoatUseCategory == "Race" || selectedBoatUseCategory == "Both") {

            if (!(document.getElementById("BoatUseRaceCategoryModal").validity.valueMissing) && !(document.getElementById("BoatUseRaceUseSpinnakersModal").validity.valueMissing)) {

                addBoatUseModal(event);
                $('#addBoatUseModal').hide();
            }
        } else {
            addBoatUseModal(event);
            $('#addBoatUseModal').hide();
        }

    };
    function addBoatUseModal(event) {
                                    event.preventDefault();

         $('#getBoatUseModal').show();
        selectedBoatUseCategory = $('input[name=BoatUseCategory]:checked').val();
        var race = false;
        var live = false;
        if (selectedBoatUseCategory == "LiveOnBoard") {
            live = true;
            race = false;
        }
        else if (selectedBoatUseCategory == "Race") {
            race = true;
            live = false;

        }
        else if (selectedBoatUseCategory == "Both") {
            race = true;
            live = true;
        }
        else if (selectedBoatUseCategory == "Neither") {
            race = false;
            live = false;
        }
        selectedBoatUseCategory = "";
        var informationId = $('#AnswerSheetId').serialize();
        if (live == true) {


                $('#SelectedBoatUse').trigger('chosen:updated');
            var boatUseEffectiveDate = $('#BoatUseLiveEffectiveDateModal').serialize();
            var boatUseCeaseDate = $('#BoatUseLiveCeaseDateModal').serialize();
            var boatUseNotes = $('#BoatUseLiveNotesModal').serialize();
            var boatusecategory = "BoatUseCategory=LiveOnBoard";
            var boatuseliveonboard = "BoatUseLiveOnBoard=True";
            var boatuserace = "BoatUseRace=False";
            var boatUseAdditionalNotes = $('#BoatUseAdditionalNotesModal').serialize();
            console.log(boatUseEffectiveDate);
            var z = $.grep([boatUseEffectiveDate, boatUseCeaseDate, boatUseNotes, boatusecategory, boatuseliveonboard, boatuserace, boatUseAdditionalNotes, informationId], Boolean).join("&");
            console.log(z);
            $.ajax({
                url: '@Url.Action("AddBoatUse", "Services")',
                type: "POST",
                data: z
            })
            .done(function (data) {
                //$.smallBox({
                //title: "Boat Use has been saved",
                //color: "#5F895F",
                //iconSmall: "fa fa-check bounce animated",
                //timeout: 4000
                //});


                console.log(data);
                $('#SelectedBoatUse').append("<option selected value=\"" + data.boatUseId + "\">" + data.boatUseCategory + "</option>")
                $('#SelectedBoatUse').trigger('chosen:updated');
                $('#AddSelectedBoatUse').append("<option selected value=\"" + data.boatUseId + "\">" + data.boatUseCategory+ "</option>")
                $('#AddSelectedBoatUse').trigger('chosen:updated');
                $('#livingUseSection' + " :input").val("");
                $('#racingUseSection' + " :input").val("");
                $('#getBoatUseModal').hide();


            })
                .fail(function (jqXHR, textStatus, errorThrown) {


                  $('#getBoatUseModal').hide();

                alert("There was an error while trying to save the Boat Use.");

            });
        }

        if (race == true) {


            var boatUseEffectiveDate = $('#BoatUseRaceEffectiveDateModal').serialize();
            var boatUseCeaseDate = $('#BoatUseRaceCeaseDateModal').serialize();
            var boatUseNotes = $('#BoatUseRaceNotesModal').serialize();
            var boatusecategory = "BoatUseCategory=Race";
            var boatuseliveonboard = "BoatUseLiveOnBoard=False";
            var boatuserace = "BoatUseRace=True";
            var boatuseracecategory = $('#BoatUseRaceCategoryModal').serialize();
            var boatuseracespinnakers = $('#BoatUseRaceUseSpinnakersModal').serialize();
            var boatUseAdditionalNotes = $('#BoatUseAdditionalNotesModal').serialize();
            $.ajax({
                url: '@Url.Action("AddBoatUse", "Services")',
                type: "POST",
                data: $.grep([boatUseEffectiveDate, boatUseCeaseDate, boatUseNotes, boatuserace, boatuseliveonboard, boatusecategory, boatuseracecategory, boatUseAdditionalNotes, boatuseracespinnakers, informationId ], Boolean).join("&")
            })
                .done(function (data) {

                //$.smallBox({
                //title: "Boat Use has been saved",
                //color: "#5F895F",
                //iconSmall: "fa fa-check bounce animated",
                //timeout: 4000
                //});


                $('#SelectedBoatUse').append("<option selected value=\"" + data.boatUseId + "\">" + data.boatUseCategory + "</option>")
                $('#SelectedBoatUse').trigger('chosen:updated');
                $('#AddSelectedBoatUse').append("<option selected value=\"" + data.boatUseId + "\">" + data.boatUseCategory + "</option>")
                $('#AddSelectedBoatUse').trigger('chosen:updated');
                $('#livingUseSection' + " :input").val("");
                $('#racingUseSection' + " :input").val("");
                $('#getBoatUseModal').hide();


            })
                .fail(function (jqXHR, textStatus, errorThrown) {


                                $('#getBoatUseModal').hide();

                alert("There was an error while trying to save the Boat Use.");

            });
        }

        if (live == false && race == false) {


            $('#SelectedBoatUse').trigger('chosen:updated');
            var boatusecategory = "BoatUseCategory=NoRacingNoLiveOnBoard";
            var boatuseliveonboard = "BoatUseLiveOnBoard=False";
            var boatuserace = "BoatUseRace=False";

            var boatUseAdditionalNotes = $('#BoatUseAdditionalNotesModal').serialize();
            console.log(boatUseEffectiveDate);
            var z = $.grep([boatuserace,boatuseliveonboard,boatusecategory, informationId], Boolean).join("&");
            console.log(z);
            $.ajax({
                url: '@Url.Action("AddBoatUse", "Services")',
                type: "POST",
                data: z
            })
            .done(function (data) {
                //$.smallBox({
                //title: "Boat Use has been saved",
                //color: "#5F895F",
                //iconSmall: "fa fa-check bounce animated",
                //timeout: 4000
                //});

                console.log(data);
                $('#SelectedBoatUse').append("<option selected value=\"" + data.boatUseId + "\">" + data.boatUseCategory + "</option>")
                $('#SelectedBoatUse').trigger('chosen:updated');
                $('#AddSelectedBoatUse').append("<option selected value=\"" + data.boatUseId + "\">" + data.boatUseCategory + "</option>")
                $('#AddSelectedBoatUse').trigger('chosen:updated');
                $('#getBoatUseModal').hide();

            })
                .fail(function (jqXHR, textStatus, errorThrown) {


                $('#getBoatUseModal').hide();

                alert("There was an error while trying to save the Boat Use.");
            });
        }
            $('input[name=BoatUseCategory]').prop('checked', false);
            $(vesselUseSectionLive).hide();
            $(vesselUseSectionRace).hide();
            $(vesselUseHairline).hide();
            $(vesselUseHairline2).hide();
            $(vesselUseAdditionalNotes).hide();
            $('#BoastUse.b').prop("selected", false);
    }

    function done() {
        var updatebutton = document.getElementById("update");
        $(updatebutton).addClass("hidden");
        $(updatebutton).hide();

    }

    function SectionBuilder(templateId) {
        $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("GetNamedParty", "InformationController")',
        type: "Post",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ partyID: boatUseId, answerSheetId : _sheetId })
    })
        .done(function (data) {

            if (data.OperatorYearsOfExp != "" && data.OperatorYearsOfExp != null ) {
                $('#SkprExpSec').show('2000');
                $('#SkprExpSec').removeClass("hidden");
                $('#OperatorYearsOfExpModal').val(data.OperatorYearsOfExp);
            } else {
                $('#SkprExpSec').hide('2000');
                $('#SkprExpSec').addClass("hidden");
                $('#OperatorYearsOfExpModal').val("");
            }
        $('#OrganisationId').val(data.ID);
        $('#NPOrgName').val(data.OrganisationName);
        $('#NPOrgPhone').val(data.OrganisationPhone);
        $('#NPOrgWebsite').val(data.Website);
        $('#NPOrgEmail').val(data.Email);
    });
    }

    function AddSection(SectionId) {
        debugger;
        var elements = document.getElementById(formId).elements;

        var elemenhjts = document.getElementsByClassName("input");

        var element11s = document.querySelectorAll("#my-form input[type=text][value='']");

    }

    function EditNamedParties(classId, boatUseId) {
        debugger;
                            event.preventDefault();

        var _sheetId = $('#AnswerSheetId').val();

        $('#getDetailsModal').show();

        var postData = {
		'partyID': boatUseId,
		'answerSheetId': _sheetId
	};

    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("GetNamedParty", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ partyID: boatUseId, answerSheetId : _sheetId })
        data: postData,
async: true
    })
        .done(function (data) {
            debugger;

        $('#NamedPartyOrganisationId').val(data.id);
        $('#NPOrgName').val(data.organisationName);
        $('#NPOrgPhone').val(data.organisationPhone);
        $('#NPOrgWebsite').val(data.website);
        $('#NPOrgEmail').val(data.email);
        $('#getDetailsModal').hide();
	});
    };



    function EditBoatUse(classId, boatUseId) {
                            event.preventDefault();

        var _sheetId = $('#AnswerSheetId').val();
        $('#getDetailsModal').show();
        var postData = {
		'boatUseId': boatUseId,
		'answerSheetId': _sheetId
	};
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("GetBoatUse", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ boatUseId: boatUseId, answerSheetId : _sheetId })
        data: postData,
        async: true
    })
        .done(function (data) {

        $('#BoatUseId.' + classId).val(data.boatUseId);
        $('#BoatUseCategory.' + classId).val(data.boatUseCategory);
        $('#BoatUseLiveOnBoard.' + classId).val(data.boatUseLiveOnBoard);
        $('#BoatUseRace.' + classId).val(data.boatUseRace);
        $('#BoatUseRaceCategory.' + classId).val(data.boatUseRaceCategory);
        $('#BoatUseRaceUseSpinnakers.' + classId).val(data.boatUseRaceUseSpinnakers);
        $('#BoatUseRaceNotes.' + classId).val(data.boatUseRaceNotes);
        $('#BoatUseLiveNotes.' + classId).val(data.boatUseLiveNotes);
        $('#BoatUseEffectiveDate.' + classId).val(data.boatUseEffectiveDate);
        $('#BoatUseCeaseDate.' + classId).val(data.boatUseCeaseDate);
            $('#BoatUseCeaseReason.' + classId).val(data.boatUseCeaseReason);

            UpdateChosen();
            vesselUseCategory();
                    $('#getDetailsModal').hide();

        });

};

    function EditRegisteredMotorVehicle(classId, vehicleId) {
                            event.preventDefault();

        var _sheetId = $('#AnswerSheetId').val();
        var postData = {
		'vehicleId': vehicleId,
		'answerSheetId': _sheetId
	};
               $('#getDetailsModal').show();
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("GetVehicle", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ vehicleId : vehicleId, answerSheetId : _sheetId })
        data: postData,
        async: true
    })
        .done(function (data) {

        $('#getDetailsModal').hide();

        $('#Registration').val(data.registration);
        $('#Validated.'+classId).val(data.validated);
        $('#VehicleId.'+classId).val(data.vehicleId);
        $('#Year.'+classId).val(data.year);
        $('#Make.'+classId).val(data.make);
        $('#VehicleModel.'+classId).val(data.vehicleModel);
        $('#VIN.'+classId).val(data.vIN);
        $('#ChassisNumber.'+classId).val(data.chassisNumber);
        $('#EngineNumber.' + classId).val(data.engineNumber);
        $('#SerialNumber.' + classId).val(data.serialNumber);
        $('#GrossVehicleMass.' + classId).val(data.grossVehicleMass);
        $('#SumInsured.'+classId).val(data.sumInsured);
        $('#FleetNumber.'+classId).val(data.fleetNumber);
        $('#AreaOfOperation.'+classId).val(data.areaOfOperation);
        $('#VehicleType.'+classId).val(data.vehicleType);
        $('#Use.'+classId).val(data.use);
        $('#SubUse.'+classId).val(data.subUse);
        $('#VehicleLocation.' + classId).val(data.vehicleLocation);
        $('#EffectiveDate.' + classId).val(data.effectiveDate);
        $('#MotorEffectiveDate.' + classId).val(data.effectiveDate);
        $('#CeaseDate.' + classId).val(data.ceaseDate);
        $('#CeaseReason.' + classId).val(data.ceaseReason);
        $('#InterestedParties.'+classId).val(data.interestedParties);
        $('#InterestedParties2.'+classId).val(data.interestedParties2);
        $('#Notes.'+classId).val(data.notes);
            $('#MotorYear.' + classId).val(data.year);
            $('#MotorMake.' + classId).val(data.make);
            $('#MotorModel.' + classId).val(data.vehicleModel);
            $('#MotorSumInsured.' + classId).val(data.sumInsured);
            $('#MotorLocation.' + classId).val(data.vehicleLocation);

            UpdateChosen();
        });
       };



    function UpdateChosen() {
        // find all multiselect items and apply Chosen

    $('.cselect').each(function() {
        $('#'+this.id).trigger("chosen:updated");
    });
    };

    //    function ClearBoats(tabId,currentTab) {
    //    if (confirm("I don't want to add.")) {
    //        $(tabId + " :input").val(""); //Clears form
    //        SetCurrentTab(currenttab);
    //    }
    //    else {
    //        return false;
    //    }
    //};

    //function SetCurrentTab(tabPaneId) {
    //    event.preventDefault();
    //    $('.nav-tabs a[href="#' + tabPaneId + '"]').trigger("click");
    //    //$('.nav-tabs a[href="#' + tabPaneId + '"]').reload();
    //};

    function SetVehicleRemovedStatus(vehicleId, status, sourceTable, destTable) {
                            //event.preventDefault();
        debugger;
        var postData = {
		'vehicleId': vehicleId,
		'status': status
	};
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetVehicleRemovedStatus", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ vehicleId : vehicleId, status : status })
        data: postData,
        async: true
    })
        .done(function (data) {
            debugger;
             $('#VehicleRemoveModal').hide();
        if (data.status === true) {
            $(sourceTable).trigger( 'reloadGrid' );
            $(destTable).trigger( 'reloadGrid' );
            //$.smallBox({
            //    title: "Vehicle status has been updated",
            //    color: "#5F895F",
            //    iconSmall: "fa fa-check bounce animated",
            //    timeout: 4000
           // });
        }
            debugger;
        var selectElement = document.getElementById("AddBoatTrailer");
                    //location.reload(true);

        for (var i = 0; i<=selectElement.length-1; i++){
            if ((selectElement[i].value) == data.id ){
                selectElement[i].remove();
               }
        }

         var selectElement1 = document.getElementById("BoatTrailer");
                    //location.reload(true);

        for (var i = 0; i<=selectElement1.length-1; i++){
            if ((selectElement1[i].value) == data.id ){
                selectElement1[i].remove();
            }
            var hjs = selectElement1.length;
         }
        //            //        $("#BoatTrailer.b [value='data.']").remove();
        //            //$("#AddBoatTrailer.b [value='add']").remove();

        //                 $('#boatTabs-2').trigger('reloadGrid');

        //         $('#boatTabs-3').trigger('reloadGrid');
    });
    };

    function CreateProgramme() {

                            event.preventDefault();

        var programmeName = $("#ProgName").val();

        $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("ProgrammeBuilder", "Information")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ ProgramName : programmeName })
    })
            .done(function (data) {

                    // $.smallBox({
                    //      title: "User Not Found ",
		                  //color: "#5F895F",
		                  //iconSmall: "fa fa-check bounce animated",
		                  //timeout: 4000
                    // });


    })

       .fail(function (jqXHR, textStatus, errorThrown) {

        alert("Unable to get Vehicle details.");
    });


    }


    function GetUser(email) {

        var UserEmail = $(email).val();
                            event.preventDefault();

        $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("getUserEmail", "Services")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ Useremail : UserEmail })
    })
            .done(function (data) {

                if (data == "NotFound") {

                     //$.smallBox({
                     //     title: "User Not Found ",
                     //     color: "#5F895F",
                     //     iconSmall: "fa fa-check bounce animated",
                     //     timeout: 4000

                     //});
                    $('#firstnameSec').removeClass("hidden");
                    $('#LastnameSec').removeClass("hidden");
                    $('#PhoneSec').removeClass("hidden");

                } else {

                    $('#firstnameSec').addClass("hidden");
                    $('#LastnameSec').addClass("hidden");
                    $('#PhoneSec').addClass("hidden");
                }
    })
            .fail(function (jqXHR, textStatus, errorThrown) {

        alert("Unable to get Vehicle details.");
    });

    };


     function AddGetUser(email) {

                             event.preventDefault();

        var UserEmail = $(email).val();
        $('#getExistingUser').show();
        $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("getUserEmail", "Services")',
        type: "POST",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ Useremail : UserEmail })
    })
            .done(function (data) {

                if (data == "NotFound") {

                    $('#UserDetail').val("UserNotFound");
                     //$.smallBox({
                     //     title: "User Not Found ",
                     //     color: "#5F895F",
                     //     iconSmall: "fa fa-check bounce animated",
                     //     timeout: 4000
                     //});
                     var user = document.getElementById("userfound");
                     $('#userfound').html("User NotFound. Enter Admin Details");
                     user.style.color = "Red";
                    $('#UserDetail').val("UserFound");

                    $('#UserSec').removeClass("hidden");
                    $('#AddupdateParty').removeClass("hidden");


                } else {

                     var user = document.getElementById("userfound");
                     $('#userfound').html("User Found. Click Update to proceed");
                     user.style.color = "green";
                     $('#UserDetail').val("UserFound");
                     $('#UserSec').addClass("hidden");
                     $('#AddupdateParty').removeClass("hidden");
                }
            $('#getExistingUser').hide();
    })
            .fail(function (jqXHR, textStatus, errorThrown) {
                $('#getExistingUser').hide();

        alert("Unable to get Vehicle details.");
    });

    };




function GetRegisteredMVDetails(elementBaseName)
   {                    event.preventDefault();


    var TrailerModal = false;
    if (elementBaseName == "#RegistrationModal") {
        TrailerModal = true;
    }
    var plate = $(elementBaseName).val();
    var postData = {
		'registration': plate
	};
    // Get info from Carjam here
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SearchVehicle", "Services")',
        type: "POST",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ registration: plate })
        data: postData,
async: true
    })
        .done(function (data) {
            if (TrailerModal==true) {

                $('#ValidatedTrailer.b').val(data.validated);
                $('#YearModal.b').val(data.year);
                $('#MakeModal.b').val(data.make);
                $('#ModelModal.b').val(data.vehicleModel);
                $('#VINModal.b').val(data.vin);
                $('#ChassisNumberModal.b').val(data.chassisNumber);
                $("#trailerModalHairline, #trailerModalHairline2, #trailerModalHairline3, #trailerModalHairline4").show('2000');
                $(vesselTrailerChassis).show('2000');
                $(vesselTrailerEffective).show('2000');
                $(vesselTrailerCease).show('2000');
                $(vesselTrailerCeaseReason).show('2000');
                $(vesselTrailerYear).show('2000');
                $(vesselTrailerMake).show('2000');
                $(vesselTrailerModel).show('2000');
                $(vesselTrailerMV).show('2000');
                $(vesselTrailerLoc).show('2000');
                $(vesselTrailerNotes).show('2000');
                $('#YearModal').attr("readonly", true);
                $('#MakeModal').attr("readonly", true);
                $('#ModelModal').attr("readonly", true);
                $('#addSection').removeClass('hidden');
            }
            else {

                $('#AddValidated.rmv').val(data.validated);
                $('#AddYear.rmv').val(data.year);
                $('#AddMake.rmv').val(data.make);
                $('#AddVehicleModel.rmv').val(data.vehicleModel);
                $('#AddVIN.rmv').val(data.vin);
                $('#AddChassisNumber.rmv').val(data.chassisNumber);
                $('#EngineNumber.rmv').val(data.engineNumber);
                $('#GrossVehicleMass.rmv').val(data.grossVehicleMass);
            }
    })
    .fail(function (jqXHR, textStatus, errorThrown) {
        alert("Unable to get Vehicle details.");
    });
};

    function ValidateMotorVehicle(event,tabId, tableId, currenttab) {
        event.preventDefault();
        var sumInsured = $('#SumInsured').val();
       var vehicleLocation = $('#VehicleLocation').val();
       var vehicleEffectiveDate = $('#EffectiveDate').val();
       var result = true;
        if (vehicleEffectiveDate == "") {
            $('#validateEffectiveDate').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateEffectiveDate').html("<font></font>");
        }
        if (sumInsured == "") {
            $('#validateMarketValue').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateMarketValue').html("<font></font>");
        }
        if (vehicleLocation == "") {
            $('#validateVehicleLocation').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateVehicleLocation').html("<font></font>");
        }

        if (result) {
            var r = /^-?[0-9]*[1-9][0-9]*$/;
            var result1 = r.test(sumInsured);
        } else {
            return result;
        }
        if (result1) {
            AddMotorVehicle(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#validateMarketValue').html("<font color='red'>Please enter the number.</font>")
            return result1;
        }

    }

    function ValidateAddMotorVehicle(event, tabId, tableId, currenttab) {
        event.preventDefault();
        var sumInsured = $('#AddSumInsured').val();
        var vehicleLocation = $('#AddVehicleLocation').val();

        var result = true;

         var vehicleEffectiveDate = $('#AddEffectiveDate').val();
        if (vehicleEffectiveDate == "") {
            $('#validateAddEffectiveDate').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddEffectiveDate').html("<font></font>");
        }

        if (sumInsured == "") {
            $('#AddvalidateMarketValue').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#AddvalidateMarketValue').html("<font></font>");
        }
        if (vehicleLocation == "") {
            $('#validateAddVehicleLocation').html("<font color='red'>Field is required</font>")
            if (result) {
                result = false;
            }
        } else {
            $('#validateAddVehicleLocation').html("<font></font>");
        }

        if (result) {
            var r = /^-?[0-9]*[1-9][0-9]*$/;
            var result1 = r.test(sumInsured);
        } else {
            return result;

        }

        if (result1) {
            AddMotorVehicle(tabId, tableId);
            SetCurrentTab(currenttab);
        } else {
            $('#validateMarketValue').html("<font color='red'>Please enter the number.</font>")
            return result1;
        }

    }

    function AddMotorVehicle(tabId, tableId) {

    var registration = $('#Registration').serialize();
    var informationId = $('#AnswerSheetId').serialize();
     $('#AddTrailer').show();
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("AddVehicle", "Services")',
        type: "POST",
        data: $.grep([$(tabId + " :input").serialize(), registration, informationId], Boolean).join("&")
    })
        .done(function (data) {
            console.log(data);
            vdate = data.year;
            vmake = data.make;
            vmodel = data.vehicleModel;
        var vid = "";
        if (data.Validated===true) {
            vid = data.registration;
        } else {
            vid = data.fleetNumber;
        };

        //$.smallBox({
        //    title: "Vehicle (" + vdate + " " + vmake + " " + vmodel +") has been saved",
        //    color: "#5F895F",
        //    iconSmall: "fa fa-check bounce animated",
        //    timeout: 4000
       // });
        // reload grid
        $(tableId).trigger( 'reloadGrid' );
        $('#tblCeasedRegisteredMV').trigger( 'reloadGrid' );
            $('#tblTransferedRegisteredMV').trigger('reloadGrid');
            $('#tblUnRegisteredMV').trigger('reloadGrid');


        $('#Registration').val("");
        $(tabId + " :input").val("");
        $(tabId + ', #InterestedParties').val('').trigger('chosen:updated');
            $(tabId + ', #InterestedParties2').val('').trigger('chosen:updated');

            if (data.Registration == null) {
                    $('#BoatTrailer.b').append($('<option>', { value: data.vehicleId, text: data.yeam + ", " + data.make + ", " + data.vehicleModel }));
                    $("#BoatTrailer.b [value='add']").remove();
                    $('#BoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#BoatTrailer.b').val(data.VehicleId);
                    $('#AddBoatTrailer.b').append($('<option>', { value: data.vehicleId, text: data.year + ", " + data.make + ", " + data.vehicleModel }));
                    $("#AddBoatTrailer.b [value='add']").remove();
                    $('#AddBoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#AddBoatTrailer.b').val(data.VehicleId);
                } else {
                    $('#BoatTrailer.b').append($('<option>', { value: data.vehicleId, text:  data.year + ", " + data.make + ", " + data.vehicleModel + ", " + data.registration}));
                    $("#BoatTrailer.b [value='add']").remove();
                    $('#BoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#BoatTrailer.b').val(data.VehicleId);
                    $('#AddBoatTrailer.b').append($('<option>', { value: data.vehicleId, text:  data.year + ", " + data.make + ", " + data.vehicleModel + ", " + data.registration}));
                    $("#AddBoatTrailer.b [value='add']").remove();
                    $('#AddBoatTrailer.b').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#AddBoatTrailer.b').val(data.VehicleId);

            }
             $('#AddTrailer').hide();

    })
        .fail(function (jqXHR, textStatus, errorThrown) {
             $('#AddTrailer').hide();
        alert("There was an error while trying to save the Vehicle.");
    });
    };

    function SetBoatUseRemovedStatus(boatUseId, status, sourceTable, destTable) {
        var postData = {
		'boatUseId': boatUseId,
		'status': status
	};
    $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetBoatUseRemovedStatus", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ boatUseId: boatUseId, status : status })
        data: postData,
async: true
    })
    .done(function (data) {
        if (data === true) {
            // reload grids
            $(sourceTable).trigger( 'reloadGrid' );
            $(destTable).trigger( 'reloadGrid' );
            //$.smallBox({
            //    title: "Boat Use status has been updated",
            //    color: "#5F895F",
            //    iconSmall: "fa fa-check bounce animated",
            //    timeout: 4000
            //});
        }
    });
};

    function SetBoatUseCeasedStatus(boatUseId, status, sourceTable, destTable) {
        var postData = {
		'boatUseId': boatUseId,
		'status': status
	};
        $.ajax({
        // change back once mono decides to fix
        url: '@Url.Action("SetBoatUseCeasedStatus", "Services")',
        type: "Post",
        //contentType: "application/json; charset=utf-8",
        //data: JSON.stringify({ boatUseId: boatUseId, status: status })
        data: postData,
async: true
    })
        .done(function (data) {
            if (data === true) {
                $(sourceTable).trigger('reloadGrid');
                $(destTable).trigger('reloadGrid');
                //$.smallBox({
                //    title: "Boat Use status has been updated",
                //    color: "#5F895F",
                //    iconSmall: "fa fa-check bounce animated",
                //    timeout: 4000
                //});
            }
        });
};
//Vessel & Vessel Use Prefab Section's Javascript
    // BoatType 1 & Options
    // Should tidy up here and use Jquery Instead for consistency & to have less variables stored -- TODO
    //Add Boat
    var AddboatType1 = document.getElementById("AddBoatType1");
    var AddboatType1Jetski = document.getElementById("AddBoatType1Jetski");
    // BoatType 2
    var AddboatType2 = document.getElementById("AddBoatType2");
    var AddboatType2Berthed = document.getElementById("AddBoatType2Berthed");
    var AddboatType2Moored = document.getElementById("AddBoatType2Moored");
    // Construction Type & Options
    var AddconstructionType = document.getElementById("AddHullConstruction");
    var AddconstructionTypeRigidHi = document.getElementById("AddHullConstructionRigidHi");
    var AddconstructionTypeWood = document.getElementById("AddHullConstructionWood");
    var AddconstructionTypeCement = document.getElementById("AddHullConstructionCement");
    var AddconstructionTypeOther = document.getElementById("AddHullConstructionOther");
    var AddhullConstructOther = document.getElementById("AddHullConstructOtherSection");
    var AddotherConstructionType = document.getElementById("AddOtherConstructionType");
    // Hull Configuration & Options
    var AddhullConfigSection = document.getElementById("AddHullConfigSection");
    var AddhullConfiguration = document.getElementById("AddHullConfiguration");
    var AddhullConfigurationOther = document.getElementById("AddHullConfigurationOther");
    var AddhullConfigurationCatamaran = document.getElementById("AddHullConfigurationCatamaran");
    var AddhullConfigurationTrimaran = document.getElementById("AddHullConfigurationTrimaran");
    var AddhullConfigurationOther = document.getElementById("AddHullConfigurationOtherSection");
    var AddotherConfigurationType = document.getElementById("AddOtherHullConfiguration");
    // Vessel Trailer
    var AddvesselTrailer = document.getElementById("AddVesselTrailer");
    // Rigging Type & Options
    var AddriggingTypeSection = document.getElementById("AddRiggingTypeSection");
    var AddriggingType = document.getElementById("AddRiggingType");

    // Mast Type & Options
    var AddmastTypeSection = document.getElementById("AddMastTypeSection");
    var AddmastType = document.getElementById("AddMastType");
    // Motor Type
    var AddmotorType = document.getElementById("AddMotorType");
    var AddmotorTypeInboardPetrol = document.getElementById("AddMotorTypeInboardPetrol");
    var AddmotorTypeInboardDiesel = document.getElementById("AddMotorTypeInboardDiesel");
    var AddmotorTypeInboardOther = document.getElementById("AddMotorTypeInboardOther");
    var AddmotorTypeOutboard = document.getElementById("AddMotorTypeOutboard");
    var AddmotorTypeNA = document.getElementById("AddMotorTypeNA");
    //Jetski Auckland Rego
    var AddaucklandRego = document.getElementById("AddaucklandRegoSection");
    //Water Location Section
    var AddwaterLoc = document.getElementById("AddBoatWaterLocationSection");
    // Excess
    var Addexcess = document.getElementById("Addexcess");
    // Add Skipper, Trailer etc...
    var AddboatOperator = document.getElementById("AddBoatOperator");
    var AddboatLandLoc = document.getElementById("AddBoatLandLocation");
    var AddboatWaterLoc = document.getElementById("AddBoatWaterLocation");
    var AddboatLoc = document.getElementById("AddWaterLocationLocationModal");
    var AddboatLoc2 = document.getElementById("AddBuildingLocationModal");
    var AddboatLoc3 = document.getElementById("AddVehicleLocationModal");
    var AddopenModal = document.getElementById("AddopenModal");
    var AddboatUse = document.getElementById("AddBoatUse");
    var AddboatTrailer = document.getElementById("AddBoatTrailer");

    // Vessel Use Modal Elements
    var AddvesselUseSectionLive = '#AddlivingUseSection';
    var AddvesselUseSectionRace = '#AddracingUseSection';
    var AddvesselUseHairline = '#AddboutUseCategoryHairline';
    var AddvesselUseHairline2 = '#AddboutUseCategoryHairline2';
    var AddvesselUseAdditionalNotes = '#AddboatUseAdditionalNotesModal';

    function AddvesselType1Selected() {
        var AddboatType1Selected = AddboatType1.options[AddboatType1.selectedIndex].value;
        $('#Addexcess').val('');
        $('#AddMaxSumInsured').val('');
    var adminUser = '#AdminUser';
    var AddboatType1Selected = AddboatType1.options[AddboatType1.selectedIndex].value;
    if (AddboatType1Selected == "Powerboats") {

        $('#AddRiggingTypeSection').hide('2000');
        $('#AddMastTypeSection').hide('2000');
        AddconstructionTypeCement.classList.add("hidden");
       // $('#AddBoatLandLocationSection').hide('2000');
       // $('#AddBoatWaterLocationSection').show('2000');
        $('#AddRegistrationSection').hide('2000');
        AddaucklandRego.classList.add("hidden");

        AddconstructionTypeRigidHi.classList.remove("hidden");
        AddconstructionTypeWood.classList.remove("hidden");
        AddconstructionTypeOther.classList.remove("hidden");
         AddboatType2Berthed.classList.remove("hidden");
        AddboatType2Moored.classList.remove("hidden");
        AddhullConfigurationCatamaran.classList.remove("hidden");
        AddhullConfigurationTrimaran.classList.remove("hidden");
        AddmotorTypeInboardPetrol.classList.remove("hidden");
        AddmotorTypeInboardDiesel.classList.remove("hidden");
        AddmotorTypeInboardOther.classList.remove("hidden");
        AddmotorTypeOutboard.classList.remove("hidden");
        AddmotorTypeNA.classList.remove("hidden");
        //AddwaterLoc.classList.remove("hidden");

        AddriggingType.selectedIndex = 0;
        AddmastType.selectedIndex = 0;
        AddconstructionType.selectedIndex = 0;
        $('#BuiltProfessionally').prop("disabled", false);
        $('#AddBuiltProfessionally').prop("disabled", false);

        $('#MotorType').prop("disabled", false);
        $('#AddMotorType').prop("disabled", false);

        $('#HullConfiguration').prop("disabled", false);
        $('#AddHullConfiguration').prop("disabled", false);

        $('#BuiltProfessionally').val("").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
        $('#MotorType').val("").trigger('chosen:updated');
        $('#AddMotorType').val("").trigger('chosen:updated');
        $('#HullConfiguration').val("").trigger('chosen:updated');
        $('#AddHullConfiguration').val("").trigger('chosen:updated');
        $('#AddVesselUseSection').hide('2000');
        $('#VesselUseSection').hide('2000');
    }

    else if (AddboatType1Selected == "CruisersandLaunches") {
        $('#AddRiggingTypeSection').hide('2000');
        $('#AddMastTypeSection').hide('2000');
        $('#AddRegistrationSection').hide('2000');
        AddconstructionTypeCement.classList.add("hidden");
       // $('#AddBoatWaterLocationSection').show('2000');
        AddconstructionTypeRigidHi.classList.remove("hidden");
        AddconstructionTypeWood.classList.remove("hidden");
        AddconstructionTypeOther.classList.remove("hidden");
        AddboatType2Berthed.classList.remove("hidden");
        AddboatType2Moored.classList.remove("hidden");
        AddhullConfigurationCatamaran.classList.remove("hidden");
        AddhullConfigurationTrimaran.classList.remove("hidden");
        AddmotorTypeInboardPetrol.classList.remove("hidden");
        AddmotorTypeInboardDiesel.classList.remove("hidden");
        AddmotorTypeInboardOther.classList.remove("hidden");
        AddmotorTypeOutboard.classList.remove("hidden");
        AddmotorTypeNA.classList.remove("hidden");
        AddaucklandRego.classList.add("hidden");
        AddriggingType.selectedIndex = 0;
        AddmastType.selectedIndex = 0;
        AddconstructionType.selectedIndex = 0;
        $('#BuiltProfessionally').prop("disabled", false);
        $('#AddBuiltProfessionally').prop("disabled", false);
        $('#MotorType').prop("disabled", false);
        $('#AddMotorType').prop("disabled", false);
        $('#HullConfiguration').prop("disabled", false);
        $('#AddHullConfiguration').prop("disabled", false);
        $('#AddVesselUseSection').show('2000');
        $('#VesselUseSection').show('2000');
        $('#BuiltProfessionally').val("").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
        $('#MotorType').val("").trigger('chosen:updated');
        $('#AddMotorType').val("").trigger('chosen:updated');
        $('#HullConfiguration').val("").trigger('chosen:updated');
        $('#AddHullConfiguration').val("").trigger('chosen:updated');

    }

    else if (AddboatType1Selected == "YachtsandCatamarans") {

        $('#AddRiggingTypeSection').show('2000');
        $('#AddMastTypeSection').show('2000');
//$('#AddBoatWaterLocationSection').show('2000');
        $('#AddRegistrationSection').hide('2000');
        AddaucklandRego.classList.add("hidden");
        AddconstructionTypeCement.classList.remove("hidden");
        AddboatType2Berthed.classList.remove("hidden");
        AddboatType2Moored.classList.remove("hidden");
        AddhullConfigurationCatamaran.classList.remove("hidden");
        AddhullConfigurationTrimaran.classList.remove("hidden");
        AddmotorTypeInboardPetrol.classList.remove("hidden");
        AddmotorTypeInboardDiesel.classList.remove("hidden");
        AddmotorTypeInboardOther.classList.remove("hidden");
        AddmotorTypeOutboard.classList.remove("hidden");
        AddmotorTypeNA.classList.remove("hidden");
        AddconstructionTypeRigidHi.classList.remove("hidden");
        AddconstructionTypeWood.classList.remove("hidden");
        AddconstructionTypeOther.classList.remove("hidden");
        $('#BuiltProfessionally').prop("disabled", false);
        $('#AddBuiltProfessionally').prop("disabled", false);
        $('#MotorType').prop("disabled", false);
        $('#AddMotorType').prop("disabled", false);
        $('#HullConfiguration').prop("disabled", false);
        $('#AddHullConfiguration').prop("disabled", false);
        $('#AddVesselUseSection').show('2000');
        $('#VesselUseSection').show('2000');
        $('#BuiltProfessionally').val("").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
        $('#MotorType').val("").trigger('chosen:updated');
        $('#AddMotorType').val("").trigger('chosen:updated');
        $('#HullConfiguration').val("").trigger('chosen:updated');
        $('#AddHullConfiguration').val("").trigger('chosen:updated');
    }

    else if (AddboatType1Selected == "Jetski") {
        $('#AddRiggingTypeSection').hide('2000');
        $('#AddMastTypeSection').hide('2000');
       // $('#AddBoatWaterLocationSection').hide('2000');
        $('#AddRegistrationSection').show('2000');
        AddboatType2Berthed.classList.add("hidden");
        AddboatType2Moored.classList.add("hidden");
        AddconstructionTypeCement.classList.add("hidden");
        AddconstructionTypeRigidHi.classList.add("hidden");
        AddconstructionTypeWood.classList.add("hidden");
        AddconstructionTypeOther.classList.add("hidden");
        AddhullConfigurationCatamaran.classList.add("hidden");
        AddhullConfigurationTrimaran.classList.add("hidden");
        AddmotorTypeInboardPetrol.classList.add("hidden");
        AddmotorTypeInboardDiesel.classList.add("hidden");
        AddmotorTypeInboardOther.classList.add("hidden");
        AddmotorTypeOutboard.classList.add("hidden");
        AddmotorTypeNA.classList.add("hidden");
        AddaucklandRego.classList.remove("hidden");
        AddboatType2.selectedIndex = 0;
        AddconstructionType.selectedIndex = 0;
        AddhullConfiguration.selectedIndex = 0;
        AddriggingType.selectedIndex = 0;
        AddmastType.selectedIndex = 0;
        AddmotorType.selectedIndex = 0;
        AddboatWaterLoc.selectedIndex = 0;
        $('#BuiltProfessionally').val("True").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("True").trigger('chosen:updated');
        $('#MotorType').val("Jet").trigger('chosen:updated');
        $('#AddMotorType').val("Jet").trigger('chosen:updated');
        $('#HullConfiguration').val("Mono").trigger('chosen:updated');
        $('#AddHullConfiguration').val("Mono").trigger('chosen:updated');
        $('#BuiltProfessionally').prop("disabled", "disabled");
        $('#AddBuiltProfessionally').prop("disabled", "disabled");
        $('#MotorType').prop("disabled", "disabled");
        $('#AddMotorType').prop("disabled", "disabled");
        $('#HullConfiguration').prop("disabled", "disabled");
        $('#AddHullConfiguration').prop("disabled", "disabled");
        $('#AddVesselUseSection').hide('2000');
        $('#VesselUseSection').hide('2000');

    }


    else if (AddboatType1Selected == "Jetboat") {
        AddconstructionTypeCement.classList.add("hidden");
        AddmotorTypeInboardPetrol.classList.add("hidden");
        AddmotorTypeInboardDiesel.classList.add("hidden");
        AddmotorTypeInboardOther.classList.add("hidden");
        AddmotorTypeOutboard.classList.add("hidden");
        AddmotorTypeNA.classList.add("hidden");
        AddaucklandRego.classList.add("hidden");
        $('#AddRiggingTypeSection').hide('2000');
        $('#AddMastTypeSection').hide('2000');
       // $('#AddBoatWaterLocationSection').hide('2000');
        $('#AddRegistrationSection').hide('2000');

        AddboatType2Berthed.classList.add("hidden");
        AddboatType2Moored.classList.add("hidden");
        AddconstructionTypeRigidHi.classList.remove("hidden");
        AddconstructionTypeWood.classList.remove("hidden");
        AddconstructionTypeOther.classList.remove("hidden");
        AddhullConfigurationCatamaran.classList.remove("hidden");
        AddhullConfigurationTrimaran.classList.remove("hidden");
       // $('#AddBoatWaterLocationSection').show('2000');
        AddconstructionType.selectedIndex = 0;
        AddmotorType.selectedIndex = 0;
        AddriggingType.selectedIndex = 0;
        AddmastType.selectedIndex = 0;
        $('#BuiltProfessionally').prop("disabled", false);
        $('#AddBuiltProfessionally').prop("disabled", false);
        $('#MotorType').prop("disabled", false);
        $('#AddMotorType').prop("disabled", false);
        $('#HullConfiguration').prop("disabled", false);
        $('#AddHullConfiguration').prop("disabled", false);
        $('#BuiltProfessionally').val("").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
        $('#MotorType').val("").trigger('chosen:updated');
        $('#AddMotorType').val("").trigger('chosen:updated');
        $('#HullConfiguration').val("").trigger('chosen:updated');
        $('#AddHullConfiguration').val("").trigger('chosen:updated');

        $('#AddVesselUseSection').hide('2000');
        $('#VesselUseSection').hide('2000');
    }

    else if (AddboatType1Selected == "Other") {

        AddconstructionTypeCement.classList.add("hidden");
        $('#AddRiggingTypeSection').show('2000');
        $('#AddMastTypeSection').show('2000');
       //$('#AddBoatWaterLocationSection').show('2000');
        $('#AddRegistrationSection').hide('2000');
        AddaucklandRego.classList.add("hidden");
        AddconstructionTypeRigidHi.classList.remove("hidden");
        AddconstructionTypeWood.classList.remove("hidden");
        AddconstructionTypeOther.classList.remove("hidden");
        AddboatType2Berthed.classList.remove("hidden");
        AddboatType2Moored.classList.remove("hidden");
        AddhullConfigurationCatamaran.classList.remove("hidden");
        AddhullConfigurationTrimaran.classList.remove("hidden");
        AddmotorTypeInboardPetrol.classList.remove("hidden");
        AddmotorTypeInboardDiesel.classList.remove("hidden");
        AddmotorTypeInboardOther.classList.remove("hidden");
        AddmotorTypeOutboard.classList.remove("hidden");
        AddmotorTypeNA.classList.remove("hidden");
        AddconstructionType.selectedIndex = 0;
        $('#BuiltProfessionally').prop("disabled", false);
        $('#AddBuiltProfessionally').prop("disabled", false);

        $('#MotorType').prop("disabled", false);
        $('#AddMotorType').prop("disabled", false);

        $('#HullConfiguration').prop("disabled", false);
        $('#AddHullConfiguration').prop("disabled", false);
        $('#BuiltProfessionally').val("").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
        $('#MotorType').val("").trigger('chosen:updated');
        $('#AddMotorType').val("").trigger('chosen:updated');
        $('#HullConfiguration').val("").trigger('chosen:updated');
        $('#AddHullConfiguration').val("").trigger('chosen:updated');

        $('#AddVesselUseSection').hide('2000');
        $('#VesselUseSection').hide('2000');
    }

    else {

        $('#AddaucklandRegoSection').show('2000');
        $('#AddRiggingTypeSection').show('2000');
        $('#AddMastTypeSection').show('2000');
      //  $('#AddBoatWaterLocationSection').show('2000');
        AddboatType2Berthed.classList.remove("hidden");
        AddboatType2Moored.classList.remove("hidden");
        AddconstructionTypeRigidHi.classList.remove("hidden");
        AddconstructionTypeWood.classList.remove("hidden");
        AddconstructionTypeCement.classList.remove("hidden");
        AddconstructionTypeOther.classList.remove("hidden");
        AddhullConfigurationCatamaran.classList.remove("hidden");
        AddhullConfigurationTrimaran.classList.remove("hidden");
        AddmotorTypeInboardPetrol.classList.remove("hidden");
        AddmotorTypeInboardDiesel.classList.remove("hidden");
        AddmotorTypeInboardOther.classList.remove("hidden");
        AddmotorTypeOutboard.classList.remove("hidden");
        AddmotorTypeNA.classList.remove("hidden");
        $('#BuiltProfessionally').prop("disabled", false);
        $('#AddBuiltProfessionally').prop("disabled", false);

        $('#MotorType').prop("disabled", false);
        $('#AddMotorType').prop("disabled", false);
        $('#HullConfiguration').prop("disabled", false);
        $('#AddHullConfiguration').prop("disabled", false);
        AddriggingType.selectedIndex = 0;
        AddmastType.selectedIndex = 0;
        AddconstructionType.selectedIndex = 0;

        $('#BuiltProfessionally').val("").trigger('chosen:updated');
        $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
        $('#MotorType').val("").trigger('chosen:updated');
        $('#AddMotorType').val("").trigger('chosen:updated');
        $('#HullConfiguration').val("").trigger('chosen:updated');
        $('#AddHullConfiguration').val("").trigger('chosen:updated');

        $('#AddVesselUseSection').hide('2000');
        $('#VesselUseSection').hide('2000');
        }
        excess.selectedIndex = 0;
    }

    function InsuranceAttributeSelected() {

         var InsuranceAttribute = document.getElementById("InsuranceAttributes");
        var IA = InsuranceAttribute.options[InsuranceAttribute.selectedIndex].value;
        $('#useremailSec').addClass("hidden");
        $('#UserSec').addClass("hidden");
        if (IA == "Skipper") {
            $('#SkiFirstNameSec').removeClass("hidden");
            $('#SkiLastNameSec').removeClass("hidden");
            $('#AddOrganisationType').val("Person - Individual").trigger('chosen:updated');
            $('#AddOrganisationType').prop("disabled", "disabled");
            $('#AddNPOrgNameSec').addClass("hidden");
            $('#AddAdminUserSec').addClass("hidden");
            $('#AddupdateParty').removeClass('hidden');


        } else {
            if (IA == "Private" || IA == "CoOwner" ) {
                $('#AddAdminUserSec').removeClass("hidden");
                $('#AddNPOrgNameSec').removeClass("hidden");
                $('#AddSkprExpSec').addClass("hidden");
                $('#SkiFirstNameSec').addClass("hidden");
                $('#SkiLastNameSec').addClass("hidden");
                $('#AddOrganisationType').val("").trigger('chosen:updated');
                $('#AddOrganisationType').prop("disabled", false);
                $('#AddupdateParty').addClass('hidden');


            } else {
                $('#AddAdminUserSec').addClass("hidden");
                $('#AddNPOrgNameSec').removeClass("hidden");
                $('#AddSkprExpSec').addClass("hidden");
                $('#SkiFirstNameSec').addClass("hidden");
                $('#SkiLastNameSec').addClass("hidden");
                $('#AddOrganisationType').val("").trigger('chosen:updated');
                $('#AddOrganisationType').prop("disabled", false);
                $('#AddupdateParty').removeClass('hidden');

            }
           }


    }

    function AddvesselType2Selected() {
        debugger
        var boatType2Selected = AddboatType2.options[AddboatType2.selectedIndex].value;
        var boatType1Selected = boatType1.options[boatType1.selectedIndex].value;
        console.log("You have selected: ", boatType2Selected, "Using this element: ", boatType2);
        $('#Addexcess').val('');
        $('#AddMaxSumInsured').val('');
        if (boatType2Selected == "Roadtrailer") {
            $('#AddVesselTrailer').hide('2000');
            AddboatType1Jetski.classList.remove("hidden");
            AddconstructionType.selectedIndex = 0;
            if (boatType1Selected == "Jetski") {
                AddhullConfiguration.selectedIndex = 0;
            }
            $("#AddBoatIsTrailered").val("True");
            $('#AddBoatWaterLocationSection').addClass("hidden");
            $('#AddothermarinSection').addClass("hidden");
            $('#AddBoatMooredTypeSection').addClass("hidden");
            $('#AddBoatLandLocationSection').removeClass("hidden");
            AddhasTrailer();
        }
        else if (boatType2Selected == "Stored") {
            $('#AddVesselTrailer').show('2000');
            AddboatType1Jetski.classList.remove("hidden");
            $("#AddBoatIsTrailered").val("");
            $('#AddBoatWaterLocationSection').addClass("hidden");
             $('#AddothermarinSection').addClass("hidden");
            $('#AddBoatMooredTypeSection').addClass("hidden");
            $('#AddBoatLandLocationSection').removeClass("hidden");
            AddhasTrailer();
        }
        else if (boatType2Selected == "Berthed") {
            $('#AddVesselTrailer').show('2000');
            AddboatType1Jetski.classList.add("hidden");
            $("#AddBoatIsTrailered").val("");
            $('#AddBoatWaterLocationSection').removeClass("hidden");
            $('#AddBoatMooredTypeSection').removeClass("hidden");
            $('#AddBoatLandLocationSection').addClass("hidden");
            AddhasTrailer();

        }else if (boatType2Selected == "Moored") {
            $('#AddVesselTrailer').show('2000');
            AddboatType1Jetski.classList.add("hidden");
            $("#AddBoatIsTrailered").val("");
            $('#AddBoatWaterLocationSection').removeClass("hidden");
            $('#AddBoatLandLocationSection').addClass("hidden");
            $('#AddBoatMooredTypeSection').removeClass("hidden");
            AddhasTrailer();
        }
        else {
            $('#AddVesselTrailer').show('2000');
            AddboatType1Jetski.classList.remove("hidden");
            $("#AddBoatIsTrailered").val("");
            AddhasTrailer();
        }
        excess.selectedIndex = 0;
    }



    function AddupdateExcess() {

        var boatType1Selected = AddboatType1.options[AddboatType1.selectedIndex].value;
        var boatType2Selected = AddboatType2.options[AddboatType2.selectedIndex].value;
        var MotorType = $('#AddMotorType').val();

        $('#Addexcess').val('');

        var sumInsured = document.getElementById("AddMaxSumInsured").value;
        var sumInsured = sumInsured.replace(/[^0-9\.-]+/g, "");
        var exc250 = document.getElementById("Addexcess250");
        var exc500 = document.getElementById("Addexcess500");
        var exc1000 = document.getElementById("Addexcess1000");
        var exc2000 = document.getElementById("Addexcess2000");
        if (MotorType == "NA") {
            $('#AddModifiedMotorSection').addClass("hidden");
        } else {
            $('#AddModifiedMotorSection').removeClass("hidden");
        }
        if (boatType1Selected == "Jetboat") {
                exc250.classList.add("hidden");
                exc2000.classList.add("hidden");

        }
        if (boatType1Selected == "Jetski") {
                exc250.classList.add("hidden");
                exc2000.classList.add("hidden");

        }
        else if (boatType2Selected == "Roadtrailer" || boatType2Selected == "Stored" ) {
            if (sumInsured >= 0 && sumInsured <= 100000) {
                exc2000.classList.add("hidden");
                exc250.classList.remove("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.add("hidden");
            }
            else if (sumInsured > 100000) {
                exc250.classList.add("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.remove("hidden");
                exc2000.classList.add("hidden");
            }
        }
        else if (boatType2Selected == "Moored" || boatType2Selected == "Berthed") {
            if (sumInsured >= 0 && sumInsured <= 100000) {
                exc2000.classList.add("hidden");
                exc250.classList.remove("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.add("hidden");
            }
            else if (sumInsured > 100000 && sumInsured <= 200000) {
                exc250.classList.add("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.remove("hidden");
                exc2000.classList.add("hidden");
            }
            else if (sumInsured > 200000 ) {
                exc250.classList.add("hidden");
                exc500.classList.add("hidden");
                exc1000.classList.remove("hidden");
                exc2000.classList.remove("hidden");
            }

        }
    }



    function AddhasTrailer() {

        var hasT = $('#AddBoatIsTrailered').val();
        console.log(hasT);
        if (hasT == "True") {
            $('#AddSelectTrailerSection').show('2000');
        }
        else if (hasT == "False") {


             if ($('#AddBoatType2').val() == "Roadtrailer") {

                if (confirm("Vessel Status will be changed from Road Trailer to Stored!")) {
                    $('#AddBoatType2').val('Stored');
                   $('#AddSelectTrailerSection').hide('2000');


                } else {
                    $('#AddBoatIsTrailered').val("True")
                    $('#AddSelectTrailerSection').show('2000');
                }
             } else {
                   $('#AddSelectTrailerSection').hide('2000');

              }
        }
        else {
            $('#AddSelectTrailerSection').hide('2000');

        }
    }

    function onIPaddressSelect() {
        $('#Addipeffectivedatesection').removeClass('hidden');
        $('#ipeffectivedatesection').removeClass('hidden');
    }


    function AddhideShowHullConstructionOther() {
        var hullConstructionSelected = AddconstructionType.options[AddconstructionType.selectedIndex].value;
        if (hullConstructionSelected == "Other") {
            AddhullConstructOther.classList.remove("hidden");
        }
        else {
            hullConstructOther.classList.add("hidden");
            AddotherConstructionType.value = '';
        }
    }

    function AddhideShowHullConfigurationOther() {
        var hullConfigurationSelected = AddhullConfiguration.options[AddhullConfiguration.selectedIndex].value;
        if (hullConfigurationSelected == "Other") {
            AddhullConfigurationOther.classList.remove("hidden");
        }
        else {
            hullConfigurationOther.classList.add("hidden");
            AddotherConfigurationType.value = '';
        }
    }

    function AddaddNewSkipper() {
        var selectedBoatOperator = AddboatOperator.options[AddboatOperator.selectedIndex].value;
        if (selectedBoatOperator == "add") {

            $('#addOperatorModal').show();
            AddboatOperator.selectedIndex = 0;
        }
        selectedBoatOperator = "";
    }


    function AddaddNewTrailer() {

        var selectedTrailer = AddboatTrailer.options[AddboatTrailer.selectedIndex].value;
        if (selectedTrailer == "add") {

            $('#addTrailerModal').show();
            AddboatTrailer.selectedIndex = 0;
            $('#openModal').val('#addTrailerModal');
        }
        selectedTrailer = "";

    }

    function AddaddNewLandLoc() {
        var selectedLandLoc = AddboatLandLoc.options[AddboatLandLoc.selectedIndex].value;
        if (selectedLandLoc == "add") {
            $('#addLandLocModal').show();
            boatLandLoc.selectedIndex = 0;
            $('#openModal').val('#addLandLocModal');
        }
        selectedLandLoc = "";
    }


    function ModalOUSelected() {
        var oUselect = OrgUnitModal.options[OrgUnitModal.selectedIndex].value;
        $.ajax({
        // change back once mono decides to fix
             url: '@Url.Action("OUSelected", "Services")',
             type: "POST",
             data: JSON.stringify({ OUselect: oUselect}),
             contentType: "application/json; charset=utf-8"
      })
            .done(function (data) {
                 $("#WaterLocationLocationModal").empty();
                $('#WaterLocationLocationModal').append("<option selected value=\"\"> --Select-- </option>")
                $('#WaterLocationLocationModal').trigger('chosen:updated');
                $.each(data, function (i, item) {
                    $('#WaterLocationLocationModal').append($('<option>', { value: item.locationId, text: item.street }))
                     $("#WaterLocationLocationModal [value='add']").remove();
                    $('#WaterLocationLocationModal').append($('<option>', { value: "add", text: "Add Trailer" }));
            });

    })
            .fail(function (jqXHR, textStatus) {
        alert("There was an error while trying to save the Building.");
    });
};

    function MarinaLocSelected() {
        var MarinaLocation = document.getElementById("WaterLocationMarinaLocation");
        var marinaLocation = MarinaLocation.options[MarinaLocation.selectedIndex].value;
        if (marinaLocation == "add") {
            $('#addMarinaModal').show();
        } else {
                 GetOU(marinaLocation);
        }
    }

   function GetOU(marinaloc) {
       var orgId = marinaloc;
        $.ajax({
        // change back once mono decides to fix
             url: '@Url.Action("GetOU", "Services")',
             type: "POST",
             data: $("#tab_1 :input").serialize({ json: true }),
             contentType: "application/json; charset=utf-8"
      })
            .done(function (data) {
                 $("#OrgUnit").empty();
                 $('#OrgUnit').append("<option selected value=\"\"> --Select-- </option>")
                 $('#OrgUnit').trigger('chosen:updated');
                 $("#AddOrgUnit").empty();
                 $('#AddOrgUnit').append("<option selected value=\"\"> --Select-- </option>")
                 $('#AddOrgUnit').trigger('chosen:updated');
                $.each(data, function (i, item) {
                    $('#OrgUnit').append($('<option>', { value: item.organisationalUnitId, text: item.name }))
                    $("#OrgUnit [value='add']").remove();
                    $('#OrgUnit').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#AddOrgUnit').append($('<option>', { value: item.organisationalUnitId, text: item.name }))
                    $("#AddOrgUnit [value='add']").remove();
                    $('#AddOrgUnit').append($('<option>', { value: "add", text: "Add Trailer" }));
                    $('#OrgUnit.b').val(data.vehicleId);
                    });

    })
            .fail(function (jqXHR, textStatus) {
        alert("There was an error while trying to save the Building.");
    });
};

    function OUSelected() {
                var oUselect = OrgUnit.options[OrgUnit.selectedIndex].value;
        $.ajax({
        // change back once mono decides to fix
             url: '@Url.Action("OUSelected", "Services")',
             type: "POST",
             data: JSON.stringify({ OUselect: oUselect}),
             contentType: "application/json; charset=utf-8"
      })
            .done(function (data) {
                 $("#WaterLocationLocation").empty();
                $('#WaterLocationLocation').append("<option selected value=\"\"> --Select-- </option>")
                $('#WaterLocationLocation').trigger('chosen:updated');
                $.each(data, function (i, item) {
                    $('#WaterLocationLocation').append($('<option>', { value: item.locationId, text: item.street }))
                     $("#WaterLocationLocation [value='add']").remove();
                    $('#WaterLocationLocation').append($('<option>', { value: "add", text: "Add Trailer" }));
            });
    })
            .fail(function (jqXHR, textStatus) {
        alert("There was an error while trying to save the Building.");
    });
};


      function AddOUSelected() {
          var oUselect = AddOrgUnit.options[AddOrgUnit.selectedIndex].value;
           $("#AddWaterLocationLocation").empty();
           $('#AddWaterLocationLocation').append("<option selected value=\"\"> --Select-- </option>")
           $('#AddWaterLocationLocation').trigger('chosen:updated');
        $.ajax({
        // change back once mono decides to fix
             url: '@Url.Action("OUSelected", "Services")',
             type: "POST",
             data: JSON.stringify({ OUselect: oUselect}),
             contentType: "application/json; charset=utf-8"
      })
            .done(function (data) {
                $.each(data, function (i, item) {
                      $('#AddWaterLocationLocation').append($('<option>', { value: item.locationId, text: item.street }))
                     $("#AddWaterLocationLocation [value='add']").remove();
                    $('#AddWaterLocationLocation').append($('<option>', { value: "add", text: "Add Trailer" }));
            });
    })
            .fail(function (jqXHR, textStatus) {
        alert("There was an error while trying to save the Building.");
    });
};

    function AddMarinaLocSelected() {
        var MarinaLocation = document.getElementById("AddWaterLocationMarinaLocation");
        var marinaLocation = MarinaLocation.options[MarinaLocation.selectedIndex].value;
        if (marinaLocation == "add") {
            $('#addMarinaModal').show();
        } else {
                    GetOU(marinaLocation);
        }
    }

    //function AddaddNewWaterLoc() {
    //    var selectedWaterLoc = AddboatWaterLoc.options[AddboatWaterLoc.selectedIndex].value;
    //    if (selectedWaterLoc == "add") {
    //        $('#addWaterLocModal').show();
    //        $('#openModal').val('#addWaterLocModal');
    //    }
    //    selectedWaterLoc = "";
    //}

    function AddaddNewLoc() {

        var selectedLoc = BuildingLocationModal.options[BuildingLocationModal.selectedIndex].value;
        var selectedLoc2 = AddboatLoc2.options[AddboatLoc2.selectedIndex].value;
        var selectedLoc3 = AddboatLoc3.options[AddboatLoc3.selectedIndex].value;
        if (selectedLoc == "add" || selectedLoc2 == "add" || selectedLoc3 == "add") {
            $('#addLocModal').show();
            if (selectedLoc == "add") {
                boatLoc.selectedIndex = 0;
                $('#addWaterLocModal').hide();
            }
            else if (selectedLoc2 == "add") {
                boatLoc2.selectedIndex = 0;
                $('#addLandLocModal').hide();
            }
            else {
                boatLoc3.selectedIndex = 0;
                $('#addTrailerModal').hide();
            }
        }
        selectedLoc == "";
        selectedLoc2 == "";
        selectedLoc3 == "";
    }

    var boatType1 = document.getElementById("BoatType1");
    var boatType1Jetski = document.getElementById("BoatType1Jetski");
    // BoatType 2
    var boatType2 = document.getElementById("BoatType2");
    var boatType2Berthed = document.getElementById("BoatType2Berthed");
    var boatType2Moored = document.getElementById("BoatType2Moored");
    // Construction Type & Options
    var constructionType = document.getElementById("HullConstruction");
    var constructionTypeRigidHi = document.getElementById("HullConstructionRigidHi");
    var constructionTypeWood = document.getElementById("HullConstructionWood");
    var constructionTypeCement = document.getElementById("HullConstructionCement");
    var constructionTypeOther = document.getElementById("HullConstructionOther");
    var hullConstructOther = document.getElementById("HullConstructOtherSection");
    var otherConstructionType = document.getElementById("OtherConstructionType");
    // Hull Configuration & Options
    var hullConfigSection = document.getElementById("HullConfigSection");
    var hullConfiguration = document.getElementById("HullConfiguration");
    var hullConfigurationOther = document.getElementById("HullConfigurationOther");
    var hullConfigurationCatamaran = document.getElementById("HullConfigurationCatamaran");
    var hullConfigurationTrimaran = document.getElementById("HullConfigurationTrimaran");
    var hullConfigurationOther = document.getElementById("HullConfigurationOtherSection");
    var otherConfigurationType = document.getElementById("OtherHullConfiguration");
    // Vessel Trailer
    var vesselTrailer = document.getElementById("VesselTrailer");
    // Rigging Type & Options
    var riggingTypeSection = document.getElementById("RiggingTypeSection");
    var riggingType = document.getElementById("RiggingType");
    // Mast Type & Options
    var mastTypeSection = document.getElementById("MastTypeSection");
    var mastType = document.getElementById("MastType");
    // Motor Type
    var motorType = document.getElementById("MotorType");
    var motorTypeInboardPetrol = document.getElementById("MotorTypeInboardPetrol");
    var motorTypeInboardDiesel = document.getElementById("MotorTypeInboardDiesel");
    var motorTypeInboardOther = document.getElementById("MotorTypeInboardOther");
    var motorTypeOutboard = document.getElementById("MotorTypeOutboard");
    var motorTypeNA = document.getElementById("MotorTypeNA");
    //Jetski Auckland Rego
    var aucklandRego = document.getElementById("aucklandRegoSection");
    //Water Location Section
    var waterLoc = document.getElementById("BoatWaterLocationSection");
    // Excess
    var excess = document.getElementById("excess");
    // Add Skipper, Trailer etc...
    var boatOperator = document.getElementById("BoatOperator");
    var boatLandLoc = document.getElementById("BoatLandLocation");
    var boatWaterLoc = document.getElementById("BoatWaterLocation");
    var AddboatWaterLoc = document.getElementById("AddBoatWaterLocation");

    var boatLoc = document.getElementById("WaterLocationLocationModal");
    var boatLoc2 = document.getElementById("BuildingLocationModal");
    var boatLoc3 = document.getElementById("VehicleLocationModal");
    var openModal = document.getElementById("openModal");
    var boatUse = document.getElementById("BoatUse");
    var boatTrailer = document.getElementById("BoatTrailer");
    // Vessel Use Modal Elements
    var vesselUseSectionLive = '#livingUseSection';
    var vesselUseSectionRace = '#racingUseSection';
    var vesselUseHairline = '#boutUseCategoryHairline';
    var vesselUseHairline2 = '#boutUseCategoryHairline2';
    var vesselUseAdditionalNotes = '#boatUseAdditionalNotesModal';
    // Vessel Trailer Modal Elements
    var vesselTrailerVIN = '#VesselTrailerVIN';
    var vesselTrailerChassis = '#VesselTrailerChassis';
    var vesselTrailerEffective = '#VesselTrailerEffective';
    var vesselTrailerCease = '#VesselTrailerCease';
    var vesselTrailerCeaseReason = '#VesselTrailerCeaseReason';
    var vesselTrailerYear = '#VesselTrailerYear';
    var vesselTrailerMake = '#VesselTrailerMake';
    var vesselTrailerModel = '#VesselTrailerModel';
    //var vesselTrailerRevalidate = '#VesselTrailerRevalidate';
    var vesselTrailerMV = '#VesselTrailerMV';
    var vesselTrailerLoc = '#VesselTrailerLoc';
    var vesselTrailerIP = '#VesselTrailerIP';
    var vesselTrailerNotes = '#VesselTrailerNotes';
    var adminUser = '#AdminUser';

    function vesselType1Selected() {

        var boatType1Selected = boatType1.options[boatType1.selectedIndex].value;
        console.log(boatType1Selected);
        $('#excess').val('');
        $('#MaxSumInsured').val('');

        if (boatType1Selected == "Powerboats") {
            $('#RiggingTypeSection').hide('2000');
            $('#MastTypeSection').hide('2000');
            constructionTypeCement.classList.add("hidden");
                        //    $('#BoatLandLocationSection').hide('2000');
            //$('#BoatWaterLocationSection').show('2000');
            $('#RegistrationSection').hide('2000');
            aucklandRego.classList.add("hidden");
            constructionTypeRigidHi.classList.remove("hidden");
            constructionTypeWood.classList.remove("hidden");
            constructionTypeOther.classList.remove("hidden");
            boatType2Berthed.classList.remove("hidden");
            boatType2Moored.classList.remove("hidden");
            hullConfigurationCatamaran.classList.remove("hidden");
            hullConfigurationTrimaran.classList.remove("hidden");
            motorTypeInboardPetrol.classList.remove("hidden");
            motorTypeInboardDiesel.classList.remove("hidden");
            motorTypeInboardOther.classList.remove("hidden");
            motorTypeOutboard.classList.remove("hidden");
            motorTypeNA.classList.remove("hidden");
            //waterLoc.classList.remove("hidden");

            riggingType.selectedIndex = 0;
            mastType.selectedIndex = 0;
            constructionType.selectedIndex = 0;
            $('#BuiltProfessionally').prop("disabled", false);
            $('#AddBuiltProfessionally').prop("disabled", false);

            $('#MotorType').prop("disabled", false);
            $('#AddMotorType').prop("disabled", false);

            $('#HullConfiguration').prop("disabled", false);
            $('#AddHullConfiguration').prop("disabled", false);
            $('#BuiltProfessionally').val("").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
            $('#MotorType').val("").trigger('chosen:updated');
            $('#AddMotorType').val("").trigger('chosen:updated');
            $('#HullConfiguration').val("").trigger('chosen:updated');
            $('#AddHullConfiguration').val("").trigger('chosen:updated');

            $('#AddVesselUseSection').hide('2000');
            $('#VesselUseSection').hide('2000');

        }

        else if (boatType1Selected == "CruisersandLaunches") {

            $('#RiggingTypeSection').hide('2000');
            $('#MastTypeSection').hide('2000');
            $('#RegistrationSection').hide('2000');
            constructionTypeCement.classList.add("hidden");
           // $('#BoatWaterLocationSection').show('2000');
            constructionTypeRigidHi.classList.remove("hidden");
            constructionTypeWood.classList.remove("hidden");
            constructionTypeOther.classList.remove("hidden");
            boatType2Berthed.classList.remove("hidden");
            boatType2Moored.classList.remove("hidden");
            hullConfigurationCatamaran.classList.remove("hidden");
            hullConfigurationTrimaran.classList.remove("hidden");
            motorTypeInboardPetrol.classList.remove("hidden");
            motorTypeInboardDiesel.classList.remove("hidden");
            motorTypeInboardOther.classList.remove("hidden");
            motorTypeOutboard.classList.remove("hidden");
            motorTypeNA.classList.remove("hidden");
            aucklandRego.classList.add("hidden");

            riggingType.selectedIndex = 0;
            mastType.selectedIndex = 0;
            constructionType.selectedIndex = 0;

            $('#BuiltProfessionally').prop("disabled", false);
            $('#AddBuiltProfessionally').prop("disabled", false);

            $('#MotorType').prop("disabled", false);
            $('#AddMotorType').prop("disabled", false);

            $('#HullConfiguration').prop("disabled", false);
            $('#AddHullConfiguration').prop("disabled", false);
            $('#AddVesselUseSection').show('2000');
            $('#VesselUseSection').show('2000');
            $('#BuiltProfessionally').val("").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
            $('#MotorType').val("").trigger('chosen:updated');
            $('#AddMotorType').val("").trigger('chosen:updated');
            $('#HullConfiguration').val("").trigger('chosen:updated');
            $('#AddHullConfiguration').val("").trigger('chosen:updated');

        }

        else if (boatType1Selected == "YachtsandCatamarans") {

            $('#RiggingTypeSection').show('2000');
            $('#MastTypeSection').show('2000');
           // $('#BoatWaterLocationSection').show('2000');
            $('#RegistrationSection').hide('2000');
            aucklandRego.classList.add("hidden");
            constructionTypeCement.classList.remove("hidden");
            boatType2Berthed.classList.remove("hidden");
            boatType2Moored.classList.remove("hidden");
            hullConfigurationCatamaran.classList.remove("hidden");
            hullConfigurationTrimaran.classList.remove("hidden");
            motorTypeInboardPetrol.classList.remove("hidden");
            motorTypeInboardDiesel.classList.remove("hidden");
            motorTypeInboardOther.classList.remove("hidden");
            motorTypeOutboard.classList.remove("hidden");
            motorTypeNA.classList.remove("hidden");
            constructionTypeRigidHi.classList.remove("hidden");
            constructionTypeWood.classList.remove("hidden");
            constructionTypeOther.classList.remove("hidden");

            $('#BuiltProfessionally').prop("disabled", false);
            $('#AddBuiltProfessionally').prop("disabled", false);

            $('#MotorType').prop("disabled", false);
            $('#AddMotorType').prop("disabled", false);

            $('#HullConfiguration').prop("disabled", false);
            $('#AddHullConfiguration').prop("disabled", false);
            $('#AddVesselUseSection').show('2000');
            $('#VesselUseSection').show('2000');
            $('#BuiltProfessionally').val("").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
            $('#MotorType').val("").trigger('chosen:updated');
            $('#AddMotorType').val("").trigger('chosen:updated');
            $('#HullConfiguration').val("").trigger('chosen:updated');
            $('#AddHullConfiguration').val("").trigger('chosen:updated');

        }

        else if (boatType1Selected == "Jetski") {

            $('#RiggingTypeSection').hide('2000');
            $('#MastTypeSection').hide('2000');
           // $('#BoatWaterLocationSection').hide('2000');
            $('#RegistrationSection').show('2000');
            boatType2Berthed.classList.add("hidden");
            boatType2Moored.classList.add("hidden");
            constructionTypeCement.classList.add("hidden");
            constructionTypeRigidHi.classList.add("hidden");
            constructionTypeWood.classList.add("hidden");
            constructionTypeOther.classList.add("hidden");
            hullConfigurationCatamaran.classList.add("hidden");
            hullConfigurationTrimaran.classList.add("hidden");
            motorTypeInboardPetrol.classList.add("hidden");
            motorTypeInboardDiesel.classList.add("hidden");
            motorTypeInboardOther.classList.add("hidden");
            motorTypeOutboard.classList.add("hidden");
            motorTypeNA.classList.add("hidden");
            aucklandRego.classList.remove("hidden");

            boatType2.selectedIndex = 0;
            constructionType.selectedIndex = 0;
            hullConfiguration.selectedIndex = 0;
            riggingType.selectedIndex = 0;
            mastType.selectedIndex = 0;
            motorType.selectedIndex = 0;
            boatWaterLoc.selectedIndex = 0;

            $('#BuiltProfessionally').val("True").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("True").trigger('chosen:updated');
            $('#MotorType').val("Jet").trigger('chosen:updated');
            $('#AddMotorType').val("Jet").trigger('chosen:updated');
            $('#HullConfiguration').val("Mono").trigger('chosen:updated');
            $('#AddHullConfiguration').val("Mono").trigger('chosen:updated');

            $('#BuiltProfessionally').prop("disabled", "disabled");
            $('#AddBuiltProfessionally').prop("disabled", "disabled");

            $('#MotorType').prop("disabled", "disabled");
            $('#AddMotorType').prop("disabled", "disabled");
            $('#HullConfiguration').prop("disabled", "disabled");
            $('#AddHullConfiguration').prop("disabled", "disabled");

            $('#AddVesselUseSection').hide('2000');
            $('#VesselUseSection').hide('2000');
        }

        else if (boatType1Selected == "Jetboat") {
            constructionTypeCement.classList.add("hidden");
            motorTypeInboardPetrol.classList.add("hidden");
            motorTypeInboardDiesel.classList.add("hidden");
            motorTypeInboardOther.classList.add("hidden");
            motorTypeOutboard.classList.add("hidden");
            motorTypeNA.classList.add("hidden");
            aucklandRego.classList.add("hidden");
            $('#RiggingTypeSection').hide('2000');
            $('#MastTypeSection').hide('2000');
           // $('#BoatWaterLocationSection').hide('2000');
            $('#RegistrationSection').hide('2000');

            boatType2Berthed.classList.add("hidden");
            boatType2Moored.classList.add("hidden");
            constructionTypeRigidHi.classList.remove("hidden");
            constructionTypeWood.classList.remove("hidden");
            constructionTypeOther.classList.remove("hidden");
            hullConfigurationCatamaran.classList.remove("hidden");
            hullConfigurationTrimaran.classList.remove("hidden");
         //   $('#BoatWaterLocationSection').show('2000');
            constructionType.selectedIndex = 0;
            motorType.selectedIndex = 0;
            riggingType.selectedIndex = 0;
            mastType.selectedIndex = 0;

            $('#BuiltProfessionally').prop("disabled", false);
            $('#AddBuiltProfessionally').prop("disabled", false);

            $('#MotorType').prop("disabled", false);
            $('#AddMotorType').prop("disabled", false);

            $('#HullConfiguration').prop("disabled", false);
            $('#AddHullConfiguration').prop("disabled", false);
            $('#BuiltProfessionally').val("").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
            $('#MotorType').val("").trigger('chosen:updated');
            $('#AddMotorType').val("").trigger('chosen:updated');
            $('#HullConfiguration').val("").trigger('chosen:updated');
            $('#AddHullConfiguration').val("").trigger('chosen:updated');

            $('#AddVesselUseSection').hide('2000');
            $('#VesselUseSection').hide('2000');

        }

        else if (boatType1Selected == "Other") {
            constructionTypeCement.classList.add("hidden");
            $('#RiggingTypeSection').show('2000');
            $('#MastTypeSection').show('2000');
         //   $('#BoatWaterLocationSection').show('2000');
            $('#RegistrationSection').hide('2000');
            aucklandRego.classList.add("hidden");
            constructionTypeRigidHi.classList.remove("hidden");
            constructionTypeWood.classList.remove("hidden");
            constructionTypeOther.classList.remove("hidden");
            boatType2Berthed.classList.remove("hidden");
            boatType2Moored.classList.remove("hidden");
            hullConfigurationCatamaran.classList.remove("hidden");
            hullConfigurationTrimaran.classList.remove("hidden");
            motorTypeInboardPetrol.classList.remove("hidden");
            motorTypeInboardDiesel.classList.remove("hidden");
            motorTypeInboardOther.classList.remove("hidden");
            motorTypeOutboard.classList.remove("hidden");
            motorTypeNA.classList.remove("hidden");
            constructionType.selectedIndex = 0;
            $('#BuiltProfessionally').prop("disabled", false);
            $('#AddBuiltProfessionally').prop("disabled", false);

            $('#MotorType').prop("disabled", false);
            $('#AddMotorType').prop("disabled", false);

            $('#HullConfiguration').prop("disabled", false);
            $('#AddHullConfiguration').prop("disabled", false);
            $('#BuiltProfessionally').val("").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
            $('#MotorType').val("").trigger('chosen:updated');
            $('#AddMotorType').val("").trigger('chosen:updated');
            $('#HullConfiguration').val("").trigger('chosen:updated');
            $('#AddHullConfiguration').val("").trigger('chosen:updated');
            $('#AddVesselUseSection').hide('2000');
            $('#VesselUseSection').hide('2000');
        }
        else {
            $('#aucklandRegoSection').show('2000');
            $('#RiggingTypeSection').show('2000');
            $('#MastTypeSection').show('2000');
         //   $('#BoatWaterLocationSection').show('2000');
            boatType2Berthed.classList.remove("hidden");
            boatType2Moored.classList.remove("hidden");
            constructionTypeRigidHi.classList.remove("hidden");
            constructionTypeWood.classList.remove("hidden");
            constructionTypeCement.classList.remove("hidden");
            constructionTypeOther.classList.remove("hidden");
            hullConfigurationCatamaran.classList.remove("hidden");
            hullConfigurationTrimaran.classList.remove("hidden");
            motorTypeInboardPetrol.classList.remove("hidden");
            motorTypeInboardDiesel.classList.remove("hidden");
            motorTypeInboardOther.classList.remove("hidden");
            motorTypeOutboard.classList.remove("hidden");
            motorTypeNA.classList.remove("hidden");
            riggingType.selectedIndex = 0;
            mastType.selectedIndex = 0;
            constructionType.selectedIndex = 0;
            $('#BuiltProfessionally').prop("disabled", false);
            $('#AddBuiltProfessionally').prop("disabled", false);
            $('#MotorType').prop("disabled", false);
            $('#AddMotorType').prop("disabled", false);
            $('#HullConfiguration').prop("disabled", false);
            $('#AddHullConfiguration').prop("disabled", false);

            $('#BuiltProfessionally').val("").trigger('chosen:updated');
            $('#AddBuiltProfessionally').val("").trigger('chosen:updated');
            $('#MotorType').val("").trigger('chosen:updated');
            $('#AddMotorType').val("").trigger('chosen:updated');
            $('#HullConfiguration').val("").trigger('chosen:updated');
            $('#AddHullConfiguration').val("").trigger('chosen:updated');
            $('#AddVesselUseSection').hide('2000');
            $('#VesselUseSection').hide('2000');
        }
        excess.selectedIndex = 0;
    }

    function vesselType2Selected() {
        var boatType2Selected = boatType2.options[boatType2.selectedIndex].value;
        var boatType1Selected = boatType1.options[boatType1.selectedIndex].value;

        console.log("You have selected: ", boatType2Selected, "Using this element: ", boatType2);
        $('#excess').val('');
        $('#MaxSumInsured').val('');
        if (boatType2Selected == "Roadtrailer") {

            //$('#VesselTrailer').hide('2000');
            boatType1Jetski.classList.remove("hidden");
            constructionType.selectedIndex = 0;
            //if (boatType1Selected == "Jetski") {
            //    hullConfiguration.selectedIndex = 0;
            //}
            $("#BoatIsTrailered").val("True");
            $('#BoatWaterLocationSection').addClass("hidden");
            $('#othermarinSection').addClass("hidden");
            $('#BoatMooredTypeSection').addClass("hidden");
            $('#BoatLandLocationSection').removeClass("hidden");
            hasTrailer();
        }

        else if (boatType2Selected == "Stored") {
            $('#VesselTrailer').show('2000');
            boatType1Jetski.classList.remove("hidden");
            $("#BoatIsTrailered").val("");
            $('#BoatWaterLocationSection').addClass("hidden");
             $('#othermarinSection').addClass("hidden");
            $('#BoatMooredTypeSection').addClass("hidden");
            $('#BoatLandLocationSection').removeClass("hidden");
            hasTrailer();
}

        else if (boatType2Selected == "Berthed") {
            $('#VesselTrailer').show('2000');
            boatType1Jetski.classList.add("hidden");
            $("#BoatIsTrailered").val("");
            $('#BoatWaterLocationSection').removeClass("hidden");
            $('#BoatMooredTypeSection').removeClass("hidden");
            $('#BoatLandLocationSection').addClass("hidden");
            hasTrailer();
}
        else if (boatType2Selected == "Moored") {
            $('#VesselTrailer').show('2000');
            boatType1Jetski.classList.add("hidden");
            $("#BoatIsTrailered").val("");
            $('#BoatWaterLocationSection').removeClass("hidden");
            $('#BoatMooredTypeSection').removeClass("hidden");
            $('#BoatLandLocationSection').addClass("hidden");

            hasTrailer();
                }
        else {
            $('#VesselTrailer').show('2000');
            boatType1Jetski.classList.remove("hidden");
            $("#BoatIsTrailered").val("");
            hasTrailer();
             }
               excess.selectedIndex = 0;
    }

    function updateExcess() {

        var boatType1Selected = boatType1.options[boatType1.selectedIndex].value;
        var boatType2Selected = boatType2.options[boatType2.selectedIndex].value;
        var MotorType = $('#MotorType').val();
        $('#excess').val('');
        var sumInsured = document.getElementById("MaxSumInsured").value;
         var sumInsured = sumInsured.replace(/[^0-9\.-]+/g, "");

        var exc250 = document.getElementById("excess250");
        var exc500 = document.getElementById("excess500");
        var exc1000 = document.getElementById("excess1000");
        var exc2000 = document.getElementById("excess2000");
        if (MotorType == "NA") {
            $('#AddModifiedMotorSection').addClass("hidden");
        } else {
            $('#AddModifiedMotorSection').removeClass("hidden");
        }
        if (boatType1Selected == "Jetboat") {
                exc250.classList.add("hidden");
                exc2000.classList.add("hidden");

        }
        if (boatType1Selected == "Jetski") {
                exc250.classList.add("hidden");
                exc2000.classList.add("hidden");

        }
        else if (boatType2Selected == "Roadtrailer" || boatType2Selected == "Stored" ) {
            if (sumInsured >= 0 && sumInsured <= 100000) {
                exc2000.classList.add("hidden");
                exc250.classList.remove("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.add("hidden");
            }
            else if (sumInsured > 100000) {
                exc250.classList.add("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.remove("hidden");
                exc2000.classList.add("hidden");
            }
        }
        else if (boatType2Selected == "Moored" || boatType2Selected == "Berthed") {
            if (sumInsured >= 0 && sumInsured <= 100000) {
                exc2000.classList.add("hidden");
                exc250.classList.remove("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.add("hidden");
            }
            else if (sumInsured > 100000 && sumInsured <= 200000) {
                exc250.classList.add("hidden");
                exc500.classList.remove("hidden");
                exc1000.classList.remove("hidden");
                exc2000.classList.add("hidden");
            }
            else if (sumInsured > 200000 ) {
                exc250.classList.add("hidden");
                exc500.classList.add("hidden");
                exc1000.classList.remove("hidden");
                exc2000.classList.remove("hidden");
            }

        }
    }

    function hideShowHullConstructionOther() {
        var hullConstructionSelected = constructionType.options[constructionType.selectedIndex].value;
        if (hullConstructionSelected == "Other") {
            hullConstructOther.classList.remove("hidden");

        }
        else {
            hullConstructOther.classList.add("hidden");
            otherConstructionType.value = '';
        }
    }

    function hideShowHullConfigurationOther() {
        var hullConfigurationSelected = hullConfiguration.options[hullConfiguration.selectedIndex].value;
        if (hullConfigurationSelected == "Other") {
            hullConfigurationOther.classList.remove("hidden");
        }
        else {
            hullConfigurationOther.classList.add("hidden");
            otherConfigurationType.value = '';
        }
    }

    function addNewSkipper() {
        var selectedBoatOperator = boatOperator.options[boatOperator.selectedIndex].value;
        if (selectedBoatOperator == "add") {
            $('#addOperatorModal').show();
            boatOperator.selectedIndex = 0;
        }
        selectedBoatOperator = "";
    }

    function addNewTrailer() {

        var selectedTrailer = boatTrailer.options[boatTrailer.selectedIndex].value;
        if (selectedTrailer == "add") {
            $('#addTrailerModal').show();
            boatTrailer.selectedIndex = 0;
            $('#openModal').val('#addTrailerModal');
        }
        selectedTrailer = "";

    }

    function clearAddRegTrailerModal() {
        $(vesselTrailerVIN).hide();
        $(vesselTrailerChassis).hide();
        $(vesselTrailerEffective).hide();
        $(vesselTrailerCease).hide();
        $(vesselTrailerCeaseReason).hide();
        $(vesselTrailerYear).hide();
        $(vesselTrailerMake).hide();
        $(vesselTrailerModel).hide();
        $(vesselTrailerMV).hide();
        $(vesselTrailerLoc).hide();
        $(vesselTrailerNotes).hide();
        $('#trailerModalHairline').hide();
        $('#trailerModalHairline2').hide();
        $('#trailerModalHairline4').hide();
        $('#YearModal').attr("readonly", true);
        $('#MakeModal').attr("readonly", true);
        $('#VehicleModelModal').attr("readonly", true);
    }

    function addNewLandLoc() {
        var selectedLandLoc = boatLandLoc.options[boatLandLoc.selectedIndex].value;
        if (selectedLandLoc == "add") {
            $('#addLandLocModal').show();
            boatLandLoc.selectedIndex = 0;
            $('#openModal').val('#addLandLocModal');
        }
        selectedLandLoc = "";
    }

    function addNewWaterLoc() {

        var selectedWaterLoc = boatWaterLoc.options[boatWaterLoc.selectedIndex].value;
        if (selectedWaterLoc == "add") {
            $('#othermarinSection').removeClass('hidden');
            $('#BoatMooredTypeSection').removeClass('hidden');

            $("#MooredType").find('option').not(':selected').remove();
             if (!($('#MooredType option:selected'))) {
                 $('#MooredType').append("<option selected value=\"\"> --Select-- </option>");
                }
            $('#MooredType').trigger('chosen:updated');
            $('#MooredType').append("<option  value=\"Berthed\"> Berthed </option>")
            $('#MooredType').append("<option  value=\"Pile\"> Pile </option>")
            $('#MooredType').append("<option  value=\"Swing\"> Swing </option>")

        } else {
            GetMooredType(selectedWaterLoc);
            $('#othermarinSection').addClass('hidden');

        }
       // selectedWaterLoc = "";
    }

     function AddaddNewWaterLoc() {

        var AddSelectedWaterLoc = AddboatWaterLoc.options[AddboatWaterLoc.selectedIndex].value;;
         if (AddSelectedWaterLoc == "add") {
             $('#AddothermarinSection').removeClass('hidden');
             $('#AddBoatMooredTypeSection').removeClass('hidden');
             $("#AddMooredType").empty();
             $('#AddMooredType').append("<option selected value=\"\"> --Select-- </option>")
             $('#AddMooredType').trigger('chosen:updated');
             $('#AddMooredType').append("<option  value=\"Berthed\"> Berthed </option>")
             $('#AddMooredType').append("<option  value=\"Pile\"> Pile </option>")
             $('#AddMooredType').append("<option  value=\"Swing\"> Swing </option>")

        } else {
             GetMooredType(AddSelectedWaterLoc);
                         $('#AddothermarinSection').addClass('hidden');

        }
       // selectedWaterLoc = "";
    }

    function GetMooredType(othermarinaname) {
         var orgId = othermarinaname;

        $('#getMooredModal').show();
         var postData = { OrgID: orgId};

        $.ajax({
        // change back once mono decides to fix
             url: '@Url.Action("GetMooredType", "Services")',
             type: "POST",
             data: postData,
             //contentType: "application/json; charset=utf-8"
      })
            .done(function (data) {
                $('#BoatMooredTypeSection').removeClass('hidden');
                $('#AddBoatMooredTypeSection').removeClass('hidden');
                $("#MooredType").find('option').not(':selected').remove();
                $("#AddMooredType").empty();
                $('#AddMooredType').append("<option selected value=\"\"> --Select-- </option>");
                $('#AddMooredType').trigger('chosen:updated');
                if (!($('#MooredType option:selected'))) {
                    $('#MooredType').append("<option selected value=\"\"> --Select-- </option>");
                }
                $('#getMooredModal').hide();
                $('#MooredType').trigger('chosen:updated');
                $.each(data, function (i, item) {
                    $('#getMooredModal').hide();
                    $('#AddMooredType').append($('<option>', { value: item.value, text: item.text }));
                    $('#MooredType').append($('<option>', { value: item.value, text: item.text }));
                });
            })
            .fail(function (jqXHR, textStatus) {
                $('#BoatMooredTypeSection').removeClass('hidden');
                $('#AddBoatMooredTypeSection').removeClass('hidden');
                $("#MooredType").find('option').not(':selected').remove();
                $("#AddMooredType").empty();
                $('#AddMooredType').append("<option selected value=\"\"> --Select-- </option>");
                $('#AddMooredType').trigger('chosen:updated');
                if (!($('#MooredType option:selected'))) {
                    $('#MooredType').append("<option selected value=\"\"> --Select-- </option>");
                }
                $('#MooredType').append($('<option>', { value: "Berthed", text: "Berthed" }));
                $('#MooredType').append($('<option>', { value: "Pile", text: "Pile" }));
                $('#MooredType').append($('<option>', { value: "Swing", text: "Swing" }));
                $('#MooredType').trigger('chosen:updated');
                $('#getMooredModal').hide();
            });
    };

    function addNewLoc() {

        var selectedLoc2 = boatLoc2.options[boatLoc2.selectedIndex].value;
        if (selectedLoc2 == "add") {
            $('#addLocModal').show();
            $('#addLandLocModal').hide();
            boatLoc2.selectedIndex = 0;
        }
        selectedLoc2 == "";
    }

    function addNewTrailerLoc() {

        var selectedLoc3 = boatLoc3.options[boatLoc3.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            $('#addTrailerModal').hide();
          boatLoc3.selectedIndex = 0;
        }
        selectedLoc3 == "";
    }

     function addTrailerLoc() {

        var VehicleLocation =  document.getElementById("VehicleLocation");

        var selectedLoc3 = VehicleLocation.options[VehicleLocation.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            VehicleLocation.selectedIndex = 0;
            $('#openModal').val('Trailer');
        }
    }

      function AddaddTrailerLoc() {

        var VehicleLocation =  document.getElementById("AddVehicleLocation");

        var selectedLoc3 = VehicleLocation.options[VehicleLocation.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            VehicleLocation.selectedIndex = 0;
                        $('#openModal').val('addTrailer');

        }
    }

     function addLandLoc() {

        var VehicleLocation =  document.getElementById("BuildingLocation");

        var selectedLoc3 = VehicleLocation.options[VehicleLocation.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            VehicleLocation.selectedIndex = 0;
            $('#openModal').val('Land');

        }
    }
     function AddaddLandLoc() {

        var VehicleLocation =  document.getElementById("AddBuildingLocation");

        var selectedLoc3 = VehicleLocation.options[VehicleLocation.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            VehicleLocation.selectedIndex = 0;
            $('#openModal').val('addLand');

        }
    }
        function addPlantLoc() {

        var VehicleLocation =  document.getElementById("MotorLocation");

        var selectedLoc3 = VehicleLocation.options[VehicleLocation.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            VehicleLocation.selectedIndex = 0;
            $('#openModal').val('Plant');

        }
    }

        function AddaddPlantLoc() {

        var VehicleLocation =  document.getElementById("AddMotorLocation");

        var selectedLoc3 = VehicleLocation.options[VehicleLocation.selectedIndex].value;
        if (selectedLoc3 =="add") {
            $('#addLocModal').show();
            VehicleLocation.selectedIndex = 0;
            $('#openModal').val('addPlant');

        }
    }

    function closeLocModal() {

       // if ($('#addLandLocModal').hasClass('in') || $('#addTrailerModal').hasClass('in')) {
        var opMod = $(openModal).val();
        $(opMod).show();


    }

    function addNewInterestedParties() {
        $('#addInterestedParties').show();

        selectedBoatUse = "";
    }

    function addNewBoatUse() {
            var AddboatType1Selected = AddboatType1.options[AddboatType1.selectedIndex].value;
            var boatType1Selected = boatType1.options[boatType1.selectedIndex].value;
        if (AddboatType1Selected == "YachtsandCatamarans" || boatType1Selected == "YachtsandCatamarans") {

            $('#addBoatUseModal').show();
            $('#Race').removeClass("hidden");
            $('#Both').removeClass("hidden");
            $('#Neither').removeClass("hidden");
            $('#racingUseSection').removeClass("hidden");

        } else {
            $('#addBoatUseModal').show();
            $('#Race').addClass("hidden");
            $('#Both').addClass("hidden");
            $('#Neither').removeClass("hidden");
             $('#racingUseSection').addClass("hidden");

        }
            boutUseCategoryUpdated();
        selectedBoatUse = "";
    }



    function addNewParty() {
        $('#addInterestedPartyModal').show();
        InterestedPartyUpdated();
        selectedBoatUse = "";
    }

    function vesselUseCategory() {
        var boatusecategory = document.getElementById("BoatUseCategory");
        var selectedBoatUseCategory = boatusecategory.options[boatusecategory.selectedIndex].value;
        var boatUseLiveNotesSection = document.getElementById("BoatUseLiveNotesSection");
        var SpinnakersSection = document.getElementById("spinnakersSection")
        var raceCategorySection = document.getElementById("RaceCategorySection")
        var boatUseRaceNotesSection = document.getElementById("BoatUseRaceNotesSection")
        if (selectedBoatUseCategory == "LiveOnBoard") {
            $(boatUseLiveNotesSection).show('2000');
            $(SpinnakersSection).hide();
            $(raceCategorySection).hide();
            $(boatUseRaceNotesSection).hide();
        } else if (selectedBoatUseCategory == "Race") {
            $(raceCategorySection).show('2000');
            $(boatUseLiveNotesSection).hide();
            $(SpinnakersSection).show('2000');
            $(boatUseRaceNotesSection).show('2000');
            $(boatUseLiveNotesSection).hide();

        }
    }

    function AddvesselUseCategory() {
        var boatusecategory = document.getElementById("AddBoatUseCategory");
        var selectedBoatUseCategory = boatusecategory.options[boatusecategory.selectedIndex].value;
        var boatUseLiveNotesSection = document.getElementById("AddBoatUseLiveNotesSection");
        var SpinnakersSection = document.getElementById("AddspinnakersSection")
        var raceCategorySection = document.getElementById("AddRaceCategorySection")
        var boatUseRaceNotesSection = document.getElementById("AddBoatUseRaceNotesSection")
        if (selectedBoatUseCategory == "LiveOnBoard") {

            $(boatUseLiveNotesSection).show('2000');
            $(SpinnakersSection).hide();
            $(raceCategorySection).hide();
            $(boatUseRaceNotesSection).hide();

        } else if (selectedBoatUseCategory == "Race") {
            $(raceCategorySection).show('2000');
            $(boatUseLiveNotesSection).hide();
            $(SpinnakersSection).show('2000');
            $(boatUseRaceNotesSection).show('2000');
            $(boatUseLiveNotesSection).hide();
        }

    }

    function AdminUpdated() {
        var AdminUser = $('#AdminSection');
        var selectedIsAdmin = $('input[name=IsAdmin]:checked').val();
        if (selectedIsAdmin == "Yes") {
            $('#AdminSection' + " :input").val("");
            AdminUser.addClass('hidden');
        } else if (selectedIsAdmin == "No") {
            $('#AdminSection' + " :input").val("");
            AdminUser.removeClass('hidden');
        }
    }

    function AddAdminUpdated() {

        var AdminUser = $('#AdminSectionAdd');
        var selectedIsAdmin = $('input[name=AddIsAdmin]:checked').val();
        if (selectedIsAdmin == "Yes") {
            $('#AddupdateParty').removeClass('hidden');
            $('#AdminSectionAdd' + " :input").val("");
            AdminUser.addClass('hidden');
        } else if (selectedIsAdmin == "No") {
            $('#AdminSectionAdd' + " :input").val("");
            $('#useremailSec').removeClass('hidden');
            AdminUser.removeClass('hidden');
        }
    }

    function InterestedPartyUpdated() {
        var interestedPartyFinancial = $('#FinancialSection');
        var interestedPartyPrivate = $('#PrivateSection');
        var selectedBoatUseCategory = $('input[name=InsuranceAttribute]:checked').val();

        if (selectedBoatUseCategory == "Financial") {
            interestedPartyFinancial.removeClass('hidden');
            interestedPartyPrivate.addClass('hidden');
            $('#adminUser').hide();
            $('#vesselUseHairline').show('2000');
        }

        else if (selectedBoatUseCategory == "Private") {
            $(interestedPartyFinancial).removeClass('hidden');
            $(interestedPartyPrivate).removeClass('hidden');
            $(vesselUseHairline).removeClass('hidden');
            $(adminUser).removeClass('hidden');
        }

        else if (selectedBoatUseCategory == "CoOwner") {
             $(interestedPartyFinancial).removeClass('hidden');
            $(interestedPartyPrivate).removeClass('hidden');
            $(vesselUseHairline).removeClass('hidden');
            $(adminUser).removeClass('hidden');


        }
        else {
            console.log("Missed");
        }
    }

    function boutUseCategoryUpdated() {

        var selectedBoatUseCategory = $('input[name=BoatUseCategory]:checked').val();
        if (selectedBoatUseCategory == "LiveOnBoard") {
            $(vesselUseSectionLive).show('2000');
            $(vesselUseAdditionalNotes).show('2000');
            $(vesselUseSectionRace).hide();
            $(vesselUseHairline).hide();
            $(vesselUseHairline2).show('2000');
        }

        else if (selectedBoatUseCategory == "Race") {
            $(vesselUseSectionLive).hide();
            $(vesselUseSectionRace).show('2000');
            $(vesselUseHairline).show('2000');
            $(vesselUseAdditionalNotes).show('2000');
            $(vesselUseHairline2).show('2000');
        }

        else if (selectedBoatUseCategory == "Both") {
            $(vesselUseSectionRace).show('2000');
            $(vesselUseSectionLive).show('2000');
            $(vesselUseHairline).show('2000');
            $(vesselUseAdditionalNotes).show('2000');
            $(vesselUseHairline2).show('2000');
        }
         else if (selectedBoatUseCategory == "Neither") {
            $(vesselUseSectionRace).hide();
            $(vesselUseSectionLive).hide();
            $(vesselUseHairline).hide();
            $(vesselUseAdditionalNotes).hide();
            $(vesselUseHairline2).hide();
        }
        else {
            console.log("Missed");
        }

        selectedBoatUseCategory = "";
    }

    function hasTrailer() {
        debugger;
        var hasT = $('#BoatIsTrailered').val();
        console.log(hasT);

        if (hasT == "True") {
            $('#SelectTrailerSection').show('2000');
        }
        else if (hasT == "False") {

            if ($('#BoatType2').val() == "Roadtrailer") {

                if (confirm("Vessel Status will be changed from Road Trailer to Stored!")) {
                    $('#BoatType2').val('Stored');
                    $('#BoatIsTrailered').val("False")
                   $('#SelectTrailerSection').hide('2000');


                } else {
                    $('#BoatIsTrailered').val("True")
                    $('#SelectTrailerSection').show('2000');
                }
            } else {
                   $('#SelectTrailerSection').hide('2000');

            }
        }
        else {
            $('#SelectTrailerSection').hide('2000');
        }
    }

    function trailerSelectionUpdate() {
        var selectedTrailerChoice = $('input[name=TrailerSelection]:checked').val();
        if (selectedTrailerChoice == "registered") {
            $('#addSection').addClass('hidden');
            $('#VesselTrailerSearch').show('2000');
            $('#trailerModalHairline3').show('2000');
            $('#VesselTrailerMV').switchClass("col-sm-12 col-md-12 col-lg-12", "col-sm-6 col-md-6 col-lg-6");
            if ($('#RegistrationModal').val() == "") {
                clearAddRegTrailerModal();
            }
        }

        else if (selectedTrailerChoice == "notregistered") {
            //clear registered form
            $('#addSection').removeClass('hidden');
            $('#RegistrationModal').val('');
            $(vesselTrailerVIN).hide();
            $(vesselTrailerChassis).hide();
            $(vesselTrailerEffective).show();
            $(vesselTrailerCease).hide();
            $(vesselTrailerCeaseReason).hide();
            $(vesselTrailerYear).show();
            $(vesselTrailerMake).show();
            $(vesselTrailerModel).show();
            $(vesselTrailerMV).show('2000');
            $(vesselTrailerLoc).show('2000');
            $(vesselTrailerNotes).show('2000');
            $('#trailerModalHairline').show('2000');
            $('#trailerModalHairline2').show('2000');
            $('#trailerModalHairline4').show('2000');
            $('#VesselTrailerSearch').hide();
            $('#trailerModalHairline3').hide();
            $('#YearModal').attr("readonly", false);
            $('#MakeModal').attr("readonly", false);
            $('#ModelModal').attr("readonly", false);
            $('#VesselTrailerMV').switchClass("col col-xs-12 col-sm-6 col-md-6 col-lg-6", "col col-xs-12 col-sm-12 col-md-12 col-lg-12");
        }
        selectedTrailerChoice = "";
    }


    function submitPayment() {
         event.preventDefault();
        if (!$('#paymentCreditCard').is(":checked") && !$('#paymentEGlobal').is(":checked"))
            return false;

        if ($('#paymentCreditCard').is(":checked")) {
            $.ajax({
                type: "POST",
                url: '@Url.ActionLink("GeneratePxPayment", "Agreement")',
                data: $("#tab_1 :input").serialize({ json: true }),
                complete: function (data) {
                    debugger;
                    window.location = data.responseJSON.url;
                },
            }) .done(function (data) {
                debugger;

                }).fail(function (a, s, d) {
                    debugger;
                               alert("Unable to process payment.");
                 });
        }
        else if ($('#paymentEGlobal').is(":checked")) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GenerateEGlobal", "Agreement")',
                data: $("#tab_1 :input").serialize({ json: true })

            })
                .done(function (url) {

                    $("#documentsSection").on('load', url, function () {
                    });
                }).fail(function (a, s, d) {

                               alert("Unable to save.");
                           });
        }
    }

    function bypassPayment() {
        event.preventDefault();
                       $('#getDocumentsModal').show();


        $.ajax({
            url: '@Url.Action("ByPassPayment", "Agreement")',
            type: "Post",
            data: $("#tab_1 :input").serialize({ json: true }),
            async: true
        }).done(function (data) {
             $('#getDocumentsModal').hide();

               window.location.href = data.url;
        }).fail(function (a, s, d) {

            $('#getDocumentsModal').hide();
        });
    }

</script>