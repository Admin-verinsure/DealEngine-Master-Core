<script type="text/javascript">
    $(function () {
        //get all forms on load
        var forms = document.getElementsByClassName('is-valid');
        var formIds = [];
        for (var f = 0; f < forms.length; f++) {
            //get each form id
            formIds.push(forms[f].id);
        }
        for (var i = 0; i < formIds.length; i++) {
            var form = document.getElementById(formIds[i]);
            for (var e = 0; e < form.length; e++) {
                var element = document.getElementById(form[e].id);
                if (element != null) {
                    OnChange(element.id, element.name);
                    //after first load change to default view
                    element.classList.remove("is-valid");
                    element.classList.remove("is-invalid");
                    element.classList.add("is-up");
                }
            }
            form.classList.remove("is-valid");
            form.classList.add("needs-validation");
        }
    });

    function OnChange(Id, Name) {
        var obj = document.getElementById(Id);
        var value = obj.value;
        var dataRule = obj.getAttribute('data-rule');
        var dataItem = obj.getAttribute('data-item');
        var Tag = obj.tagName;
        obj.classList.remove("is-up");

        //validation
        if (Tag == "SELECT") {
            SelectValidation(obj, value);
        } else if (Tag == "INPUT") {
            InputValidation(obj, value);
        }
        //trigger
        TriggerHandler(Name, value, dataRule, dataItem);
    }

    function InputValidation(obj, value) {
        if (obj.type == "number") {
            if (value >= 0) {
                obj.classList.add("is-valid");
                obj.classList.remove("is-invalid");
            } else {
                obj.classList.remove("is-valid");
                obj.classList.add("is-invalid");
            }
        } else {
            if (value != "") {
                obj.classList.add("is-valid");
                obj.classList.remove("is-invalid");
            } else {
                obj.classList.remove("is-valid");
                obj.classList.add("is-invalid");
            }
        }
    }

    function SelectValidation(obj, value) {
        if (value > 0) {
            obj.classList.add("is-valid");
            obj.classList.remove("is-invalid");
        }
        else {
            obj.classList.remove("is-valid");
            obj.classList.add("is-invalid");
        }
    }

    function DefaultRule(Value, Name) {
        if (Value === "1") {
            ShowElement(Name);
        } else {
            HideElement(Name);
        }
    }

    function TriggerHandler(Name, Value, Rule, DataItem) {
        try {
            //all rules go here
            DefaultRule(Value, Name);
            if (Rule === "clear") {
                if (Value == 2) {
                    ClearObject(DataItem);
                }
            }
            if (Rule === "contractingservice") {
                if (Value != "10" && Value != "") {
                    Value = "1";
                    DefaultRule(Value, Name);
                }
            }
            if (Rule === "reverse") {
                if (Value == "2") {
                    Value = "1";
                } else {
                    Value = "2";
                }
                DefaultRule(Value, Name);
            }
            if (Rule === "BuildSharedTable") {
                BuildSharedTable(DataItem, Name);
                Value = "1";
                DefaultRule(Value, Name);
            }
            if (Rule === "CyberLabel") {
                var Value = DoubleConditional(DataItem);
                var ids = DataItem.split(',');
                var element = document.getElementById(ids[0]);
                
                Value = CreateCyberLabelInput(Value, element, ids[2]);
                DefaultRule(Value, element.name);                
            }
            if (Rule === "CyberOptional") {
                debugger;
                Value = DoubleConditional(DataItem);
                if (Value != "1") {
                    Value = "2";
                }
                var ids = DataItem.split(',');
                var element = document.getElementById(ids[0]);
                DefaultRule(Value, element.name);
            }
        } catch (ex) {
            //these rules need to be re-run regardless of the catch
            //console.log(ex);
            ////we expect this to fail for form elements with no change events but could use this later
        }
    }

    function DoubleConditional(DataItem) {
        var ids = DataItem.split(',');
        var q1 = document.getElementById(ids[0]);
        var q2 = document.getElementById(ids[1]);
        
        if (q1.value == "1" && q2.value == "1") {
            return "1";
        }
        else if (q1.value == "2" && q2.value == "2") {
            return "2";
        }
        else if (q1.value == "2" && q2.value == "1" || q1.value == "1" && q2.value == "2") {
            //default to ?
            return "both";
        }
        else
            return "0";
    }

    function BuildSharedTable(DataItem, Name) {
        var array = DataItem.split(',');
        var list = document.getElementById(array[0]);
        var tableElement = document.getElementById(array[1]);
        if (tableElement.children.length == 2) {
            tableElement.removeChild(tableElement.children[1]);
        }
        var tbdy = document.createElement('tbody');
        for (var t = 0; t < list.options.length; t++) {
            if (list.options[t].selected === true) {
                var tr = document.createElement('tr');
                var td1 = document.createElement('td');
                td1.appendChild(document.createTextNode(list[t].text));
                tr.appendChild(td1);
                var td2 = document.createElement('td');
                td2.innerHTML = CreateSharedInput(Name, list.options[t]);
                tr.appendChild(td2);
                tbdy.appendChild(tr);
            }
        }
        tableElement.appendChild(tbdy);
    }

    function CreateSharedInput(Id, element) {
        var input = document.createElement("input");
        input.setAttribute("name", Id + "." + element.value);
        input.setAttribute("id", element.text);
        input.setAttribute("class", "form-control");
        input.setAttribute("data-rule", "validatetable");
        input.setAttribute("data-item", "validatetable" + element.parentElement.id);
        input.setAttribute("onchange", "OnChange(this.id, this.name)");
        return input.outerHTML;
    }

    function CreateCyberLabelInput(Value, Element, LabelId) {               
        var conditional = "As you have answered no to one or both of the above questions then NZI are not able to provide Cyber Ultra cover and you will not be provided with an automatic quotation. Please contact your broker for more information.";        
        var label = document.getElementById(LabelId);
        if (Value == "2" || Value == "both") {
            if (label == null) {
                label = AttachLabel(LabelId, conditional);
                Element.parentElement.parentElement.parentElement.appendChild(label);
            }
            return "2";
        }
        if (Value == "1") {
            if (label != null) {
                Element.parentElement.parentElement.parentElement.removeChild(label);
            }
            return "1";
        }
        return "2";
    }

    function AttachLabel(id, conditional) {
        var label = document.createElement('label');
        label.setAttribute("id", id);
        label.innerHTML = conditional;
        return label;
    }

    function HideElement(id) {
        var element = document.getElementById(id);
        if (element != null) {
            element.hidden = true;
        }   
    }

    function ShowElement(id) {
        var element = document.getElementById(id);
        if (element != null) {
            element.hidden = false;
        }        
    }

    function ClearObject(Id) {
        var obj = document.getElementById(Id);
        var Tag = obj.tagName;
        //here we can define the changes per type
        if (Tag == "SELECT") {
            for (var i = 0; i < obj.options.length; i++) {
                if (obj.options[i].selected === true) {
                    obj.options[i].selected = false;
                }
            }
            if (!obj.multiple) {
                obj.options[0].selected = true;
            }
        }
    }

    function ValidateTableValues(table) {
        var percentage = 0;
        for (var v = 0; v < table.length; v++) {
            percentage += parseInt(table[v].value);
        }
        if (percentage != 100) {
            alert("Percentage calculation does not equal to 100%");
            return false;
        }
        return true;
    }

    function ValidateSharedRevenueForm(tab) {
        var isValid = true;
        var hasItem = false;
        if (tab == 1) {
            var territoryVals = document.querySelectorAll("[data-item='validatetableterritories']");
            var territories = document.getElementById("territories");
            for (var i = 0; i < territories.options.length; i++) {
                if (territories.options[i].selected === true) {
                    hasItem = true;
                }
            }
            if (!hasItem) {
                isValid = false;
                alert("Please select territories.");
            }
            isValid = ValidateTableValues(territoryVals);
        }
        else if (tab == 2) {
            var activityVals = document.querySelectorAll("[data-item='validatetableactivities']");
            var activities = document.getElementById("activities");
            var element;
            for (var i = 0; i < activities.options.length; i++) {
                var additionalactivityId = activities.options[i].value;
                if (activities.options[i].selected === true) {
                    hasItem = true;
                    element = document.getElementById(additionalactivityId);
                    if (element != null) {
                        element.hidden = false;
                    }
                } else {
                    element = document.getElementById(additionalactivityId);
                    if (element != null) {
                        element.hidden = true;
                    }
                }
            }
            document.getElementById("noadditionalinfolabel").hidden = false;
            var additionalinfotab = document.getElementById("RevenueTabs3");
            for (var d = 1; d < additionalinfotab.children.length; d++) {
                if (additionalinfotab.children[d].hidden == false) {
                    document.getElementById("additionalinfosubmit").hidden = false;
                    document.getElementById("noadditionalinfolabel").hidden = true;
                }
            }
            isValid = ValidateTableValues(activityVals);
        }
        else if (tab == 3) {
            var contruction = document.getElementById("E");
            if (contruction.hidden == false) {
                var contructionlist = document.querySelectorAll("[data-item='validatecontruction']");
                isValid = ValidateTableValues(contructionlist);
            }
        }
        if (isValid) {
            tab += 1;
            SetCurrentTab('RevenueTabs' + tab);
        }
    }
</script>
<style>
    .required:after {
        content: " *";
        color: red;
        font-size: 20px;
    }
</style>