@model DealEngine.WebUI.Models.InformationViewModel

<!-- MAIN CONTENT -->
<div id="content">
    <!-- Bread crumb is created dynamically -->
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

        <h1 class="page-title txt-color-blueDark">
            <!-- PAGE HEADER -->
            <i class="fa-fw fa fa-home"></i><a href="~/Agreement/ViewAcceptedAgreement/@Model.ClientProgramme.Id"> Agreement</a>
            > <span>
                <a href="~/Information/ViewProgrammeDetails/@Model.ClientProgramme.Id"> View Client Information Sheet</a>
                > View Client Information Sheet Section
            </span>
        </h1>
    </div>
    <span>
        <a onclick="location.href='@Url.Action("ViewProgrammeDetails", "Information",new { Id =@Model.ClientProgramme.Id })'" style="color:dodgerblue;font-size:30px; cursor:pointer"> <span _ngcontent-c7="" class="icon-append fa fa-arrow-circle-left"></span>  </a>
    </span>


    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-8">
                <!-- new widget -->
                <div class="jarviswidget jarviswidget-color-blue" id="wid-id-2" data-widget-editbutton="true" data-widget-colorbutton="false">
                    @Html.HiddenFor(m => m.AnswerSheetId)
                    @Html.HiddenFor(m => m.ClientProgramme.Owner.Id)

                    <header>
                        <span class="widget-icon"> <i class="fa fa--envelope txt-color-white"></i> </span>
                        <h2>Client Information Sheet Section</h2>
                    </header>
                    <!-- widget div-->
                    @Html.Partial("PrefabSections/" + Model.SectionView, Model)


                </div>
            </article>
        </div>
    </section>
</div>


@section pagespecific {
    <script>
        $(window).on("load", function () {
            debugger;
            if (document.getElementById("fieldset") != null) {
                document.getElementById("fieldset").disabled = true;
            }

            //$('#boatForm :input').prop('disabled', 'disabled');
            var updatebutton = document.getElementById("update");
            $(updatebutton).addClass("hidden");
            $(updatebutton).hide();

            var trashbutton = document.getElementsByClassName("glyphicon glyphicon-trash");
            $(trashbutton).addClass("hidden");
            $(trashbutton).hide();

            var tbutton = document.getElementsByClassName(" btn-danger");
            $(tbutton).addClass("hidden");
            $(tbutton).hide();

            var trash = document.getElementById("trash");
            $(trash).addClass("hidden");
            $(trash).hide();

            var t = document.getElementById("span");
            $(t).addClass("hidden");
            $(t).hide();

            var tr = document.getElementsByName("update");
            $(tr).addClass("hidden");
            $(tr).hide();

             if ("@Model.Status" == "Submitted") {
                debugger;

                 $('#updateBoat').addClass("hidden");
                 $('#ClearBoat').addClass("hidden");
                 $("select").attr("disabled", "disabled");
                //$("#PIViewModel :input").prop("disabled", true);

             }


        //     $(function () {
        ////get all forms on load
        //            debugger;
        //            var forms = document.getElementsByClassName('is-valid');
        //            var formIds = [];
        //        for (var f = 0; f < forms.length; f++) {
        //    //get each form id
        //               formIds.push(forms[f].id);
        //         }
        //            for (var i = 0; i < formIds.length; i++) {
        //              var form = document.getElementById(formIds[i]);
        //             for (var e = 0; e < form.length; e++) {
        //              try {
        //                if (form[e].id != "") {
        //                   element = document.getElementById(form[e].id);
        //                }
        //               }
        //                catch (ex) {
        //            //will have to add further function for forms with added elements
        //                 }
        //                 if (element != null) {
        //                     OnChange(element.id, element.name);
        //            //after first load change to default view
        //                   element.classList.remove("is-valid");
        //                    element.classList.remove("is-invalid");
        //                    element.classList.add("is-up");
        //                  }
        //              }
        //            }
        ////hardcoded for sharedrevenue - relook once form is converted
        //           var activitiesTable = document.getElementById('activitiestable');
        //            for (var r = 1; r < activitiesTable.rows.length; r++) {
        //                for (var c = 0; c < activitiesTable.rows[r].cells.length; c++) {
        //                   if (activitiesTable.rows[r].cells[c].firstElementChild != null) {
        //                    OnChange(activitiesTable.rows[r].cells[c].firstElementChild.id, activitiesTable.rows[r].cells[c].firstElementChild.name)
        //                   }
        //                }
        //            }
        //     });

        });
    </script>

    @await Html.PartialAsync("_PrefabScripts")

    @Html.Partial("_InformationWizardScripts")

}