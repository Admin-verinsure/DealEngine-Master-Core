@model DealEngine.WebUI.Models.InformationViewModel

<div class="form-group col-md-6">
    <div class="form-group">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.Qualifications, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.Qualifications, new { @class = "form-control", @id = "AdvisorUnit.Qualifications", @required = "", @onchange = "OnChange(this.id, this.name)" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.IsRetiredorDeceased)
        <select id="AdvisorUnit.IsRetiredorDeceased" name="OrganisationViewModel.AdvisorUnit.IsRetiredorDeceased" data-rule="RetirementDateValidation" class="custom-select" onchange="OnChange(this.id, this.name)" required>
            @foreach (var option in Model.OrganisationViewModel.HasRetiredorDeceasedOptions)
            {
                <option selected="@option.Selected" value="@option.Value">@option.Text</option>
            }
        </select>
    </div>
    <div id="OrganisationViewModel.AdvisorUnit.IsRetiredorDeceased" hidden>
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.DateofRetirement, new { @class = "label required" })
            @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.DateofRetirement, new { @class = "form-control", @id = "AdvisorUnit.DateofRetirement", @type = "date", @onchange = "OnChange(this.id, this.name)", @placeholder = "Date of Retirement" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.DateofRetirement, new { @class = "label required" })
            @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.DateofDeceased, new { @class = "form-control", @id = "AdvisorUnit.DateofDeceased", @type = "date", @onchange = "OnChange(this.id, this.name)", @placeholder = "Date of Deceased" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.Experience, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.Experience, new { @class = "form-control", @id = "AdvisorUnit.Experience", @required = "", @onchange = "OnChange(this.id, this.name)" })
    </div>
</div>
<div class="form-group col-md-6">
    <div class="form-group">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.RegisteredStatus, new { @class = "label required" })
        <select id="AdvisorUnit.RegisteredStatus" name="OrganisationViewModel.AdvisorUnit.RegisteredStatus" class="custom-select" onchange="OnChange(this.id, this.name)" required>
            @foreach (var option in @Model.OrganisationViewModel.HasRegisteredOptions)
            {
                <option selected="@option.Selected" value="@option.Value">
                    @option.Text
                </option>
            }
        </select>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.Duration, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.Duration, new { @class = "form-control", @id = "AdvisorUnit.Duration", @required = "", @onchange = "OnChange(this.id, this.name)" })
    </div>
    <div class="form-group" id="HideCommencement">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.DateofCommencement, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.DateofCommencement, new { @class = "form-control", @id = "AdvisorUnit.DateofCommencement", @type = "date", @onchange = "OnChange(this.id, this.name)", @data_rule = "ValidateDateOfCommencement", @placeholder = "Date of Commencement", @required="" })
        <div id="InvalidOrganisationEmail" class="invalid-feedback">Date is out of bounds</div>
    </div>
    <div class="form-group" id="HidePrincipal">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.IsPrincipalAdvisor, new { @class = "label required" })
        <select id="AdvisorUnit.IsPrincipalAdvisor" name="OrganisationViewModel.AdvisorUnit.IsPrincipalAdvisor" class="custom-select" data-rule="PrincipalAdvisor" onchange="OnChange(this.id, this.name)" required>
            @foreach (var option in @Model.OrganisationViewModel.HasPrincipalOptions)
            {
                <option selected="@option.Selected" value="@option.Value">
                    @option.Text
                </option>
            }
        </select>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.Associations, new { @class = "label required" })
        @Html.DropDownListFor(m => m.OrganisationViewModel.AdvisorUnit.Associations, Model.OrganisationViewModel.HasAssociationOptions, new { @class = "chosen-select", @id = "AdvisorUnit.Associations", @multiple = "multiple", @data_rule = "OtherOptions", @onchange = "OnChange(this.id, this.name)" })
    </div>
    <div class="form-group" id="OrganisationViewModel.AdvisorUnit.Associations" hidden>
        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.OtherInformation, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.OtherInformation, new { @class = "form-control", @id = "AdvisorUnit.OtherInformation", @onchange = "OnChange(this.id, this.name)" })
    </div>
</div>




