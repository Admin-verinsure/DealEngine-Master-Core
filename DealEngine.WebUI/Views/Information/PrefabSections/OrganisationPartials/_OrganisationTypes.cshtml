@model DealEngine.WebUI.Models.InformationViewModel

@section pagespecific {
    <script src="~/lib/popper.js/umd/popper.js"></script>
}
<div class="form-group row">
    <div class="form-group col-md-6">
        <div class="form-group" id="HideOrganisationType">
            @Html.LabelFor(m => m.OrganisationViewModel.OrganisationTypes, new { @class = "label required" })
            <select id="Organisation.OrganisationType" name="OrganisationViewModel.OrganisationType" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                @foreach (var option in Model.OrganisationViewModel.OrganisationTypes)
                {
                    <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                }
            </select>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.User.Email, new { @class = "label required" })
            @Html.TextBoxFor(m => m.OrganisationViewModel.User.Email, new { @class = "form-control", @id = "User.Email", @data_rule = "OrganisationEmail", @onchange = "OnChange(this.id, this.name)", @required = "", @type = "email" })
            <div id="InvalidOrganisationEmail" class="invalid-feedback">Organisation email already exists - please enter a different email</div>
        </div>
    </div>
    <div class="form-group col-md-6">
        <div class="form-group" id="HideInsuranceAttribute">
            @Html.LabelFor(m => m.OrganisationViewModel.InsuranceAttributes, new { @class = "label required" })
            <select id="Organisation.InsuranceAttribute" name="OrganisationViewModel.InsuranceAttribute" class="custom-select" data-rule="OrganisationType" onchange="OnChange(this.id, this.name)" required>
                @foreach (var option in @Model.OrganisationViewModel.InsuranceAttributes)
                {
                    <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                }
            </select>
        </div>
    </div>
</div>
<div id="Else" class="form-group row" hidden>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.OrganisationViewModel.Organisation.Name, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.Name, new { @class = "form-control", @id = "Organisation.Name", @onchange = "OnChange(this.id, this.name)", @required = "", @maxlength = "250", @placeholder = "Max characters is 250. Over 250 will not be stored." })
        @if (Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Apollo Programme" || Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Abbott Financial Advisor Liability Programme")
        {
            <div class="form-group" id="HideDateofIncorportation" hidden>
                @Html.LabelFor(m => m.OrganisationViewModel.Organisation.DateofIncorportation, new { @class = "label required" })
                @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.DateofIncorportation, "dd/MM/yyyy", new { @class = "form-control", @id = "Organisation.DateofIncorportation", @type = "date", @onchange = "OnChange(this.id, this.name)", @required = "" })
                @if (Model.OrganisationViewModel.Organisation.DateofIncorportation == null)
                {
                    @Html.Hidden("NoDateofIncorportation", true)
                }
                else
                {
                    @Html.Hidden("NoDateofIncorportation", false)
                }
            </div>
            <div class="form-group" id="TradingName">
                @if (Model.OrganisationViewModel.Organisation.Id == Model.ClientInformationSheet.Owner.Id)
                {
                    @Html.LabelFor(m => m.OrganisationViewModel.Organisation.TradingName, new { @class = "label" })
                    @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.TradingName, new { @class = "form-control", @id = "Organisation.TradingName", @onchange = "OnChange(this.id, this.name)", @maxlength = "250", @placeholder = "If Applicable. Max characters is 250. Over 250 will not be stored." })


                    <div class="form-group">
                        <div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.OrganisationViewModel.Organisation.OrganisationFAPLicenseNumber, new { @class = "label required" })
                                @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.OrganisationFAPLicenseNumber, new { @class = "form-control", @id = "Organisation.OrganisationFAPLicenseNumber" })
                            </div>

                        </div>


                    </div>

                    <div class="form-group">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OrganisationViewModel.Organisation.isOrganisationTheFAP, new { @class = "label required" })
                            <select id="Organisation.isOrganisationTheFAP" name="OrganisationViewModel.Organisation.isOrganisationTheFAP" data-rule="IsTheFap" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                                @foreach (var option in @Model.OrganisationViewModel.HasIsFAPOptions)
                                {
                                    <option selected="@option.Selected" value="@option.Value">
                                        @option.Text
                                    </option>
                                }
                            </select>
                        </div>
                    </div>

                    <div id="OrganisationViewModel.Organisation.isOrganisationTheFAP" class="form-group" hidden>
                        <div class="form-group">

                            <div>
                                @Html.LabelFor(m => m.OrganisationViewModel.Organisation.isOrganisationInterposedPerson, new { @class = "label required" })

                            </div>

                            <select id="Organisation.isOrganisationInterposedPerson" name="OrganisationViewModel.Organisation.isOrganisationInterposedPerson" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                                @foreach (var option in @Model.OrganisationViewModel.HasInterposedPersonOptions)
                                {
                                    <option selected="@option.Selected" value="@option.Value">
                                        @option.Text
                                    </option>
                                }
                            </select>
                        </div>
                    </div>
                    @*@Html.LabelFor(m => m.OrganisationViewModel.Organisation.isTheFAP, new { @class = "label" })
                        @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.isTheFAP, new { @class = "form-control", @id = "Organisation.TradingName", @onchange = "OnChange(this.id, this.name)", placeholder = "If Applicable" })*@

                }
            </div>
        }
    </div>
    @if (Model.OrganisationViewModel.Programme.NamedPartyUnitName == "NZFSG Programme" ||
Model.OrganisationViewModel.Programme.NamedPartyUnitName == "TripleA Programme" ||
Model.OrganisationViewModel.Programme.NamedPartyUnitName == "NZPI Programme" ||
Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Financial Advice NZ Financial Advice Provider Liability Programme"
)
    {
        <div class="form-group col-md-6" id="TradingName" hidden>
            @if (Model.OrganisationViewModel.Organisation.Id == Model.ClientInformationSheet.Owner.Id)
            {
                @Html.LabelFor(m => m.OrganisationViewModel.Organisation.TradingName, new { @class = "label required" })
                @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.TradingName, new { @class = "form-control", @id = "Organisation.TradingName", @onchange = "OnChange(this.id, this.name)", @required = "", @maxlength = "250", @placeholder = "Max characters is 250. Over 250 will not be stored." })
                @if (string.IsNullOrWhiteSpace(Model.OrganisationViewModel.Organisation.TradingName))
                {
                    @Html.Hidden("NoTradingName", true)
                }
                else
                {
                    @Html.Hidden("NoTradingName", false)
                }
                @if (Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Financial Advice NZ Financial Advice Provider Liability Programme")
                {
                    @Html.Hidden("NoTradingNameValidation", true)
                }
                else
                {
                    @Html.Hidden("NoTradingNameValidation", false)

                }
            }
        </div>
        @if (Model.OrganisationViewModel.Programme.NamedPartyUnitName != "NZPI Programme")
        {
            <div class="form-group  col-md-6">
                <div>
                    @Html.LabelFor(m => m.OrganisationViewModel.Organisation.OrganisationFAPLicenseNumber, new { @class = "label required" })
                </div>

                @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.OrganisationFAPLicenseNumber, new { @class = "form-control", @id = "Organisation.OrganisationFAPLicenseNumber" })

            </div>

            <div class="form-group  col-md-6">
                <div>
                    @Html.LabelFor(m => m.OrganisationViewModel.Organisation.isOrganisationTheFAP, new { @class = "label required" })
                </div>

                <select id="Organisation.isOrganisationTheFAP" name="OrganisationViewModel.Organisation.isOrganisationTheFAP" data-rule="IsTheFap" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                    @foreach (var option in @Model.OrganisationViewModel.HasIsFAPOptions)
                    {
                        <option selected="@option.Selected" value="@option.Value">
                            @option.Text
                        </option>
                    }
                </select>
            </div>

            <div id="OrganisationViewModel.Organisation.isOrganisationTheFAP" class="form-group  col-md-6" hidden>

                <div>
                    @Html.LabelFor(m => m.OrganisationViewModel.Organisation.isOrganisationInterposedPerson, new { @class = "label required" })

                </div>

                <select id="Organisation.isOrganisationInterposedPerson" name="OrganisationViewModel.Organisation.isOrganisationInterposedPerson" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                    @foreach (var option in @Model.OrganisationViewModel.HasInterposedPersonOptions)
                    {
                        <option selected="@option.Selected" value="@option.Value">
                            @option.Text
                        </option>
                    }
                </select>
            </div>
        }

    }
</div>

@if (Model.OrganisationViewModel.Programme.NamedPartyUnitName == "NZFSG Programme" || Model.OrganisationViewModel.Programme.NamedPartyUnitName == "TripleA Programme"

      || Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Apollo Programme" ||
             Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Abbott Financial Advisor Liability Programme" ||
             Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Financial Advice NZ Financial Advice Provider Liability Programme")
{

    <div class="form-group AdvisorUnit">


        <div class="form-group col-md-6">
            <div>
                <div class="form-group">
                    @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.FAPLicenseNumber, new { @class = "label required" })

                    @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.FAPLicenseNumber, new { @class = "form-control", @id = "AdvisorUnit.FAPLicenseNumber" })
                </div>

            </div>


        </div>

        <div class="form-group col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.isTheFAP, new { @class = "label required" })
                <select id="AdvisorUnit.isTheFAP" name="OrganisationViewModel.AdvisorUnit.isTheFAP" data-rule="IsTheFap" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                    @foreach (var option in @Model.OrganisationViewModel.HasIsFAPOptions)
                    {
                        <option selected="@option.Selected" value="@option.Value">
                            @option.Text
                        </option>
                    }
                </select>
            </div>
        </div>

        <div id="OrganisationViewModel.AdvisorUnit.isTheFAP" class="form-group col-md-6" hidden>
            @*<div class="form-group">

                    <div>
                        @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.isInterposedPerson, new { @class = "label required" })

                    </div>

                    <select id="AdvisorUnit.isInterposedPerson" name="OrganisationViewModel.AdvisorUnit.isInterposedPerson" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                        @foreach (var option in @Model.OrganisationViewModel.HasInterposedPersonOptions)
                        {
                            <option selected="@option.Selected" value="@option.Value">
                                @option.Text
                            </option>
                        }
                    </select>
                </div>*@
            <div class="form-group">

                <select id="AdvisorUnit.isInterposedPerson" name="OrganisationViewModel.AdvisorUnit.isInterposedPerson" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                    @foreach (var option in @Model.OrganisationViewModel.HasInterposedPersonOptions)
                    {
                        <option selected="@option.Selected" value="@option.Value">
                            @option.Text
                        </option>
                    }
                </select>
            </div>


        </div>

    </div>
}



@if (Model.OrganisationViewModel.Programme.NamedPartyUnitName == "NZFSG ML Programme" || Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Financial Advice NZ Financial Advice Provider Liability ML Programme")
{
<div class="form-group col-md-6" id="TradingName" hidden>
    @if (Model.OrganisationViewModel.Organisation.Id == Model.ClientInformationSheet.Owner.Id)
    {
        @Html.LabelFor(m => m.OrganisationViewModel.Organisation.TradingName, new { @class = "label required" })
        @Html.TextBoxFor(m => m.OrganisationViewModel.Organisation.TradingName, new { @class = "form-control", @id = "Organisation.TradingName", @onchange = "OnChange(this.id, this.name)", @required = "", @maxlength = "250", @placeholder = "Max characters is 250. Over 250 will not be stored." })
        @if (string.IsNullOrWhiteSpace(Model.OrganisationViewModel.Organisation.TradingName))
        {
            @Html.Hidden("NoTradingName", true)
        }
        else
        {
            @Html.Hidden("NoTradingName", false)
        }

        @if (Model.OrganisationViewModel.Programme.NamedPartyUnitName == "Financial Advice NZ Financial Advice Provider Liability ML Programme")
        {
            @Html.Hidden("NoTradingNameValidation", true)
        }
        else
        {
            @Html.Hidden("NoTradingNameValidation", false)
        }
    }
 </div>






}
