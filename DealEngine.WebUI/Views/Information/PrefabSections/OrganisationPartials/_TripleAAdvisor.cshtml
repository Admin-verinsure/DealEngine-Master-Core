@model DealEngine.WebUI.Models.InformationViewModel

    <div class="form-group col-md-6">
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.Qualifications, new { @class = "label required" })
            @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.Qualifications, new { @class = "form-control", @id = "AdvisorUnit.Qualifications", @required = "", @onchange = "OnChange(this.id, this.name)" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.IsRetiredorDeceased)
            <select id="AdvisorUnit.IsRetiredorDeceased" name="OrganisationViewModel.AdvisorUnit.IsRetiredorDeceased"  class="custom-select" onchange="OnChange(this.id, this.name)" required>
                @foreach (var option in Model.OrganisationViewModel.HasRetiredorDeceasedOptions)
                {
                    <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                }
            </select>
        </div>
        <div id="OrganisationViewModel.AdvisorUnit.IsRetiredorDeceased" hidden>
            <div class="form-group">
                @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.DateofRetirement, new { @class = "label required" })
                @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.DateofRetirement, new { @class = "form-control", @id = "AdvisorUnit.DateofRetirement",  @type = "date",@data_rule="RetirementDateValidation", @required = "", @onchange = "OnChange(this.id, this.name)", @placeholder = "Date of Retirement" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.DateofDeceased, new { @class = "form-control", @id = "AdvisorUnit.DateofDeceased", @type = "date", @required = "",@data_rule="RetirementDateValidation", @onchange = "OnChange(this.id, this.name)", @placeholder = "Date of Deceased" })
            </div>
        </div>
    </div>
    <div class="form-group col-md-6">
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.RegisteredStatus, new { @class = "label required" })
            <select id="AdvisorUnit.RegisteredStatus" name="OrganisationViewModel.AdvisorUnit.RegisteredStatus" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                @foreach (var option in @Model.OrganisationViewModel.HasRegisteredOptions)
                {
                    <option selected="@option.Selected" value="@option.Value">
                        @option.Text
                    </option>
                }
            </select>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.Duration, new { @class = "label required" })
            @Html.TextBoxFor(m => m.OrganisationViewModel.AdvisorUnit.Duration, new { @class = "form-control", @id = "AdvisorUnit.Duration", @required = "", @onchange = "OnChange(this.id, this.name)" })
        </div>
        <div class="form-group" id="HideTripleAApproval">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.IsTripleAApproval)
            <select id="AdvisorUnit.IsTripleAApproval" name="OrganisationViewModel.AdvisorUnit.IsTripleAApproval" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                @foreach (var option in Model.OrganisationViewModel.HasIsTripleAApprovalOptions)
                {
                    <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                }
            </select>
        </div>
        <div class="form-group" id="HidePrincipalAdvisor">
            @Html.LabelFor(m => m.OrganisationViewModel.AdvisorUnit.IsPrincipalAdvisor, new { @class = "label required" })
            <select id="AdvisorUnit.IsPrincipalAdvisor" name="OrganisationViewModel.AdvisorUnit.IsPrincipalAdvisor" class="custom-select" data-rule="PrincipalAdvisor" onchange="OnChange(this.id, this.name)" required>
                @foreach (var option in @Model.OrganisationViewModel.HasPrincipalAdvisor)
                {
                    <option selected="@option.Selected" value="@option.Value">
                        @option.Text
                    </option>
                }
            </select>
        </div>
    </div>
        



