@model DealEngine.WebUI.Models.InformationViewModel

<form id="SLViewModel" class="is-valid">
    <div class="form-group">
        <div class="row">
            <div class="col-12">
                <label for="HasSL" class="label required">
                    <strong>Statutory Liability Insurance</strong>
                    Legal defence costs, certain fines and penalties under various statutes - Claims Made & Notified Basis of Insurance.
                    <strong>Acts Included</strong>
                    Any act of the New Zealand Parliament or any amendment to or re-enactment including the statutory regulations of such Acts, other than certain Acts as may be excluded under the Policy.
                    <strong>Special Legal Defence Extension</strong>
                    The coverage also includes additional legal defence costs up to $50,000 any one claim and in the aggregate for all claims during the period of insurance if a Partner, Director or Employee is wrongly sued or charged with certain types of work related criminal offences, other than offences or circumstances that are excluded under the policy.
                    <strong>Please note </strong>that the policy exclusions include:
                    Those Acts enforced by any revenue collecting authority
                    Acts that are against public policy and are uninsurable
                    any fines, penalties or infringement fees imposed under the Health & Safety at Work Act 2015.
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-9">
                <label for="HasSL" class="label required">
                    Would you like Statutory Liability Insurance?
                </label>
            </div>
            <div class="col-3">
                <select id="HasSL" name="SLViewModel.HasSLOptions" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                    @foreach (var option in Model.SLViewModel.HasSLOptions)
                    {
                        <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                    }
                </select>
            </div>
        </div>
        <div id="SLViewModel.HasSLOptions" hidden>
            <div class="form-group">
                <div class="row">
                    <div class="col-9">
                        <label for="haslimit" class="label required">
                            Please select the limit you require:
                        </label>
                    </div>
                    <div class="col-3">
                        <select id="haslimit" name="SLViewModel.HasLimitOptions" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                            @foreach (var option in Model.SLViewModel.HasLimitOptions)
                            {
                                <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div id="SLViewModel.HasLimitOptions" hidden>
                <div class="form-group">
                    <div class="row">
                        <div class="col-9">
                            <label for="alternativelimit" class="label required">
                                Higher or alternative limits will be quoted upon application. Please indicate any higher or alternative limits for which you require a quotation
                            </label>
                        </div>
                        <div class="col-3">
                            @Html.TextBoxFor(m => m.SLViewModel.AlternativeLimit, new { @class = "form-control", @id = "alternativelimit", @type = "number", onchange = "OnChange(this.id, this.name)", @required = "" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-9">
                        <label for="hasdeductible" class="label required">
                            Please select the deductible you require:
                        </label>
                    </div>
                    <div class="col-3">
                        <select id="hasdeductible" name="SLViewModel.HasDeductibleOptions" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                            @foreach (var option in Model.SLViewModel.HasDeductibleOptions)
                            {
                                <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-6">
                        <label for="hasexistingpolicy" class="label required">
                            Is this a renewal of an existing policy placed with @Model.Name ?
                        </label>
                    </div>
                    <div class="col-6">
                        <select id="hasexistingpolicy" name="SLViewModel.HasExistingPolicyOptions" class="custom-select" onchange="OnChange(this.id, this.name)" required>
                            @foreach (var option in Model.SLViewModel.HasExistingPolicyOptions)
                            {
                                <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div id="SLViewModel.HasExistingPolicyOptions" hidden>
                <h3 style="font-size:15px;font-weight:bold;color:black">Details of Previous Insurance</h3>
                <div class="form-group">
                    <div class="row">
                        <div class="col-9">
                            <label for="coveramount" class="label required">
                                $ Amount of Cover:
                            </label>
                        </div>
                        <div class="col-3">
                            @Html.TextBoxFor(m => m.SLViewModel.CoverAmount, new { @class = "form-control", @id = "coveramount", @type = "number", onchange = "OnChange(this.id, this.name)", @required = "" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-9">
                            <label for="datelapsed" class="label required">
                                When Lapsed:
                            </label>
                        </div>
                        <div class="col-3">
                            @Html.TextBoxFor(m => m.SLViewModel.DateLapsed, new { @class = "form-control", @id = "datelapsed", @type = "text", onchange = "OnChange(this.id, this.name)", @required = "" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-9">
                            <label for="insurername" class="label required">
                                Name of Insurer:
                            </label>
                        </div>
                        <div class="col-3">
                            @Html.TextBoxFor(m => m.SLViewModel.InsurerName, new { @class = "form-control", @id = "insurername", @type = "text", onchange = "OnChange(this.id, this.name)", @required = "" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-9">
                            <label for="retroactivedate" class="label required">
                                Retroactive date:
                            </label>
                        </div>
                        <div class="col-3">
                            @Html.TextBoxFor(m => m.SLViewModel.RetroactiveDate, new { @class = "form-control", @id = "retroactivedate", @type = "text", onchange = "OnChange(this.id, this.name)", @required = "" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>    