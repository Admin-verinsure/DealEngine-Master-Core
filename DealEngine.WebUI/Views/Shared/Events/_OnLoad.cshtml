<script type="text/javascript">

    //intialize objects on load
    var d = new Date();
    var currMonth = d.getMonth();
    var currYear = d.getFullYear();
    var currDate = d.getDate();

    if (currMonth < 8) {
        currMonth = 8;
        var startDate = new Date(currYear, currMonth, 1);
    } else {
        var startDate = new Date(currYear, currMonth, currDate);
    }

    $('#FAPCoverStartDate').datepicker({
        dateFormat: "dd/mm/yy",
        minDate: startDate
    });

    $('#AddBoatEffectiveDate').datepicker({
        dateFormat: "yy-mm-dd",

    });
    $('#BoatEffectiveDate').datepicker({
        dateFormat: "yy-mm-dd",
    });
    $('#AddEffectiveDate').datepicker({
        dateFormat: "yy-mm-dd",
    });
    $('#AddPlantEffectiveDate').datepicker({
        dateFormat: "yy-mm-dd",
    });
    $('#EffectiveDate').datepicker({
        dateFormat: "yy-mm-dd",
    });
    $('#MotorEffectiveDate').datepicker({
        dateFormat: "yy-mm-dd",
    });
    $('#TrailerEffectiveDateModal').datepicker({
        dateFormat: "yy-mm-dd",
    });
    if ($("#dateselected").val() != null) {
        var ds = $("#dateselected").val();
        $("#AddBoatEffectiveDate").val(ds);
        $("#BoatEffectiveDate").val(ds);
        $("#AddEffectiveDate").val(ds);
        $("#AddPlantEffectiveDate").val(ds);
        $("#EffectiveDate").val(ds);
        $("#MotorEffectiveDate").val(ds);
        $("#TrailerEffectiveDateModal").val(ds);
    }
    else {
        $("#AddBoatEffectiveDate").datepicker("setDate", "0");
        $("#BoatEffectiveDate").datepicker("setDate", "0");
        $("#AddEffectiveDate").datepicker("setDate", "0");
        $("#AddPlantEffectiveDate").datepicker("setDate", "0");
        $("#EffectiveDate").datepicker("setDate", "0");
        $("#MotorEffectiveDate").datepicker("setDate", "0");
        $("#TrailerEffectiveDateModal").datepicker("setDate", "0");
    }
    function LocationTableRefreshAPI(streetVal, suburbVal, postCodeVal, cityVal, countryVal, cmonValue, locationTypeValue, locationId) {
        var editbuttonstring = "<button class=\"btn btn-success btn - sm\" onclick=\"EditLocation('" + locationId + "', '" + locationTypeValue + "', '" + cmonValue + "', '" + streetVal + "', '" + cityVal + "', '" + countryVal + "', '" + suburbVal + "', '" + postCodeVal + "')\"><i class=\"fa fa-edit\"></i> Edit</button>";
        var deletebuttonstring = "<button onclick=\"RemoveLocation('" + locationId + "')\" type=\"button\" class=\" btn btn-danger btn - sm\" id=\"trash\"><span class=\"fa fa-trash\"></span></button>";
        var table = document.getElementById("tblLocation");
        var row = table.tBodies[0].insertRow(0);
        var editButton = row.insertCell(0);
        editButton.innerHTML = editbuttonstring;
        var locationType = row.insertCell(1);
        locationType.innerHTML = locationTypeValue;
        var commonName = row.insertCell(2);
        commonName.innerHTML = cmonValue;
        var street = row.insertCell(3);
        street.innerHTML = streetVal;
        var suburb = row.insertCell(4);
        suburb.innerHTML = suburbVal;
        var postcode = row.insertCell(5);
        postcode.innerHTML = postCodeVal;
        var city = row.insertCell(6);
        city.innerHTML = cityVal;
        var deleteButton = row.insertCell(7);
        deleteButton.innerHTML = deletebuttonstring;
    }

    function NamedPartyTableRefreshAPI(data, type) {
        var editbuttonstring = "<button class=\"btn btn-success btn-sm\" onclick=\"OnClick('', 'Organisation', '" + data.id + "', '" + data.id + "')\"><i class=\"fa fa- dit\"></i> Edit</button>";
        var deletebuttonstring = "<button onclick=\"RemoveOrganisation('" + data.id + "', 'Insured Details / Named Parties')\" type=\"button\" class=\" btn btn-danger btn-sm\" id=\"trash\"><span class=\"fa fa-trash\"></span></button>";
        var table = document.getElementById("tblOrganisation");
        var row = table.tBodies[0].insertRow(0);
        var editButton = row.insertCell(0);
        editButton.innerHTML = editbuttonstring;
        var Name = row.insertCell(1);
        Name.innerHTML = data.name;
        var OrganisationType = row.insertCell(2);
        OrganisationType.innerHTML = type;        
        var deleteButton = row.insertCell(3);
        deleteButton.innerHTML = deletebuttonstring;
        debugger;
    }

    function PopulateMilestoneView(Method, OutPut) {
        try {
            for (obj in OutPut) {
                var model = OutPut[obj];
                var Type = obj;
                for (var Field in model) {
                    var Element = null;
                    var Id = Type + "." + Field;
                    Element = document.getElementById(Id);
                    if (Element != null) {
                        Element.value = OutPut[obj][Field];
                    }
                }
            }

        } catch (ex) { debugger;}
    }

    function PopulateView(Output) {        
        for (obj in Output) {
            var modelObj = Output[obj];
            for (var Field in modelObj) {
                var Id = obj + "." + Field;
                var Element = document.getElementById(Id);
                if (Element != null) {
                    Element.value = Output[obj][Field];
                }                
            }
        }
    }

    function PopulateOrganisationView(Method, OutPut) {
        try {
            var Form = document.getElementById("organisationViewModel");
            var TradingName = document.getElementById("NoTradingName");
            var DateofIncorporation = document.getElementById("NoDateofIncorportation");
            var Unit = document.getElementsByName("Unit");
            if (TradingName != null) {
                TradingName.value = false;
            }
            if (DateofIncorporation != null) {
                DateofIncorporation.value = false;
            }
            for (obj in OutPut) {
                var model = OutPut[obj];
                var Type = obj;
                for (var Field in model) {
                    var Element = null;
                    var Value = "";

                    if (model.hasOwnProperty("InsuranceAttributes")) {
                        if (Field === "InsuranceAttributes") {
                            var Id = Type + ".InsuranceAttribute";
                            Value = OutPut[obj][Field]["0"]["Name"];
                            Element = document.getElementById(Id);
                            PopulateOrganisationalUnit(OutPut, Unit[0].id);
                        }
                    }

                    if (model.hasOwnProperty("OrganisationType")) {
                        if (Field === "OrganisationType") {
                            var Id = Type + ".OrganisationType";
                            Value = OutPut[obj][Field]["Name"];
                            Element = document.getElementById(Id);
                        }
                    }

                    if (Element == null) {
                        var Id = Type + "." + Field;
                        Element = document.getElementById(Id);
                        Value = OutPut[obj][Field];
                    }
                    if (Element != null) {
                        if (Element.tagName == "INPUT") {
                            if (Element.type == "date") {
                                //hardcord date string
                                var date = Value.substring(0, 10);
                                if (date == "0001-01-01") {
                                  element.value = null;
                                } else {
                                    element.value = date;
                                    Element.type = "text";
                                }
                            }
                            else {
                                Element.value = Value;
                            }
                        }
                        else if (Element.tagName == "SELECT") {
                            for (var o = 0; o < Element.options.length; o++) {
                                if (Element.options[o].value == Value.toString()) {
                                    Element.options[o].selected = true;
                                    break;
                                }
                            }
                        }
                        OnChange(Element.id, Element.name);
                    }
                    else {
                        //unfound html ids are here
                    }
                }
                if (Method == "Owner") {
                    document.getElementById("HideOrganisationType").hidden = true;
                    document.getElementById("HideInsuranceAttribute").hidden = true;
                    document.getElementById("Organisation.OrganisationType").disabled = true;
                    document.getElementById("Organisation.InsuranceAttribute").disabled = true;
                    document.getElementById("Else").hidden = false;
                    var ProgrammeName = document.getElementById("Programme_Name");
                    if (ProgrammeName.value == "NZPI Programme") {
                        NZPIOwnerOnLoad();
                    }
                    if (ProgrammeName.value == "Apollo Programme" || ProgrammeName.value == "Abbott Financial Advisor Liability Programme") {
                        ApolloOwnerOnLoad();
                    }        
                    TradingNameOwnerOnLoad();
                }
            }
        } catch (ex) { debugger; }
    }

    function TradingNameOwnerOnLoad() {
        var TradingName = document.getElementById("NoTradingName");
        if (TradingName != null) {
            document.getElementById("TradingName").hidden = false;
        }
    }

    function NZPIOwnerOnLoad() {
        document.getElementById("HideOrganisationType").hidden = false;
        document.getElementById("Organisation.OrganisationType").disabled = false;
    }

    function ApolloOwnerOnLoad(){
        document.getElementById("HideDateofIncorportation").hidden = false;
    }

    function PopulateOrganisationalUnit(OutPut, UnitName) {
        for (var Unit in OutPut["Organisation"]["OrganisationalUnits"]) {
            for (var Item in OutPut["Organisation"]["OrganisationalUnits"][Unit]) {
                id = UnitName + "." + Item;
                var element = document.getElementById(id);
                if (element != null) {
                    var Value = OutPut["Organisation"]["OrganisationalUnits"][Unit][Item];
                    if (element.tagName == "INPUT") {
                        if (element.type == "date") {
                            //hardcord date string
                            var date = Value.substring(0, 10);
                            if (date == "0001-01-01") {
                                  element.value = null;
                                } else {
                                  element.value = date;
                                }
                            //element.value = date;
                        }
                        else {
                            element.value = Value;
                        }
                    }
                    else if (element.tagName == "SELECT") {
                        if (element.multiple) {
                            for (var i = 0; i < Value.length; i++) {
                                for (var o = 0; o < element.options.length; o++) {
                                    if (element.options[o].value == Value[i].toString()) {
                                        element.options[o].selected = true;
                                        $(".chosen-select").trigger('chosen:updated');
                                    }
                                }
                            }
                        } else {
                            if (Value == "1") {
                                Value = "true"
                            }
                            else if (Value == "2") {
                                Value = "false";
                            }
                            for (var o = 0; o < element.options.length; o++) {
                                if (element.options[o].value == Value.toString()) {
                                    element.options[o].selected = true;
                                    break;
                                }
                            }
                        }
                    }
                    OnChange(element.id, element.name);
                }
            }
        }
    }

</script>