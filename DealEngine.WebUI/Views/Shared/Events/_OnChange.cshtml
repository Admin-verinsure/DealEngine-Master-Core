<script type="text/javascript">
    $(function () {
        //get all forms on load
        var forms = document.getElementsByClassName('is-valid');
        var formIds = [];
        for (var f = 0; f < forms.length; f++) {
            //get each form id
            formIds.push(forms[f].id);
        }
        for (var i = 0; i < formIds.length; i++) {
            var form = document.getElementById(formIds[i]);
            for (var e = 0; e < form.length; e++) {
                try {
                    if (form[e].id != "") {
                        element = document.getElementById(form[e].id);
                    }
                }
                catch (ex) {
                    //will have to add further function for forms with added elements
                }

                if (element != null) {
                    if (element.multiple == true && (form.id == "RoleDataViewModel" || form.id == "RevenueDataViewModel")) {
                        //need to cancel event for build tables i.e role/revenue
                    }
                    else {
                        OnChange(element.id, element.name);
                    }

                    //after first load change to default view
                    element.classList.remove("is-valid");
                    element.classList.remove("is-invalid");
                    element.classList.add("is-up");
                }
            }
        }
    });

    function OnChange(Id, Name) {
        var obj = document.getElementById(Id);
        var value = obj.value;
        var dataRule = obj.getAttribute('data-rule');
        var dataItem = obj.getAttribute('data-item');
        var tag = obj.tagName;
        obj.classList.remove("is-up");

        //validation
        if (obj.hasAttribute('required')) {
            if (tag == "SELECT") {
                SelectValidation(obj, value);
            } else if (tag == "INPUT") {
                InputValidation(obj, value);
            }
            else if (tag == "TEXTAREA") {
                InputValidation(obj, value);
            }
        } else {
            obj.classList.remove("is-valid");
        }

        //trigger
        TriggerHandler(obj, Name, value, dataRule, dataItem);
        try {
            obj.form.classList.add("needs-validation");
            obj.form.classList.remove("is-valid");
            obj.form.classList.remove("was-validated");
        }
        catch (ex) {
            //we assume the obj is part of a form but may not always be the case
        }
    }

    function InputValidation(obj, value) {
        if (obj.type == "number") {
            if (value >= 0) {
                obj.classList.add("is-valid");
                obj.classList.remove("is-invalid");
            } else {
                obj.classList.remove("is-valid");
                obj.classList.add("is-invalid");
            }
        } else {
            if (value != "") {
                obj.classList.add("is-valid");
                obj.classList.remove("is-invalid");
            } else {
                obj.classList.remove("is-valid");
                obj.classList.add("is-invalid");
            }
        }
    }

    function SelectValidation(obj, value) {

        if (!obj.multiple) {
            if (value != "0") {
                obj.classList.add("is-valid");
                obj.classList.remove("is-invalid");
            }
            else {
                obj.classList.remove("is-valid");
                obj.classList.add("is-invalid");
            }
        }
        else {
            if (value != "") {
                obj.classList.add("is-valid");
                obj.classList.remove("is-invalid");
            }
            else {
                obj.classList.remove("is-valid");
                obj.classList.add("is-invalid");
            }
        }
    }

    function DefaultRule(Value, Name) {
        if (Value === "1") {
            ShowElement(Name);
        } else {
            HideElement(Name);
        }
    }

    function TriggerHandler(obj, Name, Value, Rule, DataItem) {
        try {
            //all rules go here
            if (obj.type == "checkbox") {
                if (obj.checked === true) {
                    Value = "1";
                } else {
                    Value = "2";
                }
            }

            if (Value == 'true' || Value == 'false') {
                if (Value == 'true') {
                    Value = "1";
                }
                else {
                    Value = "2";
                }
            }

            DefaultRule(Value, Name);
            if (Rule === "Clear") {
                if (Value == 2) {
                    ClearObject(DataItem);
                }
            }
            if (Rule === "ContractingService") {
                if (Value != "10" && Value != "") {
                    Value = "1";
                    DefaultRule(Value, Name);
                }
            }
            if (Rule === "Reverse") {
                if (Value == "2") {
                    Value = "1";
                } else {
                    Value = "2";
                }
                DefaultRule(Value, Name);
            }
            if (Rule === "BuildSharedTable") {
                BuildSharedTable(DataItem, Name);
                Value = "1";
                DefaultRule(Value, Name);
            }
            if (Rule === "CyberLabel") {
                var Value = DoubleConditional(DataItem);
                var ids = DataItem.split(',');
                var element = document.getElementById(ids[0]);

                Value = CreateCyberLabelInput(Value, element, ids[2]);
                DefaultRule(Value, element.name);
            }
            if (Rule === "CyberOptional") {
                Value = DoubleConditional(DataItem);
                if (Value != "1") {
                    Value = "2";
                }
                var ids = DataItem.split(',');
                var element = document.getElementById(ids[0]);
                DefaultRule(Value, element.name);
            }
            if (Rule === "FABConditional") {
                var ids = DataItem.split(',');
                document.getElementById(ids[0]).hidden = true;
                document.getElementById(ids[1]).hidden = true;
                if (Value == "1") {
                    document.getElementById(ids[0]).hidden = false;
                }
                else if (Value == "2"){
                    document.getElementById(ids[1]).hidden = false;
                }
            }
            if (Rule === "DNOOptional") {
                Value = DoubleConditional(DataItem);
                if (Value == "both") {
                    Value = "1";
                }
                else {

                }
                var ids = DataItem.split(',');
                var element = document.getElementById(ids[1]);
                DefaultRule(Value, element.name);
            }
            if (Rule === "ValidateOnSubmit") {
                var ids = DataItem.split(',');
                obj.setAttribute('data-onsubmititem', ids[1]);
                DefaultRule(Value, Name);
            }
            if (Rule === "ReverseValidateOnSubmit") {
                var tempVal = Value
                var ids = DataItem.split(',');
                if (tempVal == "1") {
                    obj.setAttribute('data-onsubmititem', ids[1]);
                    Value = "2";
                }
                if (tempVal == "2") {
                    obj.removeAttribute('data-onsubmititem');
                    Value = "1";
                }
                DefaultRule(Value, Name);
            }
            if (Rule === "ValidateSharedTable") {
                if (DataItem === "validatetableactivities") {
                    AdditionalActivityInformation("activities");
                }
                if (DataItem === "validatetabledataroles") {
                    AdditionalRoleInformation("dataroles");
                }
            }
            if (Rule === "AAASL") {
                var Value = SLDoubleConditional(DataItem);
                var ids = DataItem.split(',');
                var element = document.getElementById(ids[0]);

                Value = CreateAAASLLabelInput(Value, element, ids[1]);
                DefaultRule(Value, element.name);
            }
            if (Rule === "OTAlert") {
                var OTAlert = "Please ensure that you provide details in the notification section";
                Value = ShowAlert(Value, OTAlert);
            }
            if (Rule === "OrganisationType") {
                document.getElementById("Private").hidden = true;
                document.getElementById("Else").hidden = true;
                var List = document.getElementById("Organisation.OrganisationType");
                List.disabled = false;
                OrganisationTypeOnChange(List, Value);                
            }
            if (Rule === "RemoveOrganisationName") {
                if (obj.options[obj.selected].value == "Private") {
                    document.getElementById("Organisation.Name").value = "";
                    debugger;
                }                    
            }
        } catch (ex) {
            //these rules need to be re-run regardless of the catch

            //console.log(ex);
            ////we expect this to fail for form elements with no change events but could use this later
        }
    }

    function CreateAAASLLabelInput(Value, Element, LabelId) {
        var conditional = " If you have answered 'No' then NZI are unable to offer this extension";
        var label = document.getElementById(LabelId);
        if (Value == "2" || Value == "both") {
            if (label == null) {
                label = AttachLabel(LabelId, conditional);
                Element.parentElement.parentElement.appendChild(label);
            }
            return "2";
        }
        if (Value == "1") {
            if (label != null) {
                Element.parentElement.parentElement.removeChild(label);
            }
            return "1";
        }
        return "0";
    }

    function OrganisationTypeOnChange(List, Value) {
        if (Value == "Advisor" || Value == "Personnel" || Value == "Principal") {
            //readonly Organisation Type personal
            for (var i = 0; i < List.options.length; i++) {
                if (List.options[i].value == "Person - Individual") {
                    List.options[i].selected = true;
                    option = List.options[i].text;
                }
            }
            List.disabled = true;
            var organisationUnit = document.getElementById(option);
            if (organisationUnit != null) {
                organisationUnit.hidden = false;
            }
        } else {
            document.getElementById("Else").hidden = false;        
        }

        DefaultRule("1", Value);
    }

    function AdditionalActivityInformation(Id) {
        var activities = document.getElementById(Id);
        var element;
        //convert to use selectedOptions
        for (var i = 0; i < activities.options.length; i++) {
            var additionalactivityId = activities.options[i].value;
            if (additionalactivityId == "CUS0029" || additionalactivityId == "CUS0039") {
                additionalactivityId = "CUS0018";
            }
            if (activities.options[i].selected === true) {
                element = document.getElementById(additionalactivityId);
                if (element != null) {
                    element.hidden = false;
                }
            } else {
                element = document.getElementById(additionalactivityId);
                if (element != null) {
                    element.hidden = true;
                }
            }
        }
        document.getElementById("noadditionalactivityinfolabel").hidden = false;
        var additionalinfotab = document.getElementById("RevenueTab3");
        for (var d = 1; d < additionalinfotab.children.length; d++) {
            if (additionalinfotab.children[d].hidden == false) {
                document.getElementById("noadditionalactivityinfolabel").hidden = true;
            }
        }
    }

    function AdditionalRoleInformation(Id) {
        var roles = document.getElementById(Id);

        document.getElementById("noadditionalroleinfolabel").hidden = false;
        document.getElementById("RoleOther").hidden = true;
        //convert to use selectedOptions
        for (var i = 0; i < roles.options.length; i++) {
            if (roles.options[i].selected === true) {
                var strArray = roles.options[i].text.split('-');
                var other = strArray[strArray.length - 1];
                if (other === " Other") {
                    document.getElementById("noadditionalroleinfolabel").hidden = true;
                    document.getElementById("RoleOther").hidden = false;
                }
            }
        }
    }

    function DoubleConditional(DataItem) {
        var ids = DataItem.split(',');
        var q1 = document.getElementById(ids[0]);
        var q2 = document.getElementById(ids[1]);

        if (q1.value == "1" && q2.value == "1") {
            return "1";
        }
        else if (q1.value == "2" && q2.value == "2") {
            return "2";
        }
        else if (q1.value == "2" && q2.value == "1" || q1.value == "1" && q2.value == "2") {
            //default to ?
            return "both";
        }
        else
            return "0";
    }

    function SLDoubleConditional(DataItem) {
        var ids = DataItem.split(',');
        var q1 = document.getElementById(ids[0]);

        if (q1.value == "1") {
            return "1";
        }
        else if (q1.value == "2") {
            return "2";
        } else
            return "0";
    }

    function BuildSharedTable(DataItem, Name) {
        var array = DataItem.split(',');
        var list = document.getElementById(array[0]);
        var tableElement = document.getElementById(array[1]);
        if (tableElement.children.length == 2) {
            tableElement.removeChild(tableElement.children[1]);
        }
        var tbdy = document.createElement('tbody');
        for (var t = 0; t < list.options.length; t++) {
            if (list.options[t].selected === true) {
                var tr = document.createElement('tr');
                var td1 = document.createElement('td');
                td1.appendChild(document.createTextNode(list[t].text));
                tr.appendChild(td1);
                var td2 = document.createElement('td');
                td2.innerHTML = CreateSharedInput(Name, list.options[t]);
                tr.appendChild(td2);
                tbdy.appendChild(tr);
            }
        }
        tableElement.appendChild(tbdy);
    }

    function CreateSharedInput(Id, element) {
        var input = document.createElement("input");
        input.setAttribute("name", Id + "." + element.value);
        input.setAttribute("id", element.text);
        input.setAttribute("class", "form-control");
        input.setAttribute("type", "number");
        input.setAttribute("data-rule", "ValidateSharedTable");
        input.setAttribute("data-item", "validatetable" + element.parentElement.id);
        input.setAttribute("onchange", "OnChange(this.id, this.name)");
        input.setAttribute("value", 0);
        return input.outerHTML;
    }

    function CreateCyberLabelInput(Value, Element, LabelId) {
        var conditional = "As you have answered no to one or both of the above questions then NZI are not able to provide Cyber Ultra cover and you will not be provided with an automatic quotation. Please contact your broker for more information.";
        var label = document.getElementById(LabelId);
        if (Value == "2" || Value == "both") {
            if (label == null) {
                label = AttachLabel(LabelId, conditional);
                Element.parentElement.parentElement.parentElement.appendChild(label);
            }
            return "2";
        }
        if (Value == "1") {
            if (label != null) {
                Element.parentElement.parentElement.parentElement.removeChild(label);
            }
            return "1";
        }
        return "2";
    }

    function IsElementHidden(Element) {
        var box = Element.getBoundingClientRect();
        if (box.top == 0 &&
            box.left == 0 &&
            box.right == 0 &&
            box.bottom == 0) {
            return true;
        }
        return false;
    }

    function AttachLabel(id, conditional) {
        var label = document.createElement('label');
        label.setAttribute("id", id);
        label.innerHTML = conditional;
        return label;
    }

    function HideElement(id) {
        var element = document.getElementById(id);
        if (element != null) {
            element.hidden = true;
        }
    }

    function ShowElement(id) {
        var element = document.getElementById(id);
        if (element != null) {
            element.hidden = false;
        }
    }

    function ClearObject(Id) {
        var obj = document.getElementById(Id);
        var Tag = obj.tagName;
        //here we can define the changes per type
        if (Tag == "SELECT") {
            for (var i = 0; i < obj.options.length; i++) {
                if (obj.options[i].selected === true) {
                    obj.options[i].selected = false;
                }
            }
            if (!obj.multiple) {
                obj.options[0].selected = true;
            }
        }
    }

    function ValidateTableValues(table) {
        var percentage = 0;
        for (var v = 0; v < table.length; v++) {
            percentage += parseInt(table[v].value);
        }
        if (percentage != 100) {
            alert("Percentage calculation does not equal to 100%");
            return false;
        }
        return true;
    }

    function ElementOnSubmit(Element, TargetElement, Form, Panel) {
        var tag = TargetElement.tagName;
        //hardcoded for project table
        if (tag == "TABLE") {
            if (TargetElement.rows.length < 2) {
                event.preventDefault();
                event.stopPropagation();
                $("#more").trigger("click");
                //go back to div// go back to accordion to get id
                var accordianId = Form.getAttribute('data-accordianId');
                window.alert("Please provide a project");
                $("[id='" + accordianId + "']").trigger("click");
                Element.scrollIntoView();
                throw accordianId + " incomplete";
            }
        }
    }

    function RoleDataOnSubmit(ElementId, Form) {
        var element = document.getElementById(ElementId);
        var tabId = element.parentElement.parentElement.parentElement.parentElement.id;
        var multiElement = element.selectedOptions.length;
        if (multiElement == 0) {
            event.preventDefault();
            event.stopPropagation();
            $("#more").trigger("click");
            var accordianId = Form.getAttribute('data-accordianId');
            $("[id='Roles']").trigger("click");
            window.alert("Roles not selected");
            SetCurrentTab(tabId);
            element.scrollIntoView();
            throw accordianId + " incomplete";
        } else {
            var tabNo = parseInt(tabId.substring(tabId.length - 1)) + 1;
            var nextTab = tabId.substring(0, tabId.length - 1);
            SetCurrentTab(nextTab + tabNo);
        }
    }

    function RevenueDataOnSubmit(ElementId, Form) {
        var element = document.getElementById(ElementId);
        var tabId = element.parentElement.parentElement.parentElement.parentElement.id;
        var totalPercentage = 0;
        var tableElement;
        for (var v = 0; v < element.selectedOptions.length; v++) {
            tableElement = document.getElementById(element.selectedOptions[v].text);
            var value = parseInt(tableElement.value);
            totalPercentage += value;
        }
        if (totalPercentage != 100) {
            try {
                tableElement.classList.remove("is-valid");
                tableElement.classList.add("is-invalid");
                event.preventDefault();
                event.stopPropagation();
                $("#more").trigger("click");
                var accordianId = Form.getAttribute('data-accordianId');
                $("[id='Fee Income / Activities']").trigger("click");
                window.alert("Activities or Territories percentage calculation does not equal to 100%");
                SetCurrentTab(tabId);
                element.scrollIntoView();
                throw accordianId + " incomplete";
            }
            catch (ex) {
                //assume the drop down is empty so divert back to income
                event.preventDefault();
                event.stopPropagation();
                $("#more").trigger("click");
                var accordianId = Form.getAttribute('data-accordianId');
                $("[id='Fee Income / Activities']").trigger("click");
                window.alert("Activities or Territories not selected");
                SetCurrentTab(tabId);
                element.scrollIntoView();
                throw accordianId + " incomplete";
            }

        }
        else {
            var tabNo = parseInt(tabId.substring(tabId.length-1))+1;
            var nextTab = tabId.substring(0, tabId.length - 1);
            SetCurrentTab(nextTab+tabNo);
        }
    }

    function ShowAlert(Value, show) {
        if (Value == "1") {
            if (show != null) {
                alert(show);
            }
            return Value;
        }
        return Value;
    }

</script>