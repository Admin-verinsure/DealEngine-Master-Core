@model BaseListViewModel<DealEngine.WebUI.Models.ProductModels.ProductInfoViewModel>


<!-- MAIN CONTENT -->
<div id="content">
    <!-- Bread crumb is created dynamically -->
    <!-- row -->
    <div class="row">
        <!-- col -->
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-file-o"></i> Products <span>
                    >
                    All Products
                </span>
            </h1>
        </div>
        <!-- end col -->
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-6">
                <!-- new widget -->
                <div class="jarviswidget jarviswidget-color-blue" id="wid-id-2" data-widget-editbutton="true" data-widget-colorbutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-comments txt-color-white"></i> </span>
                        <h2> Public Products </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <div class="widget-body no-padding smart-form">
                            <!-- content goes here -->
							@*@(Html.TableFor<DealEngine.WebUI.Models.Product.ProductInfoViewModel>()
								.Hover().Striped()
							    .Columns(column =>
							    {
							        column.Expression(p => p.Name).Title("Product Name");
							        column.Expression(p => p.DateCreated).Title("Date Created");
							        column.Expression(p => p.OwnerCompany).Title("Owner");
							        column.Commands(p => p.Id).View("ViewProduct").Custom("CloneProduct", "Clone").Class("btn btn-xs btn-default");
							    })
							    .DataSource(this.Model)
							)*@
						</div>
					</div>
				</div>
			</article>
		</div>
	</section>
</div>