@model DealEngine.WebUI.Models.ProductModels.ProductViewModel



<div id="content" class="container">
    <div class="card">
        <div class="card-header">
            <h2>Create a new Product</h2>
        </div>
        <div class="card-body">
            <form id="productform" method="post" class="needs-validation" novalidate action="../Product/CreateProduct">
                @Html.HiddenFor(m => Model.Description.OriginalProductId)
                @Html.HiddenFor(m => Model.Description.CreatorOrganisation)
                @Html.HiddenFor(m => Model.Description.OwnerOrganisation)
                @Html.DisplayFor(m => Model.Description.Description)

                <div class="form-group">
                    <table class="table table-striped">
                        <tbody>
                            <tr>
                                <td>
                                    <label><strong>Product Name</strong></label>
                                </td>
                                <td>
                                    @Html.TextBoxFor(t => t.Description.Name, new { placeholder = "Product Name", @class = "form-control", @required = "required" })                                    
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label><strong>Product Description</strong></label>
                                </td>
                                <td>
                                    @Html.TextBoxFor(t => t.Description.Description, new { placeholder = "Product Description", @class = "form-control" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label><strong>Select Base Product</strong></label>
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.Description.SelectedBaseProduct, Model.Description.BaseProducts, new { @class = "form-control", @required = "required"})
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label><strong>Select Languages</strong></label>
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.Description.SelectedLanguages, Model.Description.Languages, new { @class = "form-control", @required = "required" })                                    
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="form-group">
                    <table class="table">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th>Cover All</th>
                                <th>Cover Loss</th>
                                <th>Cover Interruption</th>
                                <th>Cover Third Party</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Risks.Count(); ++i)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => m.Risks[i].Insured, new { @class = "form-check-input"})</td>
                                    <td>@Html.HiddenFor(m => m.Risks[i].Id)</td>
                                    <td>
                                        @Html.CheckBoxFor(m => m.Risks[i].CoverAll, new { @class = "form-check-input"})
                                    </td>
                                    <td>
                                        @Html.CheckBoxFor(m => m.Risks[i].CoverLoss, new { @class = "form-check-input"})
                                    </td>
                                    <td>
                                        @Html.CheckBoxFor(m => m.Risks[i].CoverInterruption, new { @class = "form-check-input"})
                                    </td>
                                    <td>
                                        @Html.CheckBoxFor(m => m.Risks[i].CoverThirdParty, new { @class = "form-check-input"})
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Settings.SelectedDocuments, "Clone Documents")
                    @Html.ListBoxFor(m => m.Settings.SelectedDocuments, Model.Settings.Documents, new { @class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.DropDownListFor(m => m.Settings.SelectedInformationSheet, Model.Settings.InformationSheets, new { @class = "form-control", @required = "required" })                    
                </div>
                <div class="form-group">
                    @Html.DropDownListFor(m => m.Settings.SelectedOwnerOrganisation, Model.Settings.PossibleOwnerOrganisations, new { @class = "form-control", @required = "required" })                    
                </div>
                @if (Model.Settings.SelectedInsuranceProgramme != null)
                {
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.Settings.SelectedInsuranceProgramme, Model.Settings.InsuranceProgrammes, new { @class = "form-control", @required = "required" })                
                    </div>
                }
            </form>
        </div>
    </div>
</div>