# Runner server requires following for build!
# dotnet-sdk-3.1
# dotnet-sdk-2.2

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - 'dotnet clean'
    - 'dotnet build -c Release'

deploy_staging:
  stage: deploy
  script:
  - sed -i 's/https:\/\/localhost:44323/https:\/\/$URLdevops/g' /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/wwwroot/ckeditor/ckeditor5-build-classic-tc/build/ckeditor.js
  - eval "$(ssh-agent -s)"
  - ssh-add <(echo "$PKgitlab")
  - ssh ubuntu@"$URLdevops" './DE-DeployPrep.sh'
  - 'dotnet publish -c Release'
  - rsync -azhe ssh /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/bin/Release/netcoreapp3.1/ ubuntu@$URLdevops:/home/ubuntu/projects/dealengine
  - ssh ubuntu@"$URLdevops" './DE-DeployFin.sh'

  environment:
    name: staging
    url: https://devops.techcertain.com
  when: manual
  dependencies:
    - build
    
deploy_demo:
  stage: deploy
  script:
  - eval "$(ssh-agent -s)"
  - ssh-add <(echo "$PKgitlab")
  - ssh ubuntu@"$URLdemo" './DE-DeployPrep.sh'
  - 'dotnet publish -c Release'
  - rsync -azhe ssh /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/bin/Release/netcoreapp3.1/ ubuntu@$URLdemo:/home/ubuntu/projects/dealengine
  - ssh ubuntu@"$URLdemo" './DE-DeployFin.sh'

  environment:
    name: demo
    url: https://demo.proposalonline.com
  when: manual
  dependencies:
    - build

# useful for first time connection (- ssh -o StrictHostKeyChecking=no ubuntu@"$URLmpak" 'command') 

deploy_professionalrisks:
  stage: deploy
  script:
  - eval "$(ssh-agent -s)"
  - ssh-add <(echo "$PKgitlab")
  - ssh ubuntu@"$URLprorisks" './DE-DeployPrep.sh'
  - cp ~/general/_LoginText.cshtml /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/Views/Account/_LoginText.cshtml
  - 'dotnet publish -c Release'
  - rsync -azhe ssh /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/bin/Release/netcoreapp3.1/ ubuntu@$URLprorisks:/home/ubuntu/projects/dealengine
  - ssh ubuntu@"$URLprorisks" './DE-DeployFin.sh'

  environment:
    name: professionalrisks
    url: https://professionalrisks.online
  when: manual
  dependencies:
    - build

deploy_stagingprofessionalrisks:
  stage: deploy
  script:
  - eval "$(ssh-agent -s)"
  - ssh-add <(echo "$PKgitlab")
  - ssh ubuntu@"$URLstagingprorisks" './DE-DeployPrep.sh'
  - cp ~/general/_LoginText.cshtml /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/Views/Account/_LoginText.cshtml
  - 'dotnet publish -c Release'
  - rsync -azhe ssh /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/bin/Release/netcoreapp3.1/ ubuntu@$URLstagingprorisks:/home/ubuntu/projects/dealengine
  - ssh ubuntu@"$URLstagingprorisks" './DE-DeployFin.sh'

  environment:
    name: stagingprofessionalrisks
    url: https://staging.professionalrisks.online
  when: manual
  dependencies:
    - build

deploy_stagingdetai:
  stage: deploy
  script:
  - eval "$(ssh-agent -s)"
  - ssh-add <(echo "$PKgitlab")
  - ssh -o StrictHostKeyChecking=no ubuntu@"$URLstagingdetai" './DE-DeployPrep.sh'
  - cp ~/general/_LoginText.cshtml /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/Views/Account/_LoginText.cshtml
  - 'dotnet publish -c Release'
  - rsync -azhe ssh /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/bin/Release/netcoreapp3.1/ ubuntu@$URLstagingdetai:/home/ubuntu/projects/dealengine
  - ssh ubuntu@"$URLstagingdetai" './DE-DeployFin.sh'

  environment:
    name: stagingdetai
    url: https://staging-de.tai.co.nz
  when: manual
  dependencies:
    - build

deploy_mydealslive:
  stage: deploy
  script:
  - eval "$(ssh-agent -s)"
  - ssh-add <(echo "$PKgitlab")
  - ssh -o StrictHostKeyChecking=no ubuntu@"$URLmydealslive" './DE-DeployPrep.sh'
  - 'dotnet publish -c Release'
  - rsync -azhe ssh /home/gitlab-runner/builds/MsHgSUxs/0/tcdev/dealengine/DealEngine.WebUI/bin/Release/netcoreapp3.1/ ubuntu@$URLmydealslive:/home/ubuntu/projects/dealengine
  - ssh ubuntu@"$URLmydealslive" './DE-DeployFin.sh'

  environment:
    name: mydealslive
    url: https://staging.mydealslive.com
  when: manual
  dependencies:
    - build
    
    
